apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-06T09:58:14Z"
    generateName: nginx-app-574c46d4d9-
    labels:
      app: nginx-app
      pod-template-hash: 574c46d4d9
    name: nginx-app-574c46d4d9-2jtrg
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-app-574c46d4d9
      uid: 4bd8a6b0-efd7-4e04-ae21-6f3352d00816
    resourceVersion: "1749203898002799007"
    uid: 04f1bde4-bace-44c5-9afd-94598b989e85
  spec:
    containers:
    - image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606095759
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          ephemeral-storage: 1Gi
        requests:
          cpu: 500m
          ephemeral-storage: 1Gi
          memory: 2Gi
      securityContext:
        capabilities:
          drop:
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-554mr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-554mr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:17Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:14Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://192d11ebbffd8e82d2b4e8dde503624f669c828b11e3f02b58970a131d0ef312
      image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606095759
      imageID: gcr.io/turnkey-lacing-462106-b1/nginx-custom@sha256:b20ccf10afd7cca0fe038dedfb4dba1104abb186b48d39ede9259340da329377
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T09:58:17Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-554mr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.28
    podIPs:
    - ip: 10.35.128.28
    qosClass: Burstable
    startTime: "2025-06-06T09:58:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-06T09:58:19Z"
    generateName: nginx-app-574c46d4d9-
    labels:
      app: nginx-app
      pod-template-hash: 574c46d4d9
    name: nginx-app-574c46d4d9-rd7c4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-app-574c46d4d9
      uid: 4bd8a6b0-efd7-4e04-ae21-6f3352d00816
    resourceVersion: "1749203901037343010"
    uid: 0393cbd4-bcc2-499f-9126-b2e5c142e4fe
  spec:
    containers:
    - image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606095759
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources:
        limits:
          ephemeral-storage: 1Gi
        requests:
          cpu: 500m
          ephemeral-storage: 1Gi
          memory: 2Gi
      securityContext:
        capabilities:
          drop:
          - NET_RAW
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wp7d5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wp7d5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T09:58:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fe6b32281959633189246ca313d49e784d6ba2baaad72e2e8e77f08711206d27
      image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606095759
      imageID: gcr.io/turnkey-lacing-462106-b1/nginx-custom@sha256:b20ccf10afd7cca0fe038dedfb4dba1104abb186b48d39ede9259340da329377
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T09:58:20Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wp7d5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.29
    podIPs:
    - ip: 10.35.128.29
    qosClass: Burstable
    startTime: "2025-06-06T09:58:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.0
    creationTimestamp: "2025-06-06T06:59:59Z"
    generateName: collector-
    labels:
      app: managed-prometheus-collector
      app.kubernetes.io/name: collector
      app.kubernetes.io/version: 0.15.3
      controller-revision-hash: 74c5959cb5
      pod-template-generation: "1"
    name: collector-2q2qx
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: collector
      uid: 7aa1ffda-6610-4c96-9f9e-3e5636ded072
    resourceVersion: "1749193244869951019"
    uid: 9f3e83a7-a4da-437c-896a-15e15113c4f7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/prometheus/config_out/config.yaml
      - --enable-feature=exemplar-storage
      - --enable-feature=google-kubernetes-secret-provider
      - --storage.tsdb.path=/prometheus/data
      - --storage.tsdb.no-lockfile
      - --gmp.storage.delete-data-on-start
      - --storage.tsdb.retention.time=30m
      - --storage.tsdb.wal-compression
      - --storage.tsdb.min-block-duration=10m
      - --storage.tsdb.max-block-duration=10m
      - --web.listen-address=:19090
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --export.user-agent-mode=gke
      - --log.format=json
      env:
      - name: GOGC
        value: "25"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.11-gke.0@sha256:3ba777873a3267c008049297c4e2292a27e7dbeebdae292f99b7af261175c54f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus
      ports:
      - containerPort: 19090
        name: prom-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 1G
        requests:
          cpu: 4m
          memory: 32M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qld4l
        readOnly: true
    - args:
      - --config-file=/prometheus/config/config.yaml
      - --config-file-output=/prometheus/config_out/config.yaml
      - --reload-url=http://127.0.0.1:19090/-/reload
      - --ready-url=http://127.0.0.1:19090/-/ready
      - --listen-address=:19091
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 19091
        name: cfg-rel-metrics
        protocol: TCP
      resources:
        limits:
          memory: 32M
        requests:
          cpu: 1m
          memory: 4M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qld4l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - touch /prometheus/config_out/config.yaml
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
      imagePullPolicy: IfNotPresent
      name: config-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qld4l
        readOnly: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: collector
    serviceAccountName: collector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: storage
    - configMap:
        defaultMode: 420
        name: collector
      name: config
    - emptyDir: {}
      name: config-out
    - name: collection-secret
      secret:
        defaultMode: 420
        secretName: collection
    - name: kube-api-access-qld4l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://057a0cd5d4338700fa23386a8e3fc0216be5d49b5606f842e4f4e2ac524da4d7
      image: sha256:3607cdb2677bbbc2bcd0148a072aaa5be8765d47eb4cbdefd13c84facc63835f
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:44Z"
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qld4l
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://269ef60a6a0f90f756cd37f8f256d9a8ee4a6cc965a56ceeed9da0022b1ea3e6
      image: sha256:fa6f21fd39ce7d2b07a0c2bb5367806c7dc4e8580b9b3bb57ebab3ebd53a9a3d
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus@sha256:3ba777873a3267c008049297c4e2292a27e7dbeebdae292f99b7af261175c54f
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:43Z"
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qld4l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    initContainerStatuses:
    - containerID: containerd://73a387c5cbb4b8850aa29d9008ad90b88d66f00ae03c15f291034205655c3b93
      image: sha256:75f37bf83140b593bab3f4f6aa67cdb23c49337f5592b205ad4de02452dc5b10
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
      lastState: {}
      name: config-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://73a387c5cbb4b8850aa29d9008ad90b88d66f00ae03c15f291034205655c3b93
          exitCode: 0
          finishedAt: "2025-06-06T07:00:33Z"
          reason: Completed
          startedAt: "2025-06-06T07:00:33Z"
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qld4l
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.35.128.18
    podIPs:
    - ip: 10.35.128.18
    qosClass: Burstable
    startTime: "2025-06-06T07:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.0
    creationTimestamp: "2025-06-06T06:47:07Z"
    generateName: gmp-operator-66b9979cfd-
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.3
      pod-template-hash: 66b9979cfd
    name: gmp-operator-66b9979cfd-vbdbw
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gmp-operator-66b9979cfd
      uid: e476d455-8edb-481e-97e4-14249ca711b6
    resourceVersion: "1749193219822943023"
    uid: 336b6687-138a-454d-b018-9783da279227
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - arm64
              - amd64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    automountServiceAccountToken: true
    containers:
    - args:
      - --operator-namespace=gke-gmp-system
      - --public-namespace=gmp-public
      - --webhook-addr=:10250
      - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVLekNDQXBPZ0F3SUJBZ0lSQUo1OE1uMUM0dDhmZkp3UmdXS0xaRkV3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05URXlOall6TWpVdE5EaG1NUzAwWkdJNExXSmtOVFV0TW1RMk1EWmtaakU0TTJVeApNQjRYRFRJMU1EWXdOakEyTXpnek0xb1hEVE13TURZd05UQTJOREF6TTFvd09ERTJNRFFHQTFVRUF4TXRaMjF3CkxXOXdaWEpoZEc5eUxtZHJaUzFuYlhBdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdG90TDV0UFdjNjJ4TlRTYXNxdjZhaU1wU3MrRQpsZVY2elRwcnB4ZkJ2dlQxMTZqSG1XQlFlSmNubGhxRTVxMTBYNnRMeDRxTitza1o3MURlUEZsaHZ3WTlKU3F1CngzQlJkc0lBL1dGVmVzcnM2eHNtTjRVWS9vS2lUU1RFQnpJQWY4U2dJZWJBbG95Zmordm9lVGozUWRGVk9KeEoKSExjd1Ywd0NtVjFJN3JkeVU5ZW1iRXFxalp6QXlpQ3ZHdFM1NmdpZTM4bTdVZ3JMeFlsQi9zdlJOVGhWUDJ0dQo0SUhLMzJKWUhTVjNQT2dYczhNNWpGRUNDQWtiWEFiNEFUaXNpbnJ5aFUxM2o0emRuQW8rbUlRUnJXZFArWUgvCkZKcHBWNEpBN1ExSURSOC9FU1ZXUGNaVEpRZ2ZBVmdOSWFEejBacHhaY0RpZzNEbG9zNHNoWlpUdndJREFRQUIKbzRHNE1JRzFNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSVWlKTHgvcG1DSzh5ZFZiZEF4a2pFCnZDNWloekJWQmdOVkhSRUVUakJNZ2d4bmJYQXRiM0JsY21GMGIzS0NHMmR0Y0MxdmNHVnlZWFJ2Y2k1bmEyVXQKWjIxd0xYTjVjM1JsYllJZloyMXdMVzl3WlhKaGRHOXlMbWRyWlMxbmJYQXRjM2x6ZEdWdExuTjJZekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVlFQWtyZk1VQUt0UkdBU3o5bkFHUEYzRVlUWHJpVC9BalVwTVowYkU1Y1FaVWJ6CldoK29iMDcyRlVhWm1tWnByNTVzR0ZLcVJtVE9lOFk4Y3cwZFhNa1BqVUoyRzJBY09iNVQ4TThxczM0NXJqL2kKZXNPeVAvSm14VXpIWUZFL3A2VHVTVDdVZi9Ib0xseFU3VzQ2bUlCZERJMk5xZFhWelY3ZmFxSG4xdWJuUGd2MwpvL2JpQ3RXdFVtN1dxb2l5enptSXBJeWd2WEd6R0o2Mk9CazZjajRoVHJRMFV1Rnk1TFhERlhGVkN4dm54S3hkClViWW9jZ3NLWW5GdmNINWFSbUlMcFk1R0xZL1pzcWMvUnJYVVA3blVtYml3WkMzdWNnRHMxSUUwb0o5QWZmSzIKc3J3Q3o5RW1rY2dDY3ltUWp1UTJSQi80cEd0WnI0Z1JtWWJGeG1XT253WjhDVzRxZmEwTVQ2bU5WOEZaOWtCVAo5a05CYzlVRzI4U3hQdlVRZWl6K0tKNml2RGo3WHlkVFR3azkvcjZvY3R1bml2UVhGajFoZG1KL2YyMGQrSmtMClNXSjk3R1VRTkQ4TFJhYXJzangwM0x3ZnRHR3QrTExzNjczL3YzWkxlK2QvWStKR2owcitpdDZUc0xRODh6TFIKaHZRVW5HQ2c3NklublRjajVFT2oKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdG90TDV0UFdjNjJ4TlRTYXNxdjZhaU1wU3MrRWxlVjZ6VHBycHhmQnZ2VDExNmpICm1XQlFlSmNubGhxRTVxMTBYNnRMeDRxTitza1o3MURlUEZsaHZ3WTlKU3F1eDNCUmRzSUEvV0ZWZXNyczZ4c20KTjRVWS9vS2lUU1RFQnpJQWY4U2dJZWJBbG95Zmordm9lVGozUWRGVk9KeEpITGN3VjB3Q21WMUk3cmR5VTllbQpiRXFxalp6QXlpQ3ZHdFM1NmdpZTM4bTdVZ3JMeFlsQi9zdlJOVGhWUDJ0dTRJSEszMkpZSFNWM1BPZ1hzOE01CmpGRUNDQWtiWEFiNEFUaXNpbnJ5aFUxM2o0emRuQW8rbUlRUnJXZFArWUgvRkpwcFY0SkE3UTFJRFI4L0VTVlcKUGNaVEpRZ2ZBVmdOSWFEejBacHhaY0RpZzNEbG9zNHNoWlpUdndJREFRQUJBb0lCQUZabGMxVWFxZ015RUE4bwppSmRNQWtjOXdRdGhVRlZKdVdkczRRckNtYlp4WmZIZU5pb0hoYzZ0YTlVRlZDV0JydlNndEVzSzdzdmxabHI0CklWYmF6d0tFUjJoUjNVc1RnOXI3VTFDWlFzWE5TWGkwN3MrVU5SSXdiZlNwRkFaN3lmU3U4VU5hWFloam9obVMKQkFOcnpNcmY4ci9LYUdnbzQ3NU5nV1ZvMjEzdnRCTVZEdlZmNVJOSkxrTUw4TGVxMGp2bmd4aWZJUENOUXRubQpTbW1Ua1ltSXMyYkVzcFVhQUhpajNzMWRjZUJtMGtNaEw5aWgyeHU1dVB2eCtlLzZxWEZGczZRN1JWOGxKTnlqCkhuQkhDVkp1eGtaWDg1K0REbERUUXk5SXMzaUx0ZmpvV09MRjRjanY2dVlnTHROUUk5MFZJL0Nac0FyZUtOeDYKVk5SMHZIRUNnWUVBNTdxT2NweVNMY2V0Q2l2b2hrWmhqUDlqOVJnQU1jUk01aDdKOTVaQ2dpTkVnQ0tkQ1NHbApsYmxoa0ZhdksraVpqVVoxcWQ1R3Z4MEFzQ1dheTNlRmtuaHBXMUgzTG1kWVp1SUh5ZW9zN3FReXc4SmFKdk5lCkphS21GcDNDRmJyWjhIK2ZIUVFaUWdwRFFuTHAyM2Y2MTV4eHM4TEprMVp4aWczbkF0NEtTT3NDZ1lFQXlhbnUKZzkxVTNkOFhHZ2o3WnAzN2E5bWNUWG1ISXBhblZtb2IrT3FvV1RacDJMY2dCeFVKT1hmR0RnQVoxTEt6dERCZAppQkppeFltdjJ2YnliRFE1U2M3Y2N0SVc1MmJnUTRxbkNKNGVhRHhidGorV3I1eFY2c1VzQmhzN3FGMnF3SG1hCmkzZlprRmpGSUlOeDFZYitZS0k1NGZQLzc5aU1ZQmxrSTdTajYzMENnWUJVTWhCM3pEUEF0b0JFNWRkQ2ttZjMKVndQMmxaWGNmenFCa2taSDB5eXZKQ2xMZFVnaGZUd3d2bjZZZHlhR2lhamhEK3pJbjU2TTZmaktCNS9LdGM2dQpmVm1xZUltYkxxbU1HQ3hFVFBXdWI3S1NOaGVUZDNHSnN5TXRySHhNY091bTJuZnhqdit1WXhRMUhKT2p6bUF4CjN3SGhFckV5KzRHZGE1ZTREdjBscVFLQmdHQmJNNzRKK1V6eUZZVzVHUFpWTWhhOEtYVFRSb0IrWDRKb3ZPalkKcG92SjloVTRtck1IbUJxL1lnQzZoNTBicmNYQS9rL1FDU1c5dmlydnA3R1AybmVyd2FXVFFLSmNnM2VDUG9GZAptOFhPWVR2WmNsU0NiSUw2cHloYnhzdVJ4YzZseS9RcjFlYWtvN3YvVWxybVg1RW9zbU9HUkpvRGJEOVdvb1IxCkFZVzVBb0dBQTI3SUJyWGt2VW4vS29SZVNvYkllZS9XcVRQOWgxUWlCcHJvbWJrcmx5L3VNd1g4UTkrYXJrR28KL3RPNURUQ3kvU0RDbGZ2cjkrRTMzQlREYi9jVXZSTHEwNDFybVp3T1dMSTgrUFN3UlVXOGYxLythZkZWQnVBNQp0T3hjYmJud045dVY1WUdRTDg3dHdEZ21ibEJXdUplc3pRS3NBL0cxU2J0V0lTVDNNaFE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
      - --project-id=turnkey-lacing-462106-b1
      - --location=us-central1
      - --cluster=autopilot-cluster-2
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.3-gke.0@sha256:0e51d4ab84bac684012b2b52a2d38f3c340b4647f3879b77d70ae18ac4bb7271
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 18081
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: operator
      ports:
      - containerPort: 10250
        name: web
        protocol: TCP
      - containerPort: 18080
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 18081
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 2G
        requests:
          cpu: 1m
          memory: 16M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bstd6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: gke.io/optimize-utilization-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: operator
    serviceAccountName: operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: certs
    - name: kube-api-access-bstd6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://544ba3031857547606f48198321a4b27f42cc791e8cb4625dbf6661260a7df0f
      image: sha256:43d101b2120673d521ab1adce35a454084186e5e6fd9cc9fdb8e142f7f1591be
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator@sha256:0e51d4ab84bac684012b2b52a2d38f3c340b4647f3879b77d70ae18ac4bb7271
      lastState: {}
      name: operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:18Z"
      volumeMounts:
      - mountPath: /etc/tls/private
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bstd6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.15
    podIPs:
    - ip: 10.35.128.15
    qosClass: Burstable
    startTime: "2025-06-06T07:00:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: cluster-infra-metrics
      components.gke.io/component-version: 1.32.2-gke.2
    creationTimestamp: "2025-06-06T06:45:41Z"
    generateName: kube-state-metrics-
    labels:
      app.kubernetes.io/name: gke-managed-kube-state-metrics
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: kube-state-metrics-55674c75b4
      statefulset.kubernetes.io/pod-name: kube-state-metrics-0
    name: kube-state-metrics-0
    namespace: gke-managed-cim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kube-state-metrics
      uid: 9ecb598b-282d-43ca-9b1f-8f12e9081c1b
    resourceVersion: "1749193236709599013"
    uid: f8f9b32c-ee56-4ecd-a99c-8ac2c2dc2da7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - --pod=$(POD_NAME)
      - --pod-namespace=$(POD_NAMESPACE)
      - --port=8080
      - --telemetry-port=8081
      - --resources=pods,persistentvolumes,persistentvolumeclaims,horizontalpodautoscalers,daemonsets,deployments,statefulsets
      - --metric-allowlist=kube_persistentvolume_capacity_bytes,kube_persistentvolume_status_phase,kube_persistentvolume_claim_ref,kube_persistentvolume_info,kube_persistentvolumeclaim_info,kube_persistentvolumeclaim_resource_requests_storage_bytes,kube_persistentvolumeclaim_status_phase,kube_pod_status_phase,kube_pod_container_status_waiting_reason,kube_pod_container_status_ready,kube_pod_status_unschedulable,kube_deployment_spec_replicas,kube_deployment_status_replicas_available,kube_deployment_status_replicas_updated,kube_statefulset_replicas,kube_statefulset_status_replicas_ready,kube_statefulset_status_replicas_updated,kube_daemonset_status_number_misscheduled,kube_daemonset_status_number_ready,kube_daemonset_status_desired_number_scheduled,kube_daemonset_status_updated_number_scheduled,kube_horizontalpodautoscaler_status_desired_replicas,kube_horizontalpodautoscaler_status_current_replicas,kube_horizontalpodautoscaler_spec_target_metric,kube_horizontalpodautoscaler_spec_min_replicas,kube_horizontalpodautoscaler_spec_max_replicas,kube_horizontalpodautoscaler_status_condition,kube_jobset_specified_replicas,kube_jobset_ready_replicas,kube_jobset_succeeded_replicas,kube_jobset_failed_replicas,kube_jobset_active_replicas,kube_jobset_suspended_replicas,kube_jobset_status_condition
      - --namespaces-denylist=kube-system,kube-node-lease,gmp-system,gke-gmp-system,gke-managed-system,gke-managed-cim
      - --custom-resource-state-config-file=/conf/custom-resource-state-config.yaml
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics:v2.14.0-gke.7@sha256:a04b8b5132e3c5148a420d93a4e9ea6d0f0faa14ac01852b23467d0573ca64b4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: k8s-objects
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kube-state-metrics-cr-metrics-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7fjg
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: ksm-metrics-collector
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/ksm-metrics-collector-config-data.textproto
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241204_2300_RC0@sha256:2b0c03b2bb9415fe38c799f9088e0c9fa6407c06e357cf767903fd16cbfc65b9
      imagePullPolicy: IfNotPresent
      name: ksm-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: ksm-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7fjg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: kube-state-metrics-0
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-state-metrics
    serviceAccountName: kube-state-metrics
    subdomain: kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: ksm-metrics-collector-config-data
          path: ksm-metrics-collector-config-data.textproto
        name: ksm-metrics-collector-config-map
      name: ksm-metrics-collector-config-map-vol
    - configMap:
        defaultMode: 420
        items:
        - key: custom-resource-state-config.yaml
          path: custom-resource-state-config.yaml
        name: kube-state-metrics-cr-metrics
      name: kube-state-metrics-cr-metrics-vol
    - name: kube-api-access-h7fjg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://99629e4c543bcacfe618b69d8b6c8c5d49dd4deafc80dcf7f4d20c982154125b
      image: sha256:d120591225dee913afec368e5acdc262ef194d987a5d4171d9badaa3f1fbbe9e
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:2b0c03b2bb9415fe38c799f9088e0c9fa6407c06e357cf767903fd16cbfc65b9
      lastState: {}
      name: ksm-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:25Z"
      volumeMounts:
      - mountPath: /conf
        name: ksm-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7fjg
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://8acb635c81e373e6d771b57c0849f40ffa10e881fc2fa3ff42ae945697757541
      image: sha256:9fcfc53ad87e705a037b75565a0329dccf24af459a9c133a696b0355d75e6e40
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics@sha256:a04b8b5132e3c5148a420d93a4e9ea6d0f0faa14ac01852b23467d0573ca64b4
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:23Z"
      volumeMounts:
      - mountPath: /conf
        name: kube-state-metrics-cr-metrics-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7fjg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.17
    podIPs:
    - ip: 10.35.128.17
    qosClass: Burstable
    startTime: "2025-06-06T07:00:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      components.gke.io/component-name: advanceddatapath
      components.gke.io/component-version: 32.3.31
      prometheus.io/port: "9990"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-06T06:59:57Z"
    generateName: anetd-l-
    labels:
      controller-revision-hash: b7c9998f5
      k8s-app: cilium
      pod-template-generation: "1"
    name: anetd-l-txs52
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: anetd-l
      uid: 8b258c4b-e38a-4420-96db-6ca53d460ba1
    resourceVersion: "1749193215372095020"
    uid: f34f5367-f702-41d7-b0ce-9098aa8f1461
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    automountServiceAccountToken: false
    containers:
    - args:
      - |
        exec {BASH_XTRACEFD}>&1 && set -x

        if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
            && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
            && [[ -n "$${MTU_DEVICE_IP}" ]]; then
          # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
          mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

          # Check if we could retrive a number in 'mtu'
          if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
            mtuArg="--mtu=$${mtu}"
          fi
        fi

        exec /usr/bin/cilium-agent \
          --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
          --config-dir="$${CILIUM_CONFIG_MAP}" \
          $${mtuArg:-}
      command:
      - bash
      - -euc
      env:
      - name: GOPS_CONFIG_DIR
        value: /.config
      - name: K8S_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CILIUM_K8S_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CILIUM_FLANNEL_MASTER_DEVICE
        valueFrom:
          configMapKeyRef:
            key: flannel-master-device
            name: cilium-config
            optional: true
      - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
        valueFrom:
          configMapKeyRef:
            key: flannel-uninstall-on-exit
            name: cilium-config
            optional: true
      - name: MTU_DEVICE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CILIUM_CONFIG_MAP
        value: /tmp/cilium/config-map
      - name: CILIUM_CLUSTERMESH_CONFIG
        value: /var/lib/cilium/clustermesh/
      - name: CILIUM_CNI_CHAINING_MODE
        valueFrom:
          configMapKeyRef:
            key: cni-chaining-mode
            name: cilium-config
            optional: true
      - name: CILIUM_CUSTOM_CNI_CONF
        valueFrom:
          configMapKeyRef:
            key: custom-cni-conf
            name: cilium-config
            optional: true
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 60
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: cilium-agent
      ports:
      - containerPort: 9965
        hostPort: 9965
        name: flowmetrics
        protocol: TCP
      - containerPort: 9879
        hostPort: 9879
        name: agenthealth
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 200m
          memory: 700Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - SYS_MODULE
        privileged: true
      startupProbe:
        failureThreshold: 105
        httpGet:
          host: 127.0.0.1
          httpHeaders:
          - name: brief
            value: "true"
          path: /healthz
          port: agenthealth
          scheme: HTTP
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /.config
        name: gops-config-dir
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
      - mountPath: /host/etc/cni/net.d
        name: etc-cni-netd
      - mountPath: /var/lib/cilium/clustermesh
        name: clustermesh-secrets
        readOnly: true
      - mountPath: /tmp/cilium/config-map
        name: cilium-config-path
        readOnly: true
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/log/network
        name: network-log
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
      - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
        name: kubelet-pki
        readOnly: true
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: cilium-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
      imagePullPolicy: IfNotPresent
      name: cilium-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: cilium-agent-metrics-collector-config-map-vol
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /install-plugin.sh
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      name: install-cni-binaries
      resources:
        requests:
          cpu: 100m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-path
    - command:
      - /init-container.sh
      env:
      - name: CILIUM_ALL_STATE
        valueFrom:
          configMapKeyRef:
            key: clean-cilium-state
            name: cilium-config
            optional: true
      - name: CILIUM_BPF_STATE
        valueFrom:
          configMapKeyRef:
            key: clean-cilium-bpf-state
            name: cilium-config
            optional: true
      - name: CILIUM_WAIT_BPF_MOUNT
        valueFrom:
          configMapKeyRef:
            key: wait-bpf-mount
            name: cilium-config
            optional: true
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      imagePullPolicy: IfNotPresent
      name: clean-cilium-state
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/fs/bpf
        mountPropagation: HostToContainer
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 1
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: gops-config-dir
    - hostPath:
        path: /var/lib/kubelet/pki/
        type: Directory
      name: kubelet-certs
    - hostPath:
        path: /var/lib/kubelet/kubeconfig
        type: File
      name: kubelet-credentials
    - hostPath:
        path: /etc/srv/kubernetes/pki/ca-certificates.crt
        type: File
      name: kubelet-pki
    - hostPath:
        path: /etc/ssl/certs/
        type: Directory
      name: ca-certificates
    - hostPath:
        path: /home/kubernetes/bin/gke-exec-auth-plugin
        type: File
      name: gke-exec-auth-plugin
    - hostPath:
        path: /var/run/cilium
        type: DirectoryOrCreate
      name: cilium-run
    - hostPath:
        path: /sys/fs/bpf
        type: DirectoryOrCreate
      name: bpf-maps
    - hostPath:
        path: /home/kubernetes/bin
        type: DirectoryOrCreate
      name: cni-path
    - hostPath:
        path: /etc/cni/net.d
        type: DirectoryOrCreate
      name: etc-cni-netd
    - hostPath:
        path: /lib/modules
        type: DirectoryOrCreate
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/log/network
        type: DirectoryOrCreate
      name: network-log
    - name: clustermesh-secrets
      secret:
        defaultMode: 420
        optional: true
        secretName: cilium-clustermesh
    - name: cilium-config-path
      projected:
        defaultMode: 420
        sources:
        - configMap:
            name: cilium-config
        - configMap:
            name: cilium-hubble-config
        - configMap:
            name: cilium-config-emergency-override
    - configMap:
        defaultMode: 420
        items:
        - key: cilium-agent-metrics-collector-config-data
          path: cilium-agent-metrics-collector-config-data.textproto
        - key: cilium-agent-hubble-metrics-collector-config-data
          path: cilium-agent-hubble-metrics-collector-config-data.textproto
        name: cilium-agent-metrics-collector-config-map
      name: cilium-agent-metrics-collector-config-map-vol
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1468a4a0913cd3b711968c307a3d9758ab54fb6140cc3fb0fbf979b750e61f3c
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: cilium-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:02Z"
      volumeMounts:
      - mountPath: /.config
        name: gops-config-dir
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
      - mountPath: /host/etc/cni/net.d
        name: etc-cni-netd
      - mountPath: /var/lib/cilium/clustermesh
        name: clustermesh-secrets
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp/cilium/config-map
        name: cilium-config-path
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/log/network
        name: network-log
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
        name: kubelet-pki
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://2b22857dc290426fb48c3d3fe352c1f7ad5e2539ae6e9c883432a815ef5686a6
      image: asia.gke.gcr.io/gke-metrics-collector:20241015_2300_RC0
      imageID: asia.gcr.io/gke-release-staging/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
      lastState: {}
      name: cilium-agent-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:04Z"
      volumeMounts:
      - mountPath: /conf
        name: cilium-agent-metrics-collector-config-map-vol
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    initContainerStatuses:
    - containerID: containerd://5f3c478fe39bc40d329f0357d679816b8c865bb773f8ea55a217cb66ebf6f95a
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: install-cni-binaries
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5f3c478fe39bc40d329f0357d679816b8c865bb773f8ea55a217cb66ebf6f95a
          exitCode: 0
          finishedAt: "2025-06-06T07:00:00Z"
          reason: Completed
          startedAt: "2025-06-06T06:59:59Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-path
    - containerID: containerd://108726585130a7906ada3b695aba9694d6f31c83230b6e285125dad1698c0737
      image: asia.gke.gcr.io/cilium/cilium:v1.16.8-gke1.32-gke.13
      imageID: asia.gcr.io/gke-release-staging/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
      lastState: {}
      name: clean-cilium-state
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://108726585130a7906ada3b695aba9694d6f31c83230b6e285125dad1698c0737
          exitCode: 0
          finishedAt: "2025-06-06T07:00:01Z"
          reason: Completed
          startedAt: "2025-06-06T07:00:01Z"
      volumeMounts:
      - mountPath: /sys/fs/bpf
        name: bpf-maps
      - mountPath: /var/run/cilium
        name: cilium-run
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: networkpolicy-antrea
      components.gke.io/component-version: 0.4.3
    creationTimestamp: "2025-06-06T06:47:26Z"
    generateName: antrea-controller-horizontal-autoscaler-789fd58764-
    labels:
      k8s-app: antrea-controller-autoscaler
      pod-template-hash: 789fd58764
    name: antrea-controller-horizontal-autoscaler-789fd58764-d9fnj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: antrea-controller-horizontal-autoscaler-789fd58764
      uid: 5e4f8668-281d-4cfa-b846-3d868ae0ccf5
    resourceVersion: "1749193221671023024"
    uid: 03154766-3a5e-4338-90be-483500366841
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=antrea-controller-horizontal-autoscaler
      - --target=deployment/antrea-controller
      - --nodelabels=kubernetes.io/os=windows
      - --logtostderr=true
      - --v=2
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.0-gke.11@sha256:af852676a9858afc2842969fb5a204b41368ba41e4f314da179a01b633f64b25
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 10m
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27dkn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: antrea-cpha
    serviceAccountName: antrea-cpha
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-27dkn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c7f508c74d1544276017874b9b02cc5118f43b88867e3516775324deaa0b6422
      image: sha256:bb376f2464755812677f9e0234ff039638ad7c25b19ccfdbf5683b9d45ccfefa
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:af852676a9858afc2842969fb5a204b41368ba41e4f314da179a01b633f64b25
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:20Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27dkn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.14
    podIPs:
    - ip: 10.35.128.14
    qosClass: Burstable
    startTime: "2025-06-06T07:00:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: efficiency-daemon
      components.gke.io/component-version: 32.1.1
    creationTimestamp: "2025-06-06T06:59:58Z"
    generateName: efficiency-daemon-
    labels:
      controller-revision-hash: cfbc65486
      k8s-app: efficiency-daemon
      name: efficiency-daemon
      pod-template-generation: "1"
    name: efficiency-daemon-pvdjc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: efficiency-daemon
      uid: 46ba87c1-1c75-49c8-85ac-7b941fba0c43
    resourceVersion: "1749193203578943016"
    uid: a37ca7a1-feec-4253-b070-bc645439f8b5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - args:
      - -host_prefix=/host
      - -config_path=/config/efficiency-daemon-config.yaml
      - -config_overrides=efficiency-daemon-config-overrides
      - -eviction_hard_memory_available=100Mi
      - -log_level=info
      command:
      - /efficiency_daemon
      env:
      - name: CLUSTER_PROJECT
        value: "646535140553"
      - name: CLUSTER_LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: efficiency-daemon
      - name: CLOUD_MONITORING_ENDPOINT
        value: monitoring.googleapis.com:443
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon:v32.1.0-gke.0@sha256:730ea76188d686b0e6343ce3bd4b9c8f8e7db984736587cd40aca0dac9676d6b
      imagePullPolicy: Always
      name: efficiency-daemon
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/kubernetes/manifests
        name: k8s-manifests
        readOnly: true
      - mountPath: /host/run/containerd/containerd.sock
        name: containerd-sock
      - mountPath: /host/run/nri/nri.sock
        name: nri-sock
      - mountPath: /host/sys/fs/cgroup
        name: sys-cgroup
      - mountPath: /host/sys/devices/system/cpu
        name: sys-cpu
      - mountPath: /config
        name: efficiency-daemon-config
      - mountPath: /host/home/kubernetes/bin/kubelet
        name: kubelet-exec
      - mountPath: /var/run/dbus/system_bus_socket
        name: dbus-sock
      - mountPath: /host/sys/module
        name: sys-module
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pr7cz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: efficiency-daemon
    serviceAccountName: efficiency-daemon
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/manifests
        type: Directory
      name: k8s-manifests
    - hostPath:
        path: /run/containerd/containerd.sock
        type: Socket
      name: containerd-sock
    - hostPath:
        path: /run/nri/nri.sock
        type: Socket
      name: nri-sock
    - hostPath:
        path: /sys/fs/cgroup
        type: Directory
      name: sys-cgroup
    - hostPath:
        path: /sys/devices/system/cpu
        type: Directory
      name: sys-cpu
    - configMap:
        defaultMode: 420
        name: efficiency-daemon-config
      name: efficiency-daemon-config
    - hostPath:
        path: /home/kubernetes/bin/kubelet
        type: File
      name: kubelet-exec
    - hostPath:
        path: /var/run/dbus/system_bus_socket
        type: Socket
      name: dbus-sock
    - hostPath:
        path: /sys/module
        type: Directory
      name: sys-module
    - name: kube-api-access-pr7cz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://41431fe577616ed12031eb3c6dc76eb1cd32ce79b5ec75f72c1bd64d8371f3bd
      image: sha256:b495afa0fbbd0f5b77f197b0e30acee7b8a04190e940ef7e3b56e30df9621a49
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon@sha256:730ea76188d686b0e6343ce3bd4b9c8f8e7db984736587cd40aca0dac9676d6b
      lastState: {}
      name: efficiency-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:02Z"
      volumeMounts:
      - mountPath: /host/etc/kubernetes/manifests
        name: k8s-manifests
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/run/containerd/containerd.sock
        name: containerd-sock
      - mountPath: /host/run/nri/nri.sock
        name: nri-sock
      - mountPath: /host/sys/fs/cgroup
        name: sys-cgroup
      - mountPath: /host/sys/devices/system/cpu
        name: sys-cpu
      - mountPath: /config
        name: efficiency-daemon-config
      - mountPath: /host/home/kubernetes/bin/kubelet
        name: kubelet-exec
      - mountPath: /var/run/dbus/system_bus_socket
        name: dbus-sock
      - mountPath: /host/sys/module
        name: sys-module
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pr7cz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 12.3.0
    creationTimestamp: "2025-06-06T06:47:19Z"
    generateName: egress-nat-controller-5f6bcdc9dd-
    labels:
      component: netd
      gke-app: egress-nat-controller
      pod-template-hash: 5f6bcdc9dd
    name: egress-nat-controller-5f6bcdc9dd-xpnt8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: egress-nat-controller-5f6bcdc9dd
      uid: 6171a05a-a9da-40aa-b76c-13ab4047aaca
    resourceVersion: "1749193215602991014"
    uid: aa2c8db4-577b-457d-b7c6-c587ea18a8c5
  spec:
    containers:
    - args:
      - --pod-cidrs=10.35.128.0/17
      - --service-cidrs=34.118.224.0/20
      - --node-cidrs=10.128.0.0/20
      - --cluster-short-hash=0211d95b
      env:
      - name: CLUSTER_PROJECT
        value: "646535140553"
      - name: CLUSTER_LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: egress-nat-controller
      - name: CLOUD_MONITORING_ENDPOINT
        value: monitoring.googleapis.com:443
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/egress-nat-controller:v0.2.18-gke.0@sha256:9f422cab20ad1c06bf6d0a946a2b4c5a8b6fa093b0decb34199c0effe3006f9e
      imagePullPolicy: IfNotPresent
      name: egress-nat-controller
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-594w8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: egress-nat-controller
    serviceAccountName: egress-nat-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-594w8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c479bd3e9af0fcfa5595e4d4d66972165a059c799ffcbbed61787cfc86751bb0
      image: asia.gke.gcr.io/egress-nat-controller:v0.2.18-gke.0
      imageID: asia.gcr.io/gke-release-staging/egress-nat-controller:v0.2.18-gke.0@sha256:9f422cab20ad1c06bf6d0a946a2b4c5a8b6fa093b0decb34199c0effe3006f9e
      lastState: {}
      name: egress-nat-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:15Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-594w8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.12
    podIPs:
    - ip: 10.35.128.12
    qosClass: BestEffort
    startTime: "2025-06-06T07:00:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: event-exporter
      components.gke.io/component-version: 1.32.1-gke.1
    creationTimestamp: "2025-06-06T06:46:00Z"
    generateName: event-exporter-gke-6b8fd586f8-
    labels:
      k8s-app: event-exporter
      pod-template-hash: 6b8fd586f8
      version: v0.4.0
    name: event-exporter-gke-6b8fd586f8-qm86v
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: event-exporter-gke-6b8fd586f8
      uid: 5ae42636-890b-47ab-b99c-eb6cb698d155
    resourceVersion: "1749193226696207001"
    uid: 981e1df1-3f5a-4468-97a0-18b7b5daf767
  spec:
    containers:
    - command:
      - /event-exporter
      - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
      - -prometheus-endpoint=:8080
      - -enable-pod-owner-label=true
      - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.0-gke.2@sha256:48cba84b26b6829fcd123bb08a8e56c389887ddba3a9b45d2283a20e2106b046
      imagePullPolicy: IfNotPresent
      name: event-exporter
      resources:
        requests:
          cpu: 3m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bmsmb
        readOnly: true
    - command:
      - /monitor
      - --api-override=https://monitoring.googleapis.com/
      - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
      - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
      - --pod-id=$(POD_NAME)
      - --namespace-id=$(POD_NAMESPACE)
      - --node-name=$(NODE_NAME)
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.21@sha256:115324fd69b07d97b24615e31d4d7a42a6043b6d2ac4bf7474466dd3659f2170
      imagePullPolicy: IfNotPresent
      name: prometheus-to-sd-exporter
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bmsmb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: event-exporter-sa
    serviceAccountName: event-exporter-sa
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: Directory
      name: ssl-certs
    - name: kube-api-access-bmsmb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a2355bc85680fde586162448171c9fa1703f908b988536365c2d4941a4ecd032
      image: sha256:b1969045fe697b3009ac355bd3acb8427ecfd5d5cadebf0f674651a7efba2923
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter@sha256:48cba84b26b6829fcd123bb08a8e56c389887ddba3a9b45d2283a20e2106b046
      lastState: {}
      name: event-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:24Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bmsmb
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://eb19a9b6f471366fedc6334205ca38469ba5adc791ff2d92d0b52cfc3157836a
      image: sha256:7e2a8ddce204bdcaf5a3e8df97ee476e395f219778f3d56943f5672ed0068c54
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd@sha256:115324fd69b07d97b24615e31d4d7a42a6043b6d2ac4bf7474466dd3659f2170
      lastState: {}
      name: prometheus-to-sd-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:26Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bmsmb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.16
    podIPs:
    - ip: 10.35.128.16
    qosClass: Burstable
    startTime: "2025-06-06T07:00:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: filestorecsi
      components.gke.io/component-version: 0.15.12
    creationTimestamp: "2025-06-06T06:50:28Z"
    generateName: filestore-lock-release-controller-6cbd4f7ff4-
    labels:
      component: filestorecsi
      k8s-app: filestore-lock-release-controller
      pod-template-hash: 6cbd4f7ff4
    name: filestore-lock-release-controller-6cbd4f7ff4-fkphw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: filestore-lock-release-controller-6cbd4f7ff4
      uid: c78aeb7f-ce5f-428f-80ec-4ed2696078c5
    resourceVersion: "1749193216724271000"
    uid: 51d29d10-3c8c-4b51-8c04-d85ab54924ea
  spec:
    containers:
    - args:
      - --v=5
      - --http-endpoint=:22027
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver-lockrelease:v1.8.0-gke.16@sha256:857f3ffa4fd2aa676ac24f07eef423b76f47da35518dda6132a603c984837ef7
      imagePullPolicy: IfNotPresent
      name: filestore-lock-release-controller
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 65534
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mzm44
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: filestorecsi-lockrelease-metrics-collector
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/filestorecsi-lockrelease-metrics-collector-config-data.textproto
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      imagePullPolicy: IfNotPresent
      name: filestorecsi-lockrelease-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-lockrelease-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mzm44
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: filestore-lockrelease-controller-sa
    serviceAccountName: filestore-lockrelease-controller-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: filestorecsi-lockrelease-metrics-collector-config-data
          path: filestorecsi-lockrelease-metrics-collector-config-data.textproto
        name: filestorecsi-lockrelease-metrics-collector-config-map
      name: filestorecsi-lockrelease-metrics-collector-config-map-vol
    - name: kube-api-access-mzm44
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://722bda543cfdcdf9df9f5bddbf9709a56c80159b5ce5ea72fd063cd89306d038
      image: sha256:614174a011f812d513f895bcf122e2cb4c44705aebfdccb3f6643ed4bc43dfcf
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver-lockrelease@sha256:857f3ffa4fd2aa676ac24f07eef423b76f47da35518dda6132a603c984837ef7
      lastState: {}
      name: filestore-lock-release-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mzm44
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://49f2e256a7159c19fe8c7d6b6abbee12fd5dfa73a8147050867a0e770a4b0f80
      image: sha256:5bd03271a99bee2bb631adb7137bf9a29c6af0a53e268bf45db00053393f165e
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      lastState: {}
      name: filestorecsi-lockrelease-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:16Z"
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-lockrelease-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mzm44
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.3
    podIPs:
    - ip: 10.35.128.3
    qosClass: Burstable
    startTime: "2025-06-06T07:00:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: filestorecsi
      components.gke.io/component-version: 0.15.12
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-06-06T06:59:58Z"
    generateName: filestore-node-
    labels:
      controller-revision-hash: 6fc55c99bc
      k8s-app: gcp-filestore-csi-driver
      pod-template-generation: "1"
    name: filestore-node-zc6zk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: filestore-node
      uid: 75345a6e-f982-449f-bd74-0a8c3d3b9851
    resourceVersion: "1749193215677759003"
    uid: ddc43b02-44fd-41e5-a71c-7a9907dbde39
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/filestore.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.36@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tbwbc
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --node=true
      - --nodeid=$(KUBE_NODE_NAME)
      - --feature-lock-release=true
      - --feature-lock-release-standalone=true
      - --http-endpoint=:990
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.16@sha256:69335be45d06de54c05765aeb077be872e67795e0b5434924193c6a9db0b8dae
      imagePullPolicy: IfNotPresent
      name: gcp-filestore-driver
      resources:
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tbwbc
        readOnly: true
    - command:
      - /nfs_services_start.sh
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.16@sha256:69335be45d06de54c05765aeb077be872e67795e0b5434924193c6a9db0b8dae
      imagePullPolicy: IfNotPresent
      name: nfs-services
      resources:
        requests:
          cpu: 10m
          memory: 110Mi
      securityContext:
        allowPrivilegeEscalation: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tbwbc
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: filestorecsi-metrics-collector
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/filestorecsi-metrics-collector-config-data.textproto
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      imagePullPolicy: IfNotPresent
      name: filestorecsi-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tbwbc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: filestorecsi-node-sa
    serviceAccountName: filestorecsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/filestore.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - configMap:
        defaultMode: 420
        items:
        - key: filestorecsi-metrics-collector-config-data
          path: filestorecsi-metrics-collector-config-data.textproto
        name: filestorecsi-metrics-collector-config-map
      name: filestorecsi-metrics-collector-config-map-vol
    - name: kube-api-access-tbwbc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f50cf222fdfa8309be8cac1cec1236d3e63b93b86d9465ba98d776d53d639682
      image: sha256:8e7437c313284d5bf840ba1465d817b6c617dff6a84f43c2504162a84979f458
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
      lastState: {}
      name: csi-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:04Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tbwbc
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://35702e9060365e62bb861ecfb416d9262e67b5bfd4cd8543241ecaf36417e8da
      image: sha256:5bd03271a99bee2bb631adb7137bf9a29c6af0a53e268bf45db00053393f165e
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
      lastState: {}
      name: filestorecsi-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:15Z"
      volumeMounts:
      - mountPath: /conf
        name: filestorecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tbwbc
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://7c59e864bff4ee9cbcf3b25cfcf0f6707583ca2850f8b8e4505b7bc717240312
      image: sha256:1c71d04026286aba045294de9d6b8f8ede7f9200479990d15da22837a37bd35f
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver@sha256:69335be45d06de54c05765aeb077be872e67795e0b5434924193c6a9db0b8dae
      lastState: {}
      name: gcp-filestore-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:08Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tbwbc
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://51b3b622aa9d01ffc801b5d66f9a67019118a23f5459db6a1d5d7e80fd913d42
      image: sha256:1c71d04026286aba045294de9d6b8f8ede7f9200479990d15da22837a37bd35f
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver@sha256:69335be45d06de54c05765aeb077be872e67795e0b5434924193c6a9db0b8dae
      lastState: {}
      name: nfs-services
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:09Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tbwbc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      EnableNodeJournal: "false"
      EnablePodSecurityPolicy: "false"
      SystemOnlyLogging: "false"
      components.gke.io/component-name: fluentbit
      components.gke.io/component-version: 1.32.0-gke.5
      monitoring.gke.io/path: /api/v1/metrics/prometheus
    creationTimestamp: "2025-06-06T06:59:57Z"
    generateName: fluentbit-gke-big-
    labels:
      component: fluentbit-gke
      controller-revision-hash: 588b5b94bc
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: big
      pod-template-generation: "1"
    name: fluentbit-gke-big-mmrmt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentbit-gke-big
      uid: d20d4f6f-4a99-4581-903f-8b303e625c12
    resourceVersion: "1749193219657807014"
    uid: 5b35f45e-0402-4da1-b23a-7078843b6ca4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.76@sha256:30984eb296b2874df183101d793c649bfd964f92d56b0455c7338c86f00265d2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2020
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: fluentbit
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn5qz
        readOnly: true
    - command:
      - /fluent-bit-gke-exporter
      - --kubernetes-separator=_
      - --stackdriver-resource-model=k8s
      - --enable-pod-label-discovery
      - --pod-label-dot-replacement=_
      - --split-stdout-stderr
      - --stackdriver-timeout=60s
      - --max-inactivity-duration=600s
      - --stackdriver-address=logging.googleapis.com:443
      - --pool-size=5
      - --max-log-connections=5
      - --logtostderr
      - --node-name=$(NODE_NAME)
      - --pod-cache-size=1024
      - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.7@sha256:4b7ba3bcee04c89e607da8989c68c755d20fd4b29df1eedf18b6d3463032cbc3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 2021
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: fluentbit-gke
      ports:
      - containerPort: 2021
        hostPort: 2021
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn5qz
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/fluentbit-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: fluentbit-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250323_2300_RC0@sha256:dd396481e47edaa1ceb9faf0e15b56dbff99255786a5e935667f69acdea868b4
      imagePullPolicy: IfNotPresent
      name: fluentbit-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn5qz
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -e;
        if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
          exit 0;
        fi;
        if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
          rm -rf /var/lib/google-fluentbit/pos-files.staged;
          rm -rf /var/lib/google-fluentbit/pos-files;
          cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
          mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
          rm -rf /var/run/google-fluentbit/pos-files;
        fi
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250321.00_p0@sha256:7f776c36ecf7426b9d461b2b9690ff6b6c7fc1d00c78eb050da3e039d431b760
      imagePullPolicy: IfNotPresent
      name: fluentbit-gke-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn5qz
        readOnly: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: fluentbit-gke
    serviceAccountName: fluentbit-gke
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/google-fluentbit
        type: DirectoryOrCreate
      name: varrungooglefluentbit
    - hostPath:
        path: /var/log
        type: Directory
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: Directory
      name: varlibdockercontainers
    - hostPath:
        path: /var/lib/google-fluentbit
        type: DirectoryOrCreate
      name: varlibgooglefluentbit
    - hostPath:
        path: /var/lib/google-fluentbit/pos-files
        type: DirectoryOrCreate
      name: varlibgooglefluentbitpos
    - configMap:
        defaultMode: 420
        name: fluentbit-gke-config-v1.4.0
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: fluentbit-metrics-collector-config-data
          path: fluentbit-metrics-collector-config-data.textproto
        name: fluentbit-metrics-collector-config-map
      name: fluentbit-metrics-collector-config-map-vol
    - name: kube-api-access-dn5qz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://20a9c5445b866f290b0f0f4eb7d35783ac88af5e9f6d028f91553dde1dae9771
      image: sha256:d45f286fef1b2f3cfe585870c7cff99578cfb88a368617023fb48cb20e8bf9ed
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit@sha256:30984eb296b2874df183101d793c649bfd964f92d56b0455c7338c86f00265d2
      lastState: {}
      name: fluentbit
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:09Z"
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn5qz
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://130596975d5f4ce97ed48f2c8e81f8267945f3b70874c8b830dc65219fedca6b
      image: sha256:b87b4c9e16a411e1e0704d900e45cabba2b6831c0a0c9a3bf2f0fcbb0eb94029
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter@sha256:4b7ba3bcee04c89e607da8989c68c755d20fd4b29df1eedf18b6d3463032cbc3
      lastState: {}
      name: fluentbit-gke
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:15Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn5qz
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://ca581ca337bdb18bd9d26ea4c3443ee2ecaa731921cffc026cf545f84f236ffd
      image: sha256:9d3bc42761826534fad6076fbdee455eaaec29153ea8c0a006f244c6318a0637
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:dd396481e47edaa1ceb9faf0e15b56dbff99255786a5e935667f69acdea868b4
      lastState: {}
      name: fluentbit-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:18Z"
      volumeMounts:
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn5qz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    initContainerStatuses:
    - containerID: containerd://fb09269d1442ebda8e1569321b5ec3fef25d7ecf7a08c6e3a9c508ae2517e496
      image: sha256:86836373306aa9b15961e647cfad36a1188e312df963abd02b9f3aa592baf244
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:7f776c36ecf7426b9d461b2b9690ff6b6c7fc1d00c78eb050da3e039d431b760
      lastState: {}
      name: fluentbit-gke-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fb09269d1442ebda8e1569321b5ec3fef25d7ecf7a08c6e3a9c508ae2517e496
          exitCode: 0
          finishedAt: "2025-06-06T07:00:02Z"
          reason: Completed
          startedAt: "2025-06-06T07:00:02Z"
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dn5qz
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gcsfusecsi
      components.gke.io/component-version: 0.9.21
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-06-06T06:59:58Z"
    generateName: gcsfusecsi-node-
    labels:
      controller-revision-hash: c4d5489b4
      k8s-app: gcs-fuse-csi-driver
      pod-template-generation: "1"
    name: gcsfusecsi-node-sgbk4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gcsfusecsi-node
      uid: 33003850-8b3b-40e8-af36-bf1cbdaa8980
    resourceVersion: "1749193225070751004"
    uid: be29b437-2a82-4f23-adc8-9d31f8136f3e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --nodeid=$(KUBE_NODE_NAME)
      - --node=true
      - --identity-pool=turnkey-lacing-462106-b1.svc.id.goog
      - --identity-provider=https://container.googleapis.com/v1/projects/turnkey-lacing-462106-b1/locations/us-central1/clusters/autopilot-cluster-2
      - --metrics-endpoint=:9920
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcs-fuse-csi-driver:v1.14.0-gke.2@sha256:e5cf7c99ff11496cfe5cd83c5c743d9e75fb563ee3a38f9e7aa3b5be0895c516
      imagePullPolicy: IfNotPresent
      name: gcs-fuse-csi-driver
      ports:
      - containerPort: 9920
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sockets
        name: fuse-socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jnws9
        readOnly: true
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/csi.sock
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.10.1-gke.36@sha256:39b8284564214a3660b4cf32b20b9695f6b3ec30f16cb14025c458bb6953a907
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jnws9
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/gcsfusecsi-metrics-collector-config-data.textproto
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: gcsfusecsi-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250311_2300_RC0@sha256:e6713a8266629d9e103f7b2c7715bf510170fe28ebe2dc341327fa5e6a0facde
      imagePullPolicy: IfNotPresent
      name: gcsfusecsi-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 100Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: gcsfusecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jnws9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gcsfusecsi-node-sa
    serviceAccountName: gcsfusecsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/pods/
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: socket-dir
    - emptyDir: {}
      name: fuse-socket-dir
    - hostPath:
        path: /sys
        type: Directory
      name: host-sysfs
    - configMap:
        defaultMode: 420
        items:
        - key: gcsfusecsi-metrics-collector-config-data
          path: gcsfusecsi-metrics-collector-config-data.textproto
        name: gcsfusecsi-metrics-collector-config-map
      name: gcsfusecsi-metrics-collector-config-map-vol
    - name: kube-api-access-jnws9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://30841199caf730d01871ab7c08ad5530120adf756a087b938b4d8c0c3cd731ac
      image: sha256:e081bcfe6b5fb3947eb4cadfa36c699cd2f1ffee7ec11bc044a7dceecb8ab0eb
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:39b8284564214a3660b4cf32b20b9695f6b3ec30f16cb14025c458bb6953a907
      lastState: {}
      name: csi-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:17Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jnws9
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://788f8ec8c4ab78fa8bc7f705dd596b77b08a50d40901efcae2f58180f4be8c87
      image: sha256:b9c0d276d3aee7db224a301cf7008e748e8a8e225cf8d72182f7f1a17d89baab
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcs-fuse-csi-driver@sha256:e5cf7c99ff11496cfe5cd83c5c743d9e75fb563ee3a38f9e7aa3b5be0895c516
      lastState: {}
      name: gcs-fuse-csi-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:14Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet/pods
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sockets
        name: fuse-socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jnws9
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://9c3be8c4b9ef16dca651c44d43d069d5489896f83dacf7f5f2ca5d9b7aadc3ba
      image: sha256:e2974bbde01e58f2b84d1c5462ab84cf03f95a252da3f1ec39ec42b6efb3fc76
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:e6713a8266629d9e103f7b2c7715bf510170fe28ebe2dc341327fa5e6a0facde
      lastState: {}
      name: gcsfusecsi-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:23Z"
      volumeMounts:
      - mountPath: /conf
        name: gcsfusecsi-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jnws9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.8
    podIPs:
    - ip: 10.35.128.8
    qosClass: Burstable
    startTime: "2025-06-06T06:59:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metadata-server
      components.gke.io/component-version: 0.4.316
      monitoring.gke.io/path: /metricz
    creationTimestamp: "2025-06-06T06:59:58Z"
    generateName: gke-metadata-server-
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      controller-revision-hash: 56bd77d966
      k8s-app: gke-metadata-server
      pod-template-generation: "1"
    name: gke-metadata-server-84nw9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metadata-server
      uid: 29539e5b-c347-455a-a5ff-562e3ef98fa3
    resourceVersion: "1749193205834671014"
    uid: 03697ee8-a0e9-4ed2-bc62-8ddebc60b858
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - command:
      - /gke-metadata-server
      - --logtostderr
      - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
      - --workload-pool=turnkey-lacing-462106-b1.svc.id.goog
      - --alts-service-suffixes-using-node-identity=storage.googleapis.com,bigtable.googleapis.com,bigtable2.googleapis.com,bigtablerls.googleapis.com,spanner.googleapis.com,spanner2.googleapis.com,spanner-rls.googleapis.com,grpclb.directpath.google.internal,grpclb-dualstack.directpath.google.internal,grpc-directpath-dualstack.googleapis.com,staging-wrenchworks.sandbox.googleapis.com,preprod-spanner.sandbox.googleapis.com,wrenchworks-loadtest.googleapis.com,wrenchworks-nonprod.googleapis.com
      - --identity-provider=https://container.googleapis.com/v1/projects/turnkey-lacing-462106-b1/locations/us-central1/clusters/autopilot-cluster-2
      - --passthrough-ksa-list=anthos-identity-service:gke-oidc-envoy-sa,anthos-identity-service:gke-oidc-service-sa,gke-managed-dpv2-observability:hubble-relay,kube-system:antrea-controller,kube-system:container-watcher-pod-reader,kube-system:coredns,kube-system:egress-nat-controller,kube-system:event-exporter-sa,kube-system:filestore-lockrelease-controller-sa,kube-system:fluentd-gcp-scaler,kube-system:gke-metrics-agent,kube-system:gke-spiffe-node-agent,kube-system:heapster,kube-system:konnectivity-agent,kube-system:kube-dns,kube-system:maintenance-handler,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:node-local-dns,kube-system:pkgextract-service,kube-system:pkgextract-cleanup-service,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller,kube-system:pdcsi-node-sa,kube-system:gcsfusecsi-node-sa,gmp-system:collector,gke-gmp-system:collector,gke-managed-cim:kube-state-metrics,gke-mcs:gke-mcs-importer
      - --attributes=cluster-name=autopilot-cluster-2,cluster-uid=0211d95b2c2c4836ad6b7233ac3f983eeab37668812c4a50a4976e9dd0d9ff20,cluster-location=us-central1
      - --cluster-uid=0211d95b2c2c4836ad6b7233ac3f983eeab37668812c4a50a4976e9dd0d9ff20
      - --sts-endpoint=https://sts.googleapis.com
      - --token-exchange-mode=sts
      - --cloud-monitoring-endpoint=monitoring.googleapis.com:443
      - --iam-cred-service-endpoint=https://iamcredentials.googleapis.com
      - --cluster-project-number=646535140553
      - --cluster-location=us-central1
      - --cluster-name=autopilot-cluster-2
      - --component-version=0.4.316
      - --ksa-cache-mode=watchchecker
      - --kcp-allow-watch-checker=true
      - --enable-mds-csi-driver=true
      - --enable-alts-bound-token=true
      - --csi-socket=/csi/csi.sock
      - --volumes-db=/var/run/gkemds.gke.io/csi/volumes.boltdb
      - --write-trust-map=true
      env:
      - name: GOMEMLIMIT
        value: "94371840"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server:gke_metadata_server_20250115.00_p0@sha256:a6301b00a8c2f7091c361c6439f01e20e066aa951e04ef6195e5894b2c5dcf84
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 989
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metadata-server
      ports:
      - containerPort: 987
        hostPort: 987
        name: alts
        protocol: TCP
      - containerPort: 988
        hostPort: 988
        name: metadata-server
        protocol: TCP
      - containerPort: 989
        hostPort: 989
        name: debug-port
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 989
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
      - mountPath: /var/run/
        name: container-runtime-interface
      - mountPath: /etc/srv/kubernetes/pki
        name: kubelet-pki
        readOnly: true
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
      - mountPath: /sys/firmware/efi/efivars/
        name: efivars
        readOnly: true
      - mountPath: /dev/tpm0
        name: vtpm
        readOnly: true
      - mountPath: /csi
        name: csi-socket-dir
      - mountPath: /var/run/gkemds.gke.io/csi
        name: state-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-dir
      - mountPath: /registration
        name: kubelet-registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-26lcw
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      iam.gke.io/gke-metadata-server-enabled: "true"
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: gke-metadata-server
    serviceAccountName: gke-metadata-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pki/
        type: Directory
      name: kubelet-certs
    - hostPath:
        path: /var/lib/kubelet/kubeconfig
        type: File
      name: kubelet-credentials
    - hostPath:
        path: /var/run/
        type: Directory
      name: container-runtime-interface
    - hostPath:
        path: /etc/srv/kubernetes/pki/
        type: Directory
      name: kubelet-pki
    - hostPath:
        path: /etc/ssl/certs/
        type: Directory
      name: ca-certificates
    - hostPath:
        path: /home/kubernetes/bin/gke-exec-auth-plugin
        type: File
      name: gke-exec-auth-plugin
    - hostPath:
        path: /sys/firmware/efi/efivars/
        type: Directory
      name: efivars
    - hostPath:
        path: /dev/tpm0
        type: CharDevice
      name: vtpm
    - hostPath:
        path: /var/lib/kubelet/plugins/gkemds.gke.io
        type: DirectoryOrCreate
      name: csi-socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: Directory
      name: pods-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: Directory
      name: kubelet-registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins
        type: Directory
      name: kubelet-plugins-dir
    - hostPath:
        path: /var/run/gkemds.gke.io/csi
        type: DirectoryOrCreate
      name: state-dir
    - name: kube-api-access-26lcw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80014468337b125cae9725472cb986cfa8de41d6afdc61add20d2014bd79bb7d
      image: sha256:1042ef8f29381686d87d392016b02794c1f89a35ed3b48fc1fb2edde84e4ab17
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server@sha256:a6301b00a8c2f7091c361c6439f01e20e066aa951e04ef6195e5894b2c5dcf84
      lastState: {}
      name: gke-metadata-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:03Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet/kubeconfig
        name: kubelet-credentials
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/kubelet/pki/
        name: kubelet-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/
        name: container-runtime-interface
      - mountPath: /etc/srv/kubernetes/pki
        name: kubelet-pki
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/ssl/certs/
        name: ca-certificates
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
        name: gke-exec-auth-plugin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /sys/firmware/efi/efivars/
        name: efivars
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /dev/tpm0
        name: vtpm
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /csi
        name: csi-socket-dir
      - mountPath: /var/run/gkemds.gke.io/csi
        name: state-dir
      - mountPath: /var/lib/kubelet/pods
        name: pods-dir
      - mountPath: /registration
        name: kubelet-registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-26lcw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metrics-agent
      components.gke.io/component-version: 2.132.16-gke.0
      configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
    creationTimestamp: "2025-06-06T06:59:58Z"
    generateName: gke-metrics-agent-
    labels:
      component: gke-metrics-agent
      controller-revision-hash: fc676bcb4
      k8s-app: gke-metrics-agent
      pod-template-generation: "1"
    name: gke-metrics-agent-7pbwh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metrics-agent
      uid: 86616c7e-b92d-4b85-ae24-b875902f63b1
    resourceVersion: "1749193215806815002"
    uid: 65f91d26-b59d-4e27-8894-99f12bb4a547
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - command:
      - /otelsvc
      - --config=/conf/core-metrics-exporter-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8202
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: core-metrics-exporter
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.0@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8203
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: core-metrics-exporter
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dctwq
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: prometheus-metrics-collector
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
      imagePullPolicy: IfNotPresent
      name: prometheus-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dctwq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=turnkey-lacing-462106-b1
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dctwq
        readOnly: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gke-metrics-agent
    serviceAccountName: gke-metrics-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: core-metrics-exporter-config
          path: core-metrics-exporter-config.yaml
        name: core-metrics-exporter-conf
      name: core-metrics-exporter-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: kubelet-metrics-collector-config-data
          path: kubelet-metrics-collector-config-data.textproto
        - key: containerd-metrics-collector-config-data
          path: containerd-metrics-collector-config-data.textproto
        - key: kubelet-prober-metrics-collector-config-data
          path: kubelet-prober-metrics-collector-config-data.textproto
        - key: kube-proxy-metrics-collector-config-data
          path: kube-proxy-metrics-collector-config-data.textproto
        - key: node-problem-detector-metrics-collector-config-data
          path: node-problem-detector-metrics-collector-config-data.textproto
        name: prometheus-metrics-collector-config-map
      name: prometheus-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-dctwq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://35675cf1cf36826e999d8db1f1024fa4a48e6012c145cfa9d977de8557471d96
      image: sha256:6e23f4bbeacf74620bf6fc067b50c29997eb753156bf495f4c8f6c55b214278a
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
      lastState: {}
      name: core-metrics-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:06Z"
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dctwq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://b74331b79cd0c04fdaabaaede67d26245687780eeccb7597e8ea077364c759f5
      image: sha256:fe8c5599878f8e73e388bc2daa018e15456daab45a205942a5385b0a7b857554
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
      lastState: {}
      name: prometheus-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:14Z"
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dctwq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    initContainerStatuses:
    - containerID: containerd://3edde3b1af1cd7da9d0512b0de5c3b35cbbe43045e71b70ce3d9ee87f4c3fbc7
      image: sha256:b0bb950012f9e98eb20d0324b07fd0104999d7ed24f86a4ec67b96021502f42e
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      lastState: {}
      name: token-broker-adc-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3edde3b1af1cd7da9d0512b0de5c3b35cbbe43045e71b70ce3d9ee87f4c3fbc7
          exitCode: 0
          finishedAt: "2025-06-06T07:00:02Z"
          reason: Completed
          startedAt: "2025-06-06T07:00:02Z"
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dctwq
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-06-06T07:00:03Z"
    generateName: gke-system-balloon-pod-
    labels:
      component: gke-system-balloon-pod
    name: gke-system-balloon-pod-6lhch
    namespace: kube-system
    resourceVersion: "1749193207514687005"
    uid: cfb8e8cd-7b86-4b06-97cd-921c5df9ef40
  spec:
    automountServiceAccountToken: false
    containers:
    - command:
      - /pause
      image: gke.gcr.io/pause:3.6
      imagePullPolicy: IfNotPresent
      name: balloon
      resources:
        limits:
          cpu: "0"
          memory: "524242944"
        requests:
          cpu: "0"
          memory: "524242944"
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: gke-system-balloon-pod
    serviceAccountName: gke-system-balloon-pod
    terminationGracePeriodSeconds: 1
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0635780733143ce8be613fc6b1c874fd5b0230a3f27c75d7ef37146c153be2f7
      image: gke.gcr.io/pause:3.6
      imageID: gke.gcr.io/pause@sha256:10008c36b4611b44db1229451675d5d7d86c7ddf4ef00f883d806a01547203f6
      lastState: {}
      name: balloon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:07Z"
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T07:00:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 12.3.0
    creationTimestamp: "2025-06-06T06:59:59Z"
    generateName: ip-masq-agent-
    labels:
      controller-revision-hash: 5cc6d66668
      k8s-app: ip-masq-agent
      pod-template-generation: "1"
    name: ip-masq-agent-2m9tp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ip-masq-agent
      uid: 854417c5-f958-4cc6-8a9e-b2dffc631609
    resourceVersion: "1749193204603471005"
    uid: 320ae5cf-382d-4e9c-b984-a68a18acf719
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - args:
      - --v=2
      - --logtostderr=false
      - --log_file=/dev/stdout
      - --log_file_max_size=0
      - --masq-chain=IP-MASQ
      - --nomasq-all-reserved-ranges
      - --random-fully=$(GKE_INTERNAL_ip_masq_agent_random_fully)
      - --to-ports=$(GKE_INTERNAL_ip_masq_agent_to_ports)
      env:
      - name: GKE_INTERNAL_ip_masq_agent_random_fully
        valueFrom:
          configMapKeyRef:
            key: ip_masq_agent_random_fully_override
            name: netd-config
            optional: true
      - name: GKE_INTERNAL_ip_masq_agent_to_ports
        valueFrom:
          configMapKeyRef:
            key: ip_masq_agent_to_ports_override
            name: netd-config
            optional: true
      envFrom:
      - configMapRef:
          name: netd-config
        prefix: GKE_INTERNAL_
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ip-masq-agent:v2.12.3-gke.4@sha256:b5db41ddaf863b660da330322714f668101482b528829c50c53229d901d11af5
      imagePullPolicy: IfNotPresent
      name: ip-masq-agent
      resources:
        requests:
          cpu: 10m
          memory: 16Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7p4tc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
      node.kubernetes.io/masq-agent-ds-ready: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ip-masq-agent
    serviceAccountName: ip-masq-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: config
          path: ip-masq-agent
        name: ip-masq-agent
        optional: true
      name: config
    - name: kube-api-access-7p4tc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://22fbf7eb85608323e36e9a1d4cd200253ebacce87e3168ef4b4d2cd20641963a
      image: asia.gke.gcr.io/ip-masq-agent:v2.12.3-gke.4
      imageID: asia.gcr.io/gke-release-staging/ip-masq-agent:v2.12.3-gke.4@sha256:b5db41ddaf863b660da330322714f668101482b528829c50c53229d901d11af5
      lastState: {}
      name: ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:04Z"
      volumeMounts:
      - mountPath: /etc/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7p4tc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.13.10
    creationTimestamp: "2025-06-06T06:46:52Z"
    generateName: konnectivity-agent-6594574554-
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: "6594574554"
    name: konnectivity-agent-6594574554-dwfms
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-6594574554
      uid: 10c661ea-7eee-471f-9823-4a982478037a
    resourceVersion: "1749193218664975024"
    uid: ad84b659-4107-4d60-a195-a92f70d2de12
  spec:
    containers:
    - args:
      - --logtostderr=true
      - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - --proxy-server-host=10.128.0.4
      - --proxy-server-port=8132
      - --health-server-port=8093
      - --admin-server-port=8094
      - --sync-interval=5s
      - --sync-interval-cap=30s
      - --sync-forever=true
      - --probe-interval=5s
      - --keepalive-time=60s
      - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
      - --enable-profiling
      - --v=3
      command:
      - /proxy-agent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.0@sha256:95108ee2e0e198088c2a9852b7487d8bc26412d5f5e23106c49e6a3644d3d730
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: konnectivity-agent
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hv89g
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: konnectivity-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240717_2300_RC0@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
      imagePullPolicy: IfNotPresent
      name: konnectivity-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hv89g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: sandbox.gke.io/runtime
      operator: Equal
      value: gvisor
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: konnectivity-agent-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: system:konnectivity-server
            expirationSeconds: 3600
            path: konnectivity-agent-token
    - configMap:
        defaultMode: 420
        items:
        - key: konnectivity-agent-metrics-collector-config-data
          path: konnectivity-agent-metrics-collector-config-data.textproto
        name: konnectivity-agent-metrics-collector-config-map
      name: konnectivity-agent-metrics-collector-config-map-vol
    - name: kube-api-access-hv89g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5d0d03a97dbb9ebf5f2d50d3a84300cd57353477be7cf04ec80f3af1e89b13d8
      image: sha256:0827400084e7cd05913015dc79c01abc1e662d6c70d1c97e05f60662a7d71b4e
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent@sha256:95108ee2e0e198088c2a9852b7487d8bc26412d5f5e23106c49e6a3644d3d730
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:13Z"
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hv89g
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://cf9d8f2b8a157e66e3190d187c997e5e8ae32b89d229eb4cda0386d4f88c84cb
      image: sha256:73fce251be0bb71b38a642a3eed2831e5cb26e02f49023bf89fa76ce7ab2ca7d
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
      lastState: {}
      name: konnectivity-agent-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:18Z"
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hv89g
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.6
    podIPs:
    - ip: 10.35.128.6
    qosClass: Burstable
    startTime: "2025-06-06T07:00:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.13.10
    creationTimestamp: "2025-06-06T06:46:55Z"
    generateName: konnectivity-agent-autoscaler-794fcd5659-
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: 794fcd5659
    name: konnectivity-agent-autoscaler-794fcd5659-5r44j
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-autoscaler-794fcd5659
      uid: db048e2f-6ec6-4aa6-82b6-f9206a204935
    resourceVersion: "1749193213571967024"
    uid: 762e52b4-54c7-4c97-ba44-40d6cf8c20c5
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=konnectivity-agent-autoscaler-config
      - --target=deployment/konnectivity-agent
      - --logtostderr=true
      - --v=2
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.6@sha256:0c3e6735169688e40655864255ce1c680d6d2a6e6daebb1e249084eabaadcf60
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 10m
          memory: 10M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gbb7h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent-cpha
    serviceAccountName: konnectivity-agent-cpha
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gbb7h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c555c325d5a5cd45264057a57241e358618ef5788cc73e123ae09a99bcbe2fe
      image: sha256:f8ebc81f752975ad6480c83662aa1c819efb4bfb098492fe731eab69c221898b
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:0c3e6735169688e40655864255ce1c680d6d2a6e6daebb1e249084eabaadcf60
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:13Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gbb7h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.4
    podIPs:
    - ip: 10.35.128.4
    qosClass: Burstable
    startTime: "2025-06-06T07:00:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 32.7.3
      prometheus.io/port: "10054"
      prometheus.io/scrape: "true"
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2025-06-06T06:45:24Z"
    generateName: kube-dns-7786f97d64-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 7786f97d64
    name: kube-dns-7786f97d64-2zxfb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-7786f97d64
      uid: a51ac8aa-aa14-4023-8a27-3add58e5c32d
    resourceVersion: "1749193224946095004"
    uid: 8013503d-8bf2-4f95-84a2-504f84678fa1
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --domain=cluster.local.
      - --dns-port=10053
      - --config-dir=/kube-dns-config
      - --v=2
      env:
      - name: PROMETHEUS_PORT
        value: "10055"
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.25.0-gke.11@sha256:263ab80ea1ed319e6c6e21b19c12a87a9a46558d97d7e4784e06704f579d0019
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/kubedns
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kubedns
      ports:
      - containerPort: 10053
        name: dns-local
        protocol: UDP
      - containerPort: 10053
        name: dns-tcp-local
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v46qh
        readOnly: true
    - args:
      - -v=2
      - -logtostderr
      - -configDir=/etc/k8s/dns/dnsmasq-nanny
      - -restartDnsmasq=true
      - --
      - -k
      - --cache-size=1000
      - --no-negcache
      - --dns-forward-max=1500
      - --log-facility=-
      - --server=/cluster.local/127.0.0.1#10053
      - --server=/in-addr.arpa/127.0.0.1#10053
      - --server=/ip6.arpa/127.0.0.1#10053
      - --max-ttl=30
      - --max-cache-ttl=30
      - --max-tcp-connections=200
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.25.0-gke.11@sha256:07ce37a72dabd872cf8369d0b642075ea3364d0a5a1270562ae7695cfa38deb6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/dnsmasq
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: dnsmasq
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - SETGID
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v46qh
        readOnly: true
    - args:
      - --v=2
      - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
      - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.25.0-gke.11@sha256:bcfd3f3fb37550889a6a30eaa788c35042f82317369286a12a8a487ea5cb64ea
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /metrics
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar
      ports:
      - containerPort: 10054
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v46qh
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: kubedns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250415_2300_RC0@sha256:ba0c53c89a2f6d634dd79754c29d29fe2072993eff7cb84e9a94c115197ab7fe
      imagePullPolicy: IfNotPresent
      name: kubedns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v46qh
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns
    serviceAccountName: kube-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: kubedns-metrics-collector-config-data
          path: kubedns-metrics-collector-config-data.textproto
        - key: sidecar-metrics-collector-config-data
          path: sidecar-metrics-collector-config-data.textproto
        name: kubedns-metrics-collector-config-map
      name: kubedns-metrics-collector-config-map-vol
    - name: kube-api-access-v46qh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8fb4ad28037b888cd446f3e8319a56b8c0a12c481b8c668d3bfe514539750fee
      image: sha256:957dcd4f9447c7ba16080b033f4d4a27c7dc05a8808fe614820914e32a9f5ab4
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny@sha256:07ce37a72dabd872cf8369d0b642075ea3364d0a5a1270562ae7695cfa38deb6
      lastState: {}
      name: dnsmasq
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:16Z"
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v46qh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://a030f3e71d2fa8b4d01da8ad46c8a8cefe08bffb936f2f54327b64ddc7d38d85
      image: sha256:1a99e63945970dd3f779d4b6745415735e4c19df5ea78d65df7498571beba368
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns@sha256:263ab80ea1ed319e6c6e21b19c12a87a9a46558d97d7e4784e06704f579d0019
      lastState: {}
      name: kubedns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:13Z"
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v46qh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://c0e9240b6ef62daf7d00a599d8b6410b00e967069578d0cae6a6da11a04466f6
      image: sha256:6cc3eddfc6b9fc786453a986351920d6d6b09523187ac092f52e3b4102cc1501
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:ba0c53c89a2f6d634dd79754c29d29fe2072993eff7cb84e9a94c115197ab7fe
      lastState: {}
      name: kubedns-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:24Z"
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v46qh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://17a1f75a31efd31779df22d4e668a360ce6ecf562d337a5d3a333b5abb4206a9
      image: sha256:62d9bb720467deee6346c1242045fc082c1540f0b5223d066c68e2d441ce5400
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar@sha256:bcfd3f3fb37550889a6a30eaa788c35042f82317369286a12a8a487ea5cb64ea
      lastState: {}
      name: sidecar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:23Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v46qh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.7
    podIPs:
    - ip: 10.35.128.7
    qosClass: Burstable
    startTime: "2025-06-06T07:00:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 32.7.3
    creationTimestamp: "2025-06-06T06:46:57Z"
    generateName: kube-dns-autoscaler-64f77fbb96-
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 64f77fbb96
    name: kube-dns-autoscaler-64f77fbb96-svtjz
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-autoscaler-64f77fbb96
      uid: 19f4e579-3fd3-4215-9eea-260f0972cedb
    resourceVersion: "1749193213889295006"
    uid: 4bf6fb46-b856-41e1-995c-ea4850bafc30
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=kube-dns-autoscaler
      - --target=Deployment/kube-dns
      - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
      - --logtostderr=true
      - --v=2
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.4@sha256:9d9d5a87d33b18cd35821eda1eba37d737f3003ea08c5436d285c56a8f0cb9ab
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2d6j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns-autoscaler
    serviceAccountName: kube-dns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-j2d6j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e90a9b118e5820a4825f430c8fff166f9ed5b2d34085e6df0eff4697c80cbe6b
      image: sha256:3e87db68c4972f830fc3260c42113c9b2cd1c9db9c019bf6bf7a66e99df9ea76
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:9d9d5a87d33b18cd35821eda1eba37d737f3003ea08c5436d285c56a8f0cb9ab
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:12Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2d6j
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.5
    podIPs:
    - ip: 10.35.128.5
    qosClass: Burstable
    startTime: "2025-06-06T07:00:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.34.2-gke.0
    creationTimestamp: "2025-06-06T06:47:00Z"
    generateName: l7-default-backend-7b587fc684-
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: 7b587fc684
    name: l7-default-backend-7b587fc684-h9g2n
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: l7-default-backend-7b587fc684
      uid: c10f44ed-36ae-4bd7-aad7-3ed500753aa9
    resourceVersion: "1749193216938367008"
    uid: 3037ed30-7143-4142-938b-4b988c55200f
  spec:
    automountServiceAccountToken: false
    containers:
    - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.34.2@sha256:79870c8c149fd62f93caa1fb33dcc20d0a13e2badd3f74775c1cf82ec5e5b2b2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: default-http-backend
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d0dd16317697f3a8148cb9c84deebac6ddb5f73ce0cdd0d8055fd45f59c6b50f
      image: sha256:fae41dfbf4abc3760fa32c1f4e07761498f88079260f3059984a7f4a46bd638b
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics@sha256:79870c8c149fd62f93caa1fb33dcc20d0a13e2badd3f74775c1cf82ec5e5b2b2
      lastState: {}
      name: default-http-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:15Z"
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.10
    podIPs:
    - ip: 10.35.128.10
    qosClass: Burstable
    startTime: "2025-06-06T07:00:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.32.2-gke.2
    creationTimestamp: "2025-06-06T06:47:17Z"
    generateName: metrics-server-v1.32.2-6797fd8c9d-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 6797fd8c9d
      version: v1.32.2
    name: metrics-server-v1.32.2-6797fd8c9d-s548n
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-v1.32.2-6797fd8c9d
      uid: af083495-af78-4972-a264-87c6e30205d1
    resourceVersion: "1749193281711007013"
    uid: 4b9b8f8a-d761-4f12-9dd5-16154ae835c4
  spec:
    containers:
    - command:
      - /metrics-server
      - --metric-resolution=30s
      - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-allow-working-set-bytes-zero=false
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.40@sha256:1a927071b863890cb36470a8e3c1093af63a7f29714c5d6e103167670da3e1f3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 50
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 50
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 43m
          memory: 55Mi
        requests:
          cpu: 43m
          memory: 55Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjvwk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: metrics-server-config
      name: metrics-server-config-volume
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-fjvwk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:01:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:01:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://de4b64c38c31fc004bd1686da1e74c2b4af14afbb2891f955eae040709e49717
      image: sha256:868763480ff27570b667befbace2f82667e6ed9e8d61fbed7ea16d7398fc64c8
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server@sha256:1a927071b863890cb36470a8e3c1093af63a7f29714c5d6e103167670da3e1f3
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:18Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fjvwk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.13
    podIPs:
    - ip: 10.35.128.13
    qosClass: Guaranteed
    startTime: "2025-06-06T07:00:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: netd-combined
      components.gke.io/component-version: 12.3.0
    creationTimestamp: "2025-06-06T06:59:58Z"
    generateName: netd-
    labels:
      controller-revision-hash: 6b657b4bfc
      k8s-app: netd
      pod-template-generation: "1"
    name: netd-kfpnk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: netd
      uid: 2d105db9-43a6-431c-9238-9b519f45c85f
    resourceVersion: "1749193209553647011"
    uid: b9f7a8a0-d73d-4327-8560-c0237d092b40
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - args:
      - --enable-policy-routing=$(ENABLE_POLICY_ROUTING)
      - --enable-source-valid-mark=$(ENABLE_SOURCE_VALID_MARK)
      - --exclude-dns=$(EXCLUDE_DNS)
      - --logtostderr
      - --reconcile-interval-seconds=$(RECONCILE_INTERVAL_SECONDS)
      - --metrics-collectors=$(METRICS_COLLECTORS)
      - --metrics-address=$(METRICS_ADDRESS)
      - --stack-type=$(STACK_TYPE)
      env:
      - name: ENABLE_POLICY_ROUTING
        value: "true"
      - name: ENABLE_SOURCE_VALID_MARK
        value: "false"
      - name: EXCLUDE_DNS
        value: "false"
      - name: RECONCILE_INTERVAL_SECONDS
        valueFrom:
          configMapKeyRef:
            key: reconcile_interval_seconds
            name: netd-config
      - name: METRICS_COLLECTORS
        valueFrom:
          configMapKeyRef:
            key: metrics_collectors
            name: networking-metrics-config
      - name: METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: metrics_address
            name: networking-metrics-config
      - name: STACK_TYPE
        valueFrom:
          configMapKeyRef:
            key: stack_type
            name: networking-metrics-config
      - name: CURRENT_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/netd:v0.9.8-gke.2@sha256:d85ae485d899b509bc1b44e1668842ee4ab6b84de620026f2801e2fb160175a2
      imagePullPolicy: IfNotPresent
      name: netd
      resources:
        requests:
          cpu: 2m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/var/lib/cni/networks/gke-pod-network
        name: gke-pod-network
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x8nq5
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/netd-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: metrics_address
            name: networking-metrics-config
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: netd-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250219_2300_RC0@sha256:417803914b2912d9d64e2df7b9cfc8770675076ed912b3ec1f52a0e4104f6f5f
      imagePullPolicy: IfNotPresent
      name: netd-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: netd-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x8nq5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - env:
      - name: MIGRATE_TO_DPV2
        value: "false"
      - name: CNI_SPEC_TEMPLATE
        valueFrom:
          configMapKeyRef:
            key: cni_spec_template
            name: netd-config
      - name: CNI_SPEC_NAME
        valueFrom:
          configMapKeyRef:
            key: cni_spec_name
            name: netd-config
      - name: CNI_SPEC_IPV6_ROUTE
        valueFrom:
          configMapKeyRef:
            key: cni_spec_ipv6_route
            name: netd-config
      - name: ENABLE_CALICO_NETWORK_POLICY
        valueFrom:
          configMapKeyRef:
            key: enable_calico_network_policy
            name: netd-config
      - name: WRITE_CALICO_CONFIG_FILE
        value: "false"
      - name: ENABLE_IPV6
        valueFrom:
          configMapKeyRef:
            key: enable_ipv6
            name: netd-config
      - name: ENABLE_CILIUM_PLUGIN
        valueFrom:
          configMapKeyRef:
            key: enable_cilium_plugin
            name: netd-config
      - name: ISTIO_CNI_CONFIG
        valueFrom:
          configMapKeyRef:
            key: cni_network_config
            name: istio-cni-plugin-config
            optional: true
      - name: KUBERNETES_SERVICE_HOST
        valueFrom:
          configMapKeyRef:
            key: master_ip
            name: netd-config
      - name: CILIUM_CHAINING_MODE
        valueFrom:
          configMapKeyRef:
            key: cilium_chaining_mode
            name: netd-config
      - name: CURRENT_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CILIUM_FAST_START_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: fast-start-namespaces
            name: dpv2-fast-start-config
            optional: true
      - name: RUN_CNI_WATCHDOG
        value: "true"
      - name: CILIUM_WATCHDOG_SUCCESS_WAIT
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_success_wait_seconds
            name: netd-config
      - name: CILIUM_WATCHDOG_FAILURE_RETRY
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_failure_retry_seconds
            name: netd-config
      - name: CILIUM_WATCHDOG_FAST_START_WAIT
        valueFrom:
          configMapKeyRef:
            key: cilium_watchdog_fast_start_wait_seconds
            name: netd-config
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/netd-init:v0.9.8-gke.2@sha256:a4c515e0950a49e9afded17a84c3fc3859e34c4017d22184a6c1ca5d139a61a4
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources:
        requests:
          cpu: 1m
          memory: 5Mi
      restartPolicy: Always
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/home/kubernetes/bin
        name: kubernetes-bin
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x8nq5
        readOnly: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: netd
    serviceAccountName: netd
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: Directory
      name: cni-net-dir
    - hostPath:
        path: /home/kubernetes/bin
        type: Directory
      name: kubernetes-bin
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/lib/cni/networks/gke-pod-network
        type: DirectoryOrCreate
      name: gke-pod-network
    - configMap:
        defaultMode: 420
        items:
        - key: netd-metrics-collector-config-data
          path: netd-metrics-collector-config-data.textproto
        name: netd-metrics-collector-config-map
      name: netd-metrics-collector-config-map-vol
    - name: kube-api-access-x8nq5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://67c18b59b409445018076e799db529f0a3430ddb0592a0c1f533245f3455a29e
      image: asia.gke.gcr.io/netd:v0.9.8-gke.2
      imageID: asia.gcr.io/gke-release-staging/netd:v0.9.8-gke.2@sha256:d85ae485d899b509bc1b44e1668842ee4ab6b84de620026f2801e2fb160175a2
      lastState: {}
      name: netd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:04Z"
      volumeMounts:
      - mountPath: /host/var/lib/cni/networks/gke-pod-network
        name: gke-pod-network
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x8nq5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://f9b4fea00693d04a357b2524b9d46354c368c02e01ba0aab9efbe9f82d443623
      image: asia.gke.gcr.io/gke-metrics-collector:20250219_2300_RC0
      imageID: asia.gcr.io/gke-release-staging/gke-metrics-collector:20250219_2300_RC0@sha256:417803914b2912d9d64e2df7b9cfc8770675076ed912b3ec1f52a0e4104f6f5f
      lastState: {}
      name: netd-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:09Z"
      volumeMounts:
      - mountPath: /conf
        name: netd-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x8nq5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    initContainerStatuses:
    - containerID: containerd://d808058a9f56b7a0442f97995df691d4e2beda899f62c66ef483c590d246dea8
      image: asia.gke.gcr.io/netd-init:v0.9.8-gke.2
      imageID: asia.gcr.io/gke-release-staging/netd-init:v0.9.8-gke.2@sha256:a4c515e0950a49e9afded17a84c3fc3859e34c4017d22184a6c1ca5d139a61a4
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:02Z"
      volumeMounts:
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /host/home/kubernetes/bin
        name: kubernetes-bin
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x8nq5
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      components.gke.io/component-name: nodelocaldns
      components.gke.io/component-version: 32.3.1
      prometheus.io/port: "9253"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-06T06:59:59Z"
    generateName: node-local-dns-
    labels:
      controller-revision-hash: c6f4dc77c
      k8s-app: node-local-dns
      networking.gke.io/dns-provider: cloud-dns
      pod-template-generation: "1"
    name: node-local-dns-b4455
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-local-dns
      uid: e0cff2da-f848-43f5-9a62-a37f28a46497
    resourceVersion: "1749193211643791012"
    uid: e300d18a-3a70-480a-9d9c-694c031e1b54
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - args:
      - -localip
      - 169.254.20.10,34.118.224.10
      - -conf
      - /etc/Corefile
      - -kubednscm
      - /etc/kube-dns
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-node-cache:1.25.0-gke.10@sha256:701483e0920ea0f8f2ae10e27e45e84813ef7c2508060c053c8bdcc99d7728c1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 169.254.20.10
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: node-cache
      ports:
      - containerPort: 53
        hostPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        hostPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9253
        hostPort: 9253
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 25m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - NET_ADMIN
          - NET_RAW
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/coredns
        name: config-volume
      - mountPath: /etc/kube-dns
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kms9f
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/nodelocaldns-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "646535140553"
      - name: LOCATION
        value: us-central1
      - name: CLUSTER_NAME
        value: autopilot-cluster-2
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: nodelocaldns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250120_2300_RC0@sha256:6c6091b2cd2431c93a97e86fe2487cb84ab8a382605b12c4bf51703606bda1c2
      imagePullPolicy: IfNotPresent
      name: nodelocaldns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: nodelocaldns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kms9f
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      addon.gke.io/node-local-dns-ds-ready: "true"
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: node-local-dns
    serviceAccountName: node-local-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile.base
        name: node-local-dns
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: nodelocaldns-metrics-collector-config-data
          path: nodelocaldns-metrics-collector-config-data.textproto
        name: nodelocaldns-metrics-collector-config-map
      name: nodelocaldns-metrics-collector-config-map-vol
    - name: kube-api-access-kms9f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://17376f955971ac3a710921d722b158cf0edebb88ea585e10d12c12e9f0cda6f5
      image: sha256:22896a0aca026dddbbfe8a1e008c341849ddc08aaf4b24dad420652a6645baca
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-node-cache@sha256:701483e0920ea0f8f2ae10e27e45e84813ef7c2508060c053c8bdcc99d7728c1
      lastState: {}
      name: node-cache
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:06Z"
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /etc/coredns
        name: config-volume
      - mountPath: /etc/kube-dns
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kms9f
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://f6119cb93efdbdbcd0c5f44bfb41e5f334dbe355bbb247d767fe44f4045d516c
      image: sha256:ddc8c7a13bddf01ad14fda5bffad51f57003bca61e27b8ddbca5b7f61f1930d5
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:6c6091b2cd2431c93a97e86fe2487cb84ab8a382605b12c4bf51703606bda1c2
      lastState: {}
      name: nodelocaldns-metrics-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:11Z"
      volumeMounts:
      - mountPath: /conf
        name: nodelocaldns-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kms9f
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T06:59:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: parallelstorecsi
      components.gke.io/component-version: 0.4.23
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-06-06T06:59:58Z"
    generateName: parallelstore-csi-node-
    labels:
      controller-revision-hash: 576987f7f4
      k8s-app: parallelstore-csi-driver
      pod-template-generation: "1"
    name: parallelstore-csi-node-vthfm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: parallelstore-csi-node
      uid: 9c487f37-b0f3-4e0a-b465-1e45825cb45e
    resourceVersion: "1749193211592031014"
    uid: e817113d-7315-47bd-b9f0-289b7cfe1b25
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --nodeid=$(KUBE_NODE_NAME)
      - --node=true
      - --cluster-network=default
      - --network-project-id=turnkey-lacing-462106-b1
      - --sidecar-image=$(SIDECAR_IMAGE)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: SIDECAR_IMAGE
        valueFrom:
          configMapKeyRef:
            key: sidecar-image
            name: parallelstorecsi-image-config
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/parallelstore-csi-driver:v0.2.6-gke.2@sha256:ae7664753284650d745f536c639e4e0547113b1bf3d05b5236cfae180583d608
      imagePullPolicy: Always
      name: parallelstore-csi-driver
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /gke-parallelstore-tmp
        name: gke-parallelstore-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnckl
        readOnly: true
    - args:
      - --v=3
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/csi.sock
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.36@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnckl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/arch: amd64
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: parallelstore-csi-node-sa
    serviceAccountName: parallelstore-csi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /sys
        type: Directory
      name: host-sysfs
    - emptyDir: {}
      name: gke-parallelstore-tmp
    - name: kube-api-access-fnckl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T06:59:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bb693b290c5657a0149778bec148e684b9652c06bfd9639f33ec6bf32a66f19f
      image: sha256:8e7437c313284d5bf840ba1465d817b6c617dff6a84f43c2504162a84979f458
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
      lastState: {}
      name: csi-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:11Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnckl
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://7368f040ea7b1883db9184416cb3c0d3b238355eaad174aa03c9819f8e957265
      image: sha256:6ca9d212da84f46f9954f51e14337376552c8ce72343dd0bcea8bc7409a3eaa2
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/parallelstore-csi-driver@sha256:ae7664753284650d745f536c639e4e0547113b1bf3d05b5236cfae180583d608
      lastState: {}
      name: parallelstore-csi-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:11Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: socket-dir
      - mountPath: /sys
        name: host-sysfs
      - mountPath: /gke-parallelstore-tmp
        name: gke-parallelstore-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnckl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.35.128.2
    podIPs:
    - ip: 10.35.128.2
    qosClass: Burstable
    startTime: "2025-06-06T06:59:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: pdcsi
      components.gke.io/component-version: 0.21.27
    creationTimestamp: "2025-06-06T06:59:59Z"
    generateName: pdcsi-node-
    labels:
      controller-revision-hash: 65d6fff876
      k8s-app: gcp-compute-persistent-disk-csi-driver
      pod-template-generation: "1"
    name: pdcsi-node-j2cf8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pdcsi-node
      uid: d736fd65-7060-474a-b9e3-44c9f5158833
    resourceVersion: "1749193213638799019"
    uid: 44a85c71-1785-44f4-ac90-1f7e92275e3f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.36@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkb9b
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --run-controller-service=false
      - --run-node-service=true
      - --enable-data-cache
      - --enable-data-cache=true
      - --node-name=$(KUBE_NODE_NAME)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.17.9-gke.1@sha256:54dc28c2ad13913ab89e74ee40bbbebc8f758b4b19d6fdba8ebb46e78ab9a44e
      imagePullPolicy: IfNotPresent
      name: gce-pd-driver
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkb9b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gk3-autopilot-cluster-2-nap-wgb30upk-f8371135-xb8j
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: pdcsi-node-sa
    serviceAccountName: pdcsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /etc/udev
        type: Directory
      name: udev-rules-etc
    - hostPath:
        path: /lib/udev
        type: Directory
      name: udev-rules-lib
    - hostPath:
        path: /run/udev
        type: Directory
      name: udev-socket
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - emptyDir:
        sizeLimit: 5Mi
      name: tmp
    - emptyDir:
        sizeLimit: 5Mi
      name: lvm-dir
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-rkb9b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T07:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://62626ef21fc1c1f052f7929928a980f146b1d8553043269bcad6029d7b20c35b
      image: sha256:8e7437c313284d5bf840ba1465d817b6c617dff6a84f43c2504162a84979f458
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
      lastState: {}
      name: csi-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:04Z"
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkb9b
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://5d9747e4c0534af7f4bce2c9b7f7b5f88f026082114908933b6440abc34deadf
      image: sha256:6d843a7a87bc11726831c042f1785c3a52962d3f4b011f6cda0ed28cd68e4ecb
      imageID: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver@sha256:54dc28c2ad13913ab89e74ee40bbbebc8f758b4b19d6fdba8ebb46e78ab9a44e
      lastState: {}
      name: gce-pd-driver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T07:00:12Z"
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkb9b
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.128.0.6
    hostIPs:
    - ip: 10.128.0.6
    phase: Running
    podIP: 10.128.0.6
    podIPs:
    - ip: 10.128.0.6
    qosClass: Burstable
    startTime: "2025-06-06T07:00:00Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-06-06T06:58:41Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: hello
    name: hello
    namespace: default
    resourceVersion: "1749193317638383023"
    uid: 95fe4d2d-fcc4-4ae8-8c46-ca2e29b2e9d1
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 34.118.229.25
    clusterIPs:
    - 34.118.229.25
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30430
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: hello
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.57.133.146
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-06-06T06:42:36Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "1749192156512831006"
    uid: 6594fabc-1368-4c27-bad4-95de411b192e
  spec:
    clusterIP: 34.118.224.1
    clusterIPs:
    - 34.118.224.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: nginx-app
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-06-06T07:54:10Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: nginx-app
    namespace: default
    resourceVersion: "1749196479749951007"
    uid: 8c4a2e5a-3989-48d5-acd7-134e902846af
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 34.118.233.174
    clusterIPs:
    - 34.118.233.174
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31048
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: nginx-app
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.58.249.65
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2025-06-06T06:47:06Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gke-gmp-system
    resourceVersion: "1749192426105679017"
    uid: 8a5b556f-e138-4f92-a8be-5ae9a7edd550
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: alertmanager
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      app: managed-prometheus-alertmanager
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2025-06-06T06:47:06Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: gmp-operator
    namespace: gke-gmp-system
    resourceVersion: "1749192426635999014"
    uid: b47a07f9-d484-4187-a948-be082c45eea0
  spec:
    clusterIP: 34.118.234.58
    clusterIPs:
    - 34.118.234.58
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: legacy
      port: 8443
      protocol: TCP
      targetPort: webhook
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: web
    selector:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.3-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2025-06-06T06:47:06Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: rule-evaluator
    namespace: gke-gmp-system
    resourceVersion: "1749192426466975000"
    uid: 35dffad7-3e28-4204-9022-106c0722f4a2
  spec:
    clusterIP: 34.118.239.245
    clusterIPs:
    - 34.118.239.245
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: rule-evaluator
      port: 19092
      protocol: TCP
      targetPort: 19092
    selector:
      app.kubernetes.io/name: rule-evaluator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: networkpolicy-antrea
      components.gke.io/component-version: 0.4.3
    creationTimestamp: "2025-06-06T06:47:23Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: antrea
    name: antrea
    namespace: kube-system
    resourceVersion: "1749192443835647020"
    uid: 1bf8959e-d31f-48fb-b665-4539e4412da5
  spec:
    clusterIP: 34.118.226.11
    clusterIPs:
    - 34.118.226.11
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: api
    selector:
      app: antrea
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.34.2-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2025-06-06T06:47:00Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBCDefaultBackend
    name: default-http-backend
    namespace: kube-system
    resourceVersion: "1749192420207039023"
    uid: 8c865fd7-d60d-47c7-86b8-b44812f51a22
  spec:
    clusterIP: 34.118.239.12
    clusterIPs:
    - 34.118.239.12
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31795
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      k8s-app: glbc
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-06-06T06:45:20Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "1749192320832559020"
    uid: 074e1d4b-4df1-4a21-baf1-48dd8aa00b95
  spec:
    clusterIP: 34.118.224.10
    clusterIPs:
    - 34.118.224.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.32.2-gke.2
      components.gke.io/layer: addon
    creationTimestamp: "2025-06-06T06:47:12Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "1749192432526703011"
    uid: 8db0dcc9-20cf-4b03-9066-50c21139d3b7
  spec:
    clusterIP: 34.118.228.20
    clusterIPs:
    - 34.118.228.20
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:06Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: collector
    namespace: gke-gmp-system
    resourceVersion: "1749193244929407007"
    uid: 7aa1ffda-6610-4c96-9f9e-3e5636ded072
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: collector
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.0
        creationTimestamp: null
        labels:
          app: managed-prometheus-collector
          app.kubernetes.io/name: collector
          app.kubernetes.io/version: 0.15.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --enable-feature=exemplar-storage
          - --enable-feature=google-kubernetes-secret-provider
          - --storage.tsdb.path=/prometheus/data
          - --storage.tsdb.no-lockfile
          - --gmp.storage.delete-data-on-start
          - --storage.tsdb.retention.time=30m
          - --storage.tsdb.wal-compression
          - --storage.tsdb.min-block-duration=10m
          - --storage.tsdb.max-block-duration=10m
          - --web.listen-address=:19090
          - --web.enable-lifecycle
          - --web.route-prefix=/
          - --export.user-agent-mode=gke
          - --log.format=json
          env:
          - name: GOGC
            value: "25"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.11-gke.0@sha256:3ba777873a3267c008049297c4e2292a27e7dbeebdae292f99b7af261175c54f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus
          ports:
          - containerPort: 19090
            name: prom-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 4m
              memory: 32M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/data
            name: storage
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/secrets
            name: collection-secret
            readOnly: true
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --reload-url=http://127.0.0.1:19090/-/reload
          - --ready-url=http://127.0.0.1:19090/-/ready
          - --listen-address=:19091
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19091
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: storage
        - configMap:
            defaultMode: 420
            name: collector
          name: config
        - emptyDir: {}
          name: config-out
        - name: collection-secret
          secret:
            defaultMode: 420
            secretName: collection
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:47Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app.kubernetes.io/name: gke-managed-dcgm-exporter
    name: dcgm-exporter
    namespace: gke-managed-system
    resourceVersion: "1749192407185471000"
    uid: bf9f3e55-5ce4-4cba-8951-c0a0d9f5e482
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: gke-managed-dcgm-exporter
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: gpu-dcgm
          components.gke.io/component-version: 1.32.4-gke.1
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: gke-managed-dcgm-exporter
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: cloud.google.com/gke-gpu-driver-version
                  operator: In
                  values:
                  - default
                  - latest
        automountServiceAccountToken: false
        containers:
        - args:
          - --enable-dcgm-log
          - --dcgm-log-level
          - ERROR
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: DCGM_EXPORTER_KUBERNETES_GPU_ID_TYPE
            value: device-name
          - name: DCGM_EXPORTER_KUBERNETES
            value: "true"
          - name: DCGM_EXPORTER_LISTEN
            value: :9400
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia/gke-dcgm-exporter:3.3.9-3.6.1-gke.10@sha256:e2f21f4f2661322f26ff97be7953ce71ae238e8c6d0e2fa48ade0f65539aea17
          imagePullPolicy: IfNotPresent
          name: dcgm-exporter
          ports:
          - containerPort: 9400
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 350Mi
            requests:
              cpu: 100m
              memory: 350Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/dcgm-exporter
            name: dcgm-exporter-metrics
            readOnly: true
          - mountPath: /usr/local/nvidia
            name: nvidia-install-dir-host
            readOnly: true
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |
            cleanup() {
              echo "caught stop signal, exiting..."
              exit 0
            }
            trap cleanup SIGINT SIGTERM
            echo "checking for drivers"
            while true; do
              if ls "/usr/local/nvidia/lib64/libnvidia-ml.so.1" &>/dev/null; then
                echo "nvml drivers found!"
                break
              fi
              echo "waiting for nvml drivers"
              sleep 1
            done
            echo "checking for MIG partitions"
            if [[ -f "/etc/nvidia/gpu_config.json" ]]; then
              content=$(</etc/nvidia/gpu_config.json)
              if [[ -z "${content##*GPUPartitionSize*}" ]]; then
                while true; do
                  output=$(LD_LIBRARY_PATH=/usr/local/nvidia/lib64 /usr/local/nvidia/bin/nvidia-smi -L)
                  echo $output
                  if [[ -z "${output##*MIG*MIG-*}" ]]; then
                    echo "MIG partitions found, exiting"
                    break
                  fi
                  echo "waiting for MIG partitions"
                  sleep 2
                done
              else
                echo "GPUPartitionSize is empty"
              fi
            else
              echo "no gpu config"
            fi
            echo "checking for gpu-device-plugin socket"
            while true; do
              if [[ $(ls /var/lib/kubelet/device-plugins/nvidiaGPU*.sock) ]]; then
                ls -la /var/lib/kubelet/device-plugins/nvidiaGPU*.sock
                echo "gpu-device-plugin socket found, exiting"
                exit 0
              fi
              echo "waiting for gpu-device-plugin socket"
              sleep 1
            done
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250321.00_p0@sha256:7f776c36ecf7426b9d461b2b9690ff6b6c7fc1d00c78eb050da3e039d431b760
          imagePullPolicy: IfNotPresent
          name: nvml-wait
          resources: {}
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia
            name: nvidia-install-dir-host
            readOnly: true
          - mountPath: /etc/nvidia
            name: nvidia-config
            readOnly: true
          - mountPath: /var/lib/kubelet/device-plugins
            name: device-plugins
            readOnly: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/kubernetes/bin/nvidia
            type: Directory
          name: nvidia-install-dir-host
        - configMap:
            defaultMode: 420
            name: dcgm-exporter-metrics
          name: dcgm-exporter-metrics
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugins
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:45:25Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd
    namespace: kube-system
    resourceVersion: "1749192629941391021"
    uid: 314940b8-a286-4a6b-bb08-8b08c41fa07b
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.31
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: NotIn
                  values:
                  - ek
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:45:28Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-l
    namespace: kube-system
    resourceVersion: "1749193215440271003"
    uid: 8b258c4b-e38a-4420-96db-6ca53d460ba1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.31
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Gt
                  values:
                  - "64"
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Lt
                  values:
                  - "257"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 700Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:45:27Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-m
    namespace: kube-system
    resourceVersion: "1749192327918975023"
    uid: c89e1935-7a35-4b26-b29a-aef58b0ac8d4
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.31
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Gt
                  values:
                  - "8"
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Lt
                  values:
                  - "65"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 400Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:45:27Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-s
    namespace: kube-system
    resourceVersion: "1749192327271135005"
    uid: ad524059-0e6f-4461-a5b0-581978b89895
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.31
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Gt
                  values:
                  - "1"
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Lt
                  values:
                  - "9"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:24Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: anetd-win
      prometheus.io/port: "9990"
      prometheus.io/scrape: "true"
    name: anetd-win
    namespace: kube-system
    resourceVersion: "1749192444348703007"
    uid: 60ba2795-6f0c-4be3-9e31-7bb2355c4494
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: anetd-win
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: anetd-win
      spec:
        containers:
        - command:
          - anet-agent.exe
          env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium-win-multi:v1.9.5-gke.68@sha256:b53695ec654355db2b7d08929f8dd45b18e041d13f0e80ca668df83d5e5cd12f
          imagePullPolicy: IfNotPresent
          name: cilium-agent
          resources:
            requests:
              cpu: 2m
              memory: 15Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: private-registry-creds
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cilium-win
        serviceAccountName: cilium-win
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:45:29Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-xl
    namespace: kube-system
    resourceVersion: "1749192329293471015"
    uid: a43e2e05-3c4e-4776-b94c-87fb081b29f5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.31
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Gt
                  values:
                  - "256"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 1500Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:45:26Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cilium
    name: anetd-xs
    namespace: kube-system
    resourceVersion: "1749192326882991005"
    uid: ff9bb650-d744-4011-9614-b8cd092a02aa
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cilium
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: advanceddatapath
          components.gke.io/component-version: 32.3.31
          prometheus.io/port: "9990"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: cilium
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - ek
                - key: cloud.google.com/gke-memory-gb-scaling-level
                  operator: Lt
                  values:
                  - "2"
        automountServiceAccountToken: false
        containers:
        - args:
          - |
            exec {BASH_XTRACEFD}>&1 && set -x

            if [[ -n "$${CILIUM_CONFIG_MAP}" ]] \
                && [[ ! -f "$${CILIUM_CONFIG_MAP}/mtu" ]] \
                && [[ -n "$${MTU_DEVICE_IP}" ]]; then
              # Get mtu of the interface which has ip address '$${MTU_DEVICE_IP}'
              mtu="$$(ip addr show to "$${MTU_DEVICE_IP}" | grep mtu | awk '{for (I=1;I<NF;I++) if ($$I == "mtu") print $$(I+1)}')"

              # Check if we could retrive a number in 'mtu'
              if [[ "$${mtu}" =~ ^[0-9]+$$ ]]; then
                mtuArg="--mtu=$${mtu}"
              fi
            fi

            exec /usr/bin/cilium-agent \
              --k8s-kubeconfig-path=/var/lib/kubelet/kubeconfig \
              --config-dir="$${CILIUM_CONFIG_MAP}" \
              $${mtuArg:-}
          command:
          - bash
          - -euc
          env:
          - name: GOPS_CONFIG_DIR
            value: /.config
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_K8S_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CILIUM_FLANNEL_MASTER_DEVICE
            valueFrom:
              configMapKeyRef:
                key: flannel-master-device
                name: cilium-config
                optional: true
          - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
            valueFrom:
              configMapKeyRef:
                key: flannel-uninstall-on-exit
                name: cilium-config
                optional: true
          - name: MTU_DEVICE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CILIUM_CONFIG_MAP
            value: /tmp/cilium/config-map
          - name: CILIUM_CLUSTERMESH_CONFIG
            value: /var/lib/cilium/clustermesh/
          - name: CILIUM_CNI_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cni-chaining-mode
                name: cilium-config
                optional: true
          - name: CILIUM_CUSTOM_CNI_CONF
            valueFrom:
              configMapKeyRef:
                key: custom-cni-conf
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 60
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
          - containerPort: 9965
            hostPort: 9965
            name: flowmetrics
            protocol: TCP
          - containerPort: 9879
            hostPort: 9879
            name: agenthealth
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
            privileged: true
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
              - name: brief
                value: "true"
              path: /healthz
              port: agenthealth
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.config
            name: gops-config-dir
          - mountPath: /sys/fs/bpf
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
          - mountPath: /host/etc/cni/net.d
            name: etc-cni-netd
          - mountPath: /var/lib/cilium/clustermesh
            name: clustermesh-secrets
            readOnly: true
          - mountPath: /tmp/cilium/config-map
            name: cilium-config-path
            readOnly: true
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/log/network
            name: network-log
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki/ca-certificates.crt
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/cilium-agent-metrics-collector-config-data.textproto,/conf/cilium-agent-hubble-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: cilium-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: cilium-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: cilium-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /install-plugin.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-path
        - command:
          - /init-container.sh
          env:
          - name: CILIUM_ALL_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-state
                name: cilium-config
                optional: true
          - name: CILIUM_BPF_STATE
            valueFrom:
              configMapKeyRef:
                key: clean-cilium-bpf-state
                name: cilium-config
                optional: true
          - name: CILIUM_WAIT_BPF_MOUNT
            valueFrom:
              configMapKeyRef:
                key: wait-bpf-mount
                name: cilium-config
                optional: true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cilium/cilium:v1.16.8-gke1.32-gke.13@sha256:4c254dbc472ff6eba59a0fdd4c59be0e764f98e7cb2cda51d9d1a85f6e18bfd3
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: HostToContainer
            name: bpf-maps
          - mountPath: /var/run/cilium
            name: cilium-run
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 1
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: gops-config-dir
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/ca-certificates.crt
            type: File
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /home/kubernetes/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
            type: DirectoryOrCreate
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/log/network
            type: DirectoryOrCreate
          name: network-log
        - name: clustermesh-secrets
          secret:
            defaultMode: 420
            optional: true
            secretName: cilium-clustermesh
        - name: cilium-config-path
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: cilium-config
            - configMap:
                name: cilium-hubble-config
            - configMap:
                name: cilium-config-emergency-override
        - configMap:
            defaultMode: 420
            items:
            - key: cilium-agent-metrics-collector-config-data
              path: cilium-agent-metrics-collector-config-data.textproto
            - key: cilium-agent-hubble-metrics-collector-config-data
              path: cilium-agent-hubble-metrics-collector-config-data.textproto
            name: cilium-agent-metrics-collector-config-map
          name: cilium-agent-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:45:58Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: efficiency-daemon
    name: efficiency-daemon
    namespace: kube-system
    resourceVersion: "1749193203668127018"
    uid: 46ba87c1-1c75-49c8-85ac-7b941fba0c43
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: efficiency-daemon
    template:
      metadata:
        annotations:
          components.gke.io/component-name: efficiency-daemon
          components.gke.io/component-version: 32.1.1
        creationTimestamp: null
        labels:
          k8s-app: efficiency-daemon
          name: efficiency-daemon
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/slice-of-hardware
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-accelerator
                  operator: DoesNotExist
        containers:
        - args:
          - -host_prefix=/host
          - -config_path=/config/efficiency-daemon-config.yaml
          - -config_overrides=efficiency-daemon-config-overrides
          - -eviction_hard_memory_available=100Mi
          - -log_level=info
          command:
          - /efficiency_daemon
          env:
          - name: CLUSTER_PROJECT
            value: "646535140553"
          - name: CLUSTER_LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: efficiency-daemon
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon:v32.1.0-gke.0@sha256:730ea76188d686b0e6343ce3bd4b9c8f8e7db984736587cd40aca0dac9676d6b
          imagePullPolicy: Always
          name: efficiency-daemon
          resources:
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/kubernetes/manifests
            name: k8s-manifests
            readOnly: true
          - mountPath: /host/run/containerd/containerd.sock
            name: containerd-sock
          - mountPath: /host/run/nri/nri.sock
            name: nri-sock
          - mountPath: /host/sys/fs/cgroup
            name: sys-cgroup
          - mountPath: /host/sys/devices/system/cpu
            name: sys-cpu
          - mountPath: /config
            name: efficiency-daemon-config
          - mountPath: /host/home/kubernetes/bin/kubelet
            name: kubelet-exec
          - mountPath: /var/run/dbus/system_bus_socket
            name: dbus-sock
          - mountPath: /host/sys/module
            name: sys-module
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: efficiency-daemon
        serviceAccountName: efficiency-daemon
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/manifests
            type: Directory
          name: k8s-manifests
        - hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
          name: containerd-sock
        - hostPath:
            path: /run/nri/nri.sock
            type: Socket
          name: nri-sock
        - hostPath:
            path: /sys/fs/cgroup
            type: Directory
          name: sys-cgroup
        - hostPath:
            path: /sys/devices/system/cpu
            type: Directory
          name: sys-cpu
        - configMap:
            defaultMode: 420
            name: efficiency-daemon-config
          name: efficiency-daemon-config
        - hostPath:
            path: /home/kubernetes/bin/kubelet
            type: File
          name: kubelet-exec
        - hostPath:
            path: /var/run/dbus/system_bus_socket
            type: Socket
          name: dbus-sock
        - hostPath:
            path: /sys/module
            type: Directory
          name: sys-module
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:05Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-filestore-csi-driver
    name: filestore-node
    namespace: kube-system
    resourceVersion: "1749193215727487013"
    uid: 75345a6e-f982-449f-bd74-0a8c3d3b9851
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-filestore-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: filestorecsi
          components.gke.io/component-version: 0.15.12
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: gcp-filestore-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/filestore.csi.storage.gke.io/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.36@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --node=true
          - --nodeid=$(KUBE_NODE_NAME)
          - --feature-lock-release=true
          - --feature-lock-release-standalone=true
          - --http-endpoint=:990
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.16@sha256:69335be45d06de54c05765aeb077be872e67795e0b5434924193c6a9db0b8dae
          imagePullPolicy: IfNotPresent
          name: gcp-filestore-driver
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: plugin-dir
        - command:
          - /nfs_services_start.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver:v1.8.0-gke.16@sha256:69335be45d06de54c05765aeb077be872e67795e0b5434924193c6a9db0b8dae
          imagePullPolicy: IfNotPresent
          name: nfs-services
          resources:
            requests:
              cpu: 10m
              memory: 110Mi
          securityContext:
            allowPrivilegeEscalation: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: filestorecsi-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/filestorecsi-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
          imagePullPolicy: IfNotPresent
          name: filestorecsi-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: filestorecsi-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: filestorecsi-node-sa
        serviceAccountName: filestorecsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/filestore.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - configMap:
            defaultMode: 420
            items:
            - key: filestorecsi-metrics-collector-config-data
              path: filestorecsi-metrics-collector-config-data.textproto
            name: filestorecsi-metrics-collector-config-map
          name: filestorecsi-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:07Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: big
    name: fluentbit-gke-big
    namespace: kube-system
    resourceVersion: "1749193219733599013"
    uid: d20d4f6f-4a99-4581-903f-8b303e625c12
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
        nodeType: big
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.32.0-gke.5
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
          nodeType: big
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node.kubernetes.io/instance-type
                  operator: NotIn
                  values:
                  - e2-medium
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.76@sha256:30984eb296b2874df183101d793c649bfd964f92d56b0455c7338c86f00265d2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.7@sha256:4b7ba3bcee04c89e607da8989c68c755d20fd4b29df1eedf18b6d3463032cbc3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250323_2300_RC0@sha256:dd396481e47edaa1ceb9faf0e15b56dbff99255786a5e935667f69acdea868b4
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250321.00_p0@sha256:7f776c36ecf7426b9d461b2b9690ff6b6c7fc1d00c78eb050da3e039d431b760
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:08Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      nodeType: small
    name: fluentbit-gke-small
    namespace: kube-system
    resourceVersion: "1749192368200015014"
    uid: 270d412b-e304-4169-b66a-166a288c2697
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
        nodeType: small
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.32.0-gke.5
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
          nodeType: small
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: node.kubernetes.io/instance-type
                  operator: In
                  values:
                  - e2-medium
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.76@sha256:30984eb296b2874df183101d793c649bfd964f92d56b0455c7338c86f00265d2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 20m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.7@sha256:4b7ba3bcee04c89e607da8989c68c755d20fd4b29df1eedf18b6d3463032cbc3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 20m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250323_2300_RC0@sha256:dd396481e47edaa1ceb9faf0e15b56dbff99255786a5e935667f69acdea868b4
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250321.00_p0@sha256:7f776c36ecf7426b9d461b2b9690ff6b6c7fc1d00c78eb050da3e039d431b760
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:17Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcs-fuse-csi-driver
    name: gcsfusecsi-node
    namespace: kube-system
    resourceVersion: "1749193225132543005"
    uid: 33003850-8b3b-40e8-af36-bf1cbdaa8980
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcs-fuse-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gcsfusecsi
          components.gke.io/component-version: 0.9.21
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: gcs-fuse-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --nodeid=$(KUBE_NODE_NAME)
          - --node=true
          - --identity-pool=turnkey-lacing-462106-b1.svc.id.goog
          - --identity-provider=https://container.googleapis.com/v1/projects/turnkey-lacing-462106-b1/locations/us-central1/clusters/autopilot-cluster-2
          - --metrics-endpoint=:9920
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcs-fuse-csi-driver:v1.14.0-gke.2@sha256:e5cf7c99ff11496cfe5cd83c5c743d9e75fb563ee3a38f9e7aa3b5be0895c516
          imagePullPolicy: IfNotPresent
          name: gcs-fuse-csi-driver
          ports:
          - containerPort: 9920
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 20Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: socket-dir
          - mountPath: /sockets
            name: fuse-socket-dir
          - mountPath: /sys
            name: host-sysfs
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/csi.sock
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.10.1-gke.36@sha256:39b8284564214a3660b4cf32b20b9695f6b3ec30f16cb14025c458bb6953a907
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/gcsfusecsi-metrics-collector-config-data.textproto
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: gcsfusecsi-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250311_2300_RC0@sha256:e6713a8266629d9e103f7b2c7715bf510170fe28ebe2dc341327fa5e6a0facde
          imagePullPolicy: IfNotPresent
          name: gcsfusecsi-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gcsfusecsi-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gcsfusecsi-node-sa
        serviceAccountName: gcsfusecsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/pods/
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/gcsfuse.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: socket-dir
        - emptyDir: {}
          name: fuse-socket-dir
        - hostPath:
            path: /sys
            type: Directory
          name: host-sysfs
        - configMap:
            defaultMode: 420
            items:
            - key: gcsfusecsi-metrics-collector-config-data
              path: gcsfusecsi-metrics-collector-config-data.textproto
            name: gcsfusecsi-metrics-collector-config-map
          name: gcsfusecsi-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:38Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gke-metadata-server
    name: gke-metadata-server
    namespace: kube-system
    resourceVersion: "1749193295922479020"
    uid: 29539e5b-c347-455a-a5ff-562e3ef98fa3
  spec:
    minReadySeconds: 90
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gke-metadata-server
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metadata-server
          components.gke.io/component-version: 0.4.316
          monitoring.gke.io/path: /metricz
        creationTimestamp: null
        labels:
          addonmanager.kubernetes.io/mode: Reconcile
          k8s-app: gke-metadata-server
      spec:
        containers:
        - command:
          - /gke-metadata-server
          - --logtostderr
          - --token-exchange-endpoint=https://securetoken.googleapis.com/v1/identitybindingtoken
          - --workload-pool=turnkey-lacing-462106-b1.svc.id.goog
          - --alts-service-suffixes-using-node-identity=storage.googleapis.com,bigtable.googleapis.com,bigtable2.googleapis.com,bigtablerls.googleapis.com,spanner.googleapis.com,spanner2.googleapis.com,spanner-rls.googleapis.com,grpclb.directpath.google.internal,grpclb-dualstack.directpath.google.internal,grpc-directpath-dualstack.googleapis.com,staging-wrenchworks.sandbox.googleapis.com,preprod-spanner.sandbox.googleapis.com,wrenchworks-loadtest.googleapis.com,wrenchworks-nonprod.googleapis.com
          - --identity-provider=https://container.googleapis.com/v1/projects/turnkey-lacing-462106-b1/locations/us-central1/clusters/autopilot-cluster-2
          - --passthrough-ksa-list=anthos-identity-service:gke-oidc-envoy-sa,anthos-identity-service:gke-oidc-service-sa,gke-managed-dpv2-observability:hubble-relay,kube-system:antrea-controller,kube-system:container-watcher-pod-reader,kube-system:coredns,kube-system:egress-nat-controller,kube-system:event-exporter-sa,kube-system:filestore-lockrelease-controller-sa,kube-system:fluentd-gcp-scaler,kube-system:gke-metrics-agent,kube-system:gke-spiffe-node-agent,kube-system:heapster,kube-system:konnectivity-agent,kube-system:kube-dns,kube-system:maintenance-handler,kube-system:metadata-agent,kube-system:network-metering-agent,kube-system:node-local-dns,kube-system:pkgextract-service,kube-system:pkgextract-cleanup-service,kube-system:securityprofile-controller,istio-system:istio-ingressgateway-service-account,istio-system:cluster-local-gateway-service-account,csm:csm-sync-agent,knative-serving:controller,kube-system:pdcsi-node-sa,kube-system:gcsfusecsi-node-sa,gmp-system:collector,gke-gmp-system:collector,gke-managed-cim:kube-state-metrics,gke-mcs:gke-mcs-importer
          - --attributes=cluster-name=autopilot-cluster-2,cluster-uid=0211d95b2c2c4836ad6b7233ac3f983eeab37668812c4a50a4976e9dd0d9ff20,cluster-location=us-central1
          - --cluster-uid=0211d95b2c2c4836ad6b7233ac3f983eeab37668812c4a50a4976e9dd0d9ff20
          - --sts-endpoint=https://sts.googleapis.com
          - --token-exchange-mode=sts
          - --cloud-monitoring-endpoint=monitoring.googleapis.com:443
          - --iam-cred-service-endpoint=https://iamcredentials.googleapis.com
          - --cluster-project-number=646535140553
          - --cluster-location=us-central1
          - --cluster-name=autopilot-cluster-2
          - --component-version=0.4.316
          - --ksa-cache-mode=watchchecker
          - --kcp-allow-watch-checker=true
          - --enable-mds-csi-driver=true
          - --enable-alts-bound-token=true
          - --csi-socket=/csi/csi.sock
          - --volumes-db=/var/run/gkemds.gke.io/csi/volumes.boltdb
          - --write-trust-map=true
          env:
          - name: GOMEMLIMIT
            value: "94371840"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metadata-server:gke_metadata_server_20250115.00_p0@sha256:a6301b00a8c2f7091c361c6439f01e20e066aa951e04ef6195e5894b2c5dcf84
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 989
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metadata-server
          ports:
          - containerPort: 987
            name: alts
            protocol: TCP
          - containerPort: 988
            name: metadata-server
            protocol: TCP
          - containerPort: 989
            name: debug-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 989
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /var/run/
            name: container-runtime-interface
          - mountPath: /etc/srv/kubernetes/pki
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
          - mountPath: /sys/firmware/efi/efivars/
            name: efivars
            readOnly: true
          - mountPath: /dev/tpm0
            name: vtpm
            readOnly: true
          - mountPath: /csi
            name: csi-socket-dir
          - mountPath: /var/run/gkemds.gke.io/csi
            name: state-dir
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: pods-dir
          - mountPath: /registration
            name: kubelet-registration-dir
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          iam.gke.io/gke-metadata-server-enabled: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gke-metadata-server
        serviceAccountName: gke-metadata-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /var/run/
            type: Directory
          name: container-runtime-interface
        - hostPath:
            path: /etc/srv/kubernetes/pki/
            type: Directory
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /sys/firmware/efi/efivars/
            type: Directory
          name: efivars
        - hostPath:
            path: /dev/tpm0
            type: CharDevice
          name: vtpm
        - hostPath:
            path: /var/lib/kubelet/plugins/gkemds.gke.io
            type: DirectoryOrCreate
          name: csi-socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
          name: pods-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: kubelet-registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
          name: kubelet-plugins-dir
        - hostPath:
            path: /var/run/gkemds.gke.io/csi
            type: DirectoryOrCreate
          name: state-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:40Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent
    namespace: kube-system
    resourceVersion: "1749193215948863022"
    uid: 86616c7e-b92d-4b85-ae24-b875902f63b1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.16-gke.0
          configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: DoesNotExist
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.0@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 6m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=turnkey-lacing-462106-b1
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:40Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-10
    namespace: kube-system
    resourceVersion: "1749192400987759004"
    uid: f71f22dd-6c76-4dc0-8af7-2d493c46094d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.16-gke.0
          configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "10"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.0@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 60Mi
            requests:
              cpu: 6m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=turnkey-lacing-462106-b1
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:40Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-100
    namespace: kube-system
    resourceVersion: "1749192401091039008"
    uid: 6709b200-c664-4d10-bc1d-d290ad952d84
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.16-gke.0
          configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "100"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.0@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 6m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=turnkey-lacing-462106-b1
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:41Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-20
    namespace: kube-system
    resourceVersion: "1749192401454895005"
    uid: 4ec810cd-c43d-495c-8024-9a187d84deac
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.16-gke.0
          configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "20"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.0@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 70Mi
            requests:
              cpu: 6m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=turnkey-lacing-462106-b1
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:41Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-200
    namespace: kube-system
    resourceVersion: "1749192401666127009"
    uid: 0b0e722b-6fa6-4bdd-b7d5-e9eb14b68182
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.16-gke.0
          configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "200"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.0@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 6m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=turnkey-lacing-462106-b1
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:41Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-50
    namespace: kube-system
    resourceVersion: "1749192402000959010"
    uid: 1d4d156c-1017-419b-972d-9393c2d30740
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.16-gke.0
          configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "50"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.0@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 6m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=turnkey-lacing-462106-b1
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:42Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-500
    namespace: kube-system
    resourceVersion: "1749192402260287012"
    uid: 2d388a5d-4185-4232-a9b4-4c687458271c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.16-gke.0
          configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "500"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.3-gke.0@sha256:36554e4eaf261c96b7fdf23a5dc06ec278523c8dccf857acb79060412de964f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 550Mi
            requests:
              cpu: 6m
              memory: 550Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=turnkey-lacing-462106-b1
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/646535140553/locations/us-central1/clusters/autopilot-cluster-2/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:42Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-windows
    namespace: kube-system
    resourceVersion: "1749192402551039018"
    uid: bc0fdcda-ecf1-4c74-89c4-f17f53aa25c0
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.132.16-gke.0
          configHash: ymxhLy830TGjHx3NAw7//9j6EQXPE3sqpI1DZRA5HgA=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        containers:
        - command:
          - c:\otelsvc.exe
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBERNETES_SERVICE_HOST
            value: kubernetes.default.svc.cluster.local
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: keep
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent-windows:1.15.3-gke.0@sha256:eab87c2dfed1962832dc3e1c2fab19c601cacda055625b0673c471ab6191d035
          imagePullPolicy: IfNotPresent
          name: core-metrics-exporter
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - command:
          - c:\gke_metrics_collector.exe
          env:
          - name: GOMAXPROCS
            value: "1"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto, /conf/kubelet-prober-metrics-collector-config-data.textproto,
              /conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/networkpolicy_antrea-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector-win:20240902_2300_RC0@sha256:091efcb403e37878829ee23d98871c92de27f53c3e9ccd66af7b9141af092f6d
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: networkpolicy_antrea-metrics-collector-config-data
              path: networkpolicy_antrea-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:19Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: ip-masq-agent
    namespace: kube-system
    resourceVersion: "1749193204654767016"
    uid: 854417c5-f958-4cc6-8a9e-b2dffc631609
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: ip-masq-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 12.3.0
        creationTimestamp: null
        labels:
          k8s-app: ip-masq-agent
      spec:
        containers:
        - args:
          - --v=2
          - --logtostderr=false
          - --log_file=/dev/stdout
          - --log_file_max_size=0
          - --masq-chain=IP-MASQ
          - --nomasq-all-reserved-ranges
          - --random-fully=$(GKE_INTERNAL_ip_masq_agent_random_fully)
          - --to-ports=$(GKE_INTERNAL_ip_masq_agent_to_ports)
          env:
          - name: GKE_INTERNAL_ip_masq_agent_random_fully
            valueFrom:
              configMapKeyRef:
                key: ip_masq_agent_random_fully_override
                name: netd-config
                optional: true
          - name: GKE_INTERNAL_ip_masq_agent_to_ports
            valueFrom:
              configMapKeyRef:
                key: ip_masq_agent_to_ports_override
                name: netd-config
                optional: true
          envFrom:
          - configMapRef:
              name: netd-config
            prefix: GKE_INTERNAL_
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ip-masq-agent:v2.12.3-gke.4@sha256:b5db41ddaf863b660da330322714f668101482b528829c50c53229d901d11af5
          imagePullPolicy: IfNotPresent
          name: ip-masq-agent
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
          node.kubernetes.io/masq-agent-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ip-masq-agent
        serviceAccountName: ip-masq-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: config
              path: ip-masq-agent
            name: ip-masq-agent
            optional: true
          name: config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:48:00Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "1749192480655775019"
    uid: 432270b4-f522-4fdf-88d6-17dadb80da5d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - kube-proxy --cluster-cidr=10.35.128.0/17 --oom-score-adj=-998 --v=2 --feature-gates=DisableKubeletCloudCredentialProviders=true,UnauthenticatedHTTP2DOSMitigation=true,KMSv1=true
            --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
            --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
            2>&1
          env:
          - name: KUBERNETES_SERVICE_HOST
            value: 10.128.0.4
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.32.4-gke.1106006
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
          node.kubernetes.io/kube-proxy-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:50Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: maintenance-handler
      name: maintenance-handler
    name: maintenance-handler
    namespace: kube-system
    resourceVersion: "1749192410688319016"
    uid: 85184ec0-fe12-40b8-a540-3fc4a883cd8e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: maintenance-handler
        name: maintenance-handler
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-maintenance-handler
          components.gke.io/component-version: 1.32.6-gke.0
        creationTimestamp: null
        labels:
          k8s-app: maintenance-handler
          name: maintenance-handler
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - z3
        containers:
        - args:
          - --logtostderr
          - --taint=cloud.google.com/impending-node-termination::NoSchedule
          - --test-env=false
          - --regular-vm-timeout=1h0m0s
          - --tpu-vm-timeout=5m
          - --sf-timeout=10m
          - --immediate-shutdown=true
          - --kubeconfig=/var/lib/kubelet/kubeconfig
          - --in-cluster=false
          command:
          - ./gpu-maintenance-handler
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER_PROJECT
            value: "646535140553"
          - name: CLUSTER_LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: CONTAINER_NAME
            value: gpu-maintenance-handler
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gpu-maintenance-handler:1.32.5-gke.0@sha256:c4c0e5d5de758cbb0b0c58d15159997afd8380e8d16d8c04c753c08f893b020b
          imagePullPolicy: IfNotPresent
          name: maintenance-handler
          ports:
          - containerPort: 8526
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
          - mountPath: /run/dbus
            name: run-dbus
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: maintenance-handler
        serviceAccountName: maintenance-handler
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/
            type: Directory
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /run/dbus
            type: Directory
          name: run-dbus
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:48:03Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metadata-proxy
      kubernetes.io/cluster-service: "true"
      version: v0.1
    name: metadata-proxy-v0.1
    namespace: kube-system
    resourceVersion: "1749192483517391013"
    uid: dc060e5d-e4b0-4bfd-a975-192635124192
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metadata-proxy
        version: v0.1
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metadata-proxy
          kubernetes.io/cluster-service: "true"
          version: v0.1
      spec:
        containers:
        - args:
          - --addr=0.0.0.0:988
          image: k8s.gcr.io/metadata-proxy:v0.1.12
          imagePullPolicy: IfNotPresent
          name: metadata-proxy
          resources:
            limits:
              cpu: 30m
              memory: 25Mi
            requests:
              cpu: 30m
              memory: 25Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gke.gcr.io/prometheus-to-sd:v0.11.1-gke.1
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources:
            limits:
              cpu: 2m
              memory: 20Mi
            requests:
              cpu: 2m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          cloud.google.com/metadata-proxy-ready: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metadata-proxy
        serviceAccountName: metadata-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:16Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nccl-fastsocket-installer
    name: nccl-fastsocket-installer
    namespace: kube-system
    resourceVersion: "1749192436405519018"
    uid: 9fd4de95-453c-4685-9c31-2b840584187f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nccl-fastsocket-installer
    template:
      metadata:
        annotations:
          components.gke.io/component-name: nccl-fast-socket-installer
          components.gke.io/component-version: 1.32.4-gke.6
        creationTimestamp: null
        labels:
          k8s-app: nccl-fastsocket-installer
          name: nccl-fastsocket-installer
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: cloud.google.com/gke-nccl-fastsocket
                  operator: Exists
        automountServiceAccountToken: false
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/pause:3.10@sha256:bcbd57ba5653580ec647b16d8163cdd1112df3609129b01f912a8032e48265da
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - sh
          - -c
          - |
            cp /usr/lib/libnccl-net.so $NCCL_INSTALL_DIR/
          env:
          - name: NCCL_INSTALL_DIR
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fastsocket-installer:1.32.4-gke.6@sha256:5c4837c5ce29f10b0aef7948c89c427a0c8e7ce959460c3133656f38227934b5
          imagePullPolicy: IfNotPresent
          name: nccl-fastsocket-installer
          resources:
            limits:
              memory: 100Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia/lib64
            name: nvidia-install-lib64-dir-host
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/kubernetes/bin/nvidia/lib64
            type: DirectoryOrCreate
          name: nvidia-install-lib64-dir-host
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:16Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: netd
    name: netd
    namespace: kube-system
    resourceVersion: "1749193209608527001"
    uid: 2d105db9-43a6-431c-9238-9b519f45c85f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: netd
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 12.3.0
        creationTimestamp: null
        labels:
          k8s-app: netd
      spec:
        containers:
        - args:
          - --enable-policy-routing=$(ENABLE_POLICY_ROUTING)
          - --enable-source-valid-mark=$(ENABLE_SOURCE_VALID_MARK)
          - --exclude-dns=$(EXCLUDE_DNS)
          - --logtostderr
          - --reconcile-interval-seconds=$(RECONCILE_INTERVAL_SECONDS)
          - --metrics-collectors=$(METRICS_COLLECTORS)
          - --metrics-address=$(METRICS_ADDRESS)
          - --stack-type=$(STACK_TYPE)
          env:
          - name: ENABLE_POLICY_ROUTING
            value: "true"
          - name: ENABLE_SOURCE_VALID_MARK
            value: "false"
          - name: EXCLUDE_DNS
            value: "false"
          - name: RECONCILE_INTERVAL_SECONDS
            valueFrom:
              configMapKeyRef:
                key: reconcile_interval_seconds
                name: netd-config
          - name: METRICS_COLLECTORS
            valueFrom:
              configMapKeyRef:
                key: metrics_collectors
                name: networking-metrics-config
          - name: METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: metrics_address
                name: networking-metrics-config
          - name: STACK_TYPE
            valueFrom:
              configMapKeyRef:
                key: stack_type
                name: networking-metrics-config
          - name: CURRENT_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/netd:v0.9.8-gke.2@sha256:d85ae485d899b509bc1b44e1668842ee4ab6b84de620026f2801e2fb160175a2
          imagePullPolicy: IfNotPresent
          name: netd
          resources:
            requests:
              cpu: 2m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/var/lib/cni/networks/gke-pod-network
            name: gke-pod-network
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/netd-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: metrics_address
                name: networking-metrics-config
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: netd-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250219_2300_RC0@sha256:417803914b2912d9d64e2df7b9cfc8770675076ed912b3ec1f52a0e4104f6f5f
          imagePullPolicy: IfNotPresent
          name: netd-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: netd-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - env:
          - name: MIGRATE_TO_DPV2
            value: "false"
          - name: CNI_SPEC_TEMPLATE
            valueFrom:
              configMapKeyRef:
                key: cni_spec_template
                name: netd-config
          - name: CNI_SPEC_NAME
            valueFrom:
              configMapKeyRef:
                key: cni_spec_name
                name: netd-config
          - name: CNI_SPEC_IPV6_ROUTE
            valueFrom:
              configMapKeyRef:
                key: cni_spec_ipv6_route
                name: netd-config
          - name: ENABLE_CALICO_NETWORK_POLICY
            valueFrom:
              configMapKeyRef:
                key: enable_calico_network_policy
                name: netd-config
          - name: WRITE_CALICO_CONFIG_FILE
            value: "false"
          - name: ENABLE_IPV6
            valueFrom:
              configMapKeyRef:
                key: enable_ipv6
                name: netd-config
          - name: ENABLE_CILIUM_PLUGIN
            valueFrom:
              configMapKeyRef:
                key: enable_cilium_plugin
                name: netd-config
          - name: ISTIO_CNI_CONFIG
            valueFrom:
              configMapKeyRef:
                key: cni_network_config
                name: istio-cni-plugin-config
                optional: true
          - name: KUBERNETES_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                key: master_ip
                name: netd-config
          - name: CILIUM_CHAINING_MODE
            valueFrom:
              configMapKeyRef:
                key: cilium_chaining_mode
                name: netd-config
          - name: CURRENT_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CILIUM_FAST_START_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: fast-start-namespaces
                name: dpv2-fast-start-config
                optional: true
          - name: RUN_CNI_WATCHDOG
            value: "true"
          - name: CILIUM_WATCHDOG_SUCCESS_WAIT
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_success_wait_seconds
                name: netd-config
          - name: CILIUM_WATCHDOG_FAILURE_RETRY
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_failure_retry_seconds
                name: netd-config
          - name: CILIUM_WATCHDOG_FAST_START_WAIT
            valueFrom:
              configMapKeyRef:
                key: cilium_watchdog_fast_start_wait_seconds
                name: netd-config
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/netd-init:v0.9.8-gke.2@sha256:a4c515e0950a49e9afded17a84c3fc3859e34c4017d22184a6c1ca5d139a61a4
          imagePullPolicy: IfNotPresent
          name: install-cni
          resources:
            requests:
              cpu: 1m
              memory: 5Mi
          restartPolicy: Always
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
          - mountPath: /host/home/kubernetes/bin
            name: kubernetes-bin
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: netd
        serviceAccountName: netd
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/cni/net.d
            type: Directory
          name: cni-net-dir
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/lib/cni/networks/gke-pod-network
            type: DirectoryOrCreate
          name: gke-pod-network
        - configMap:
            defaultMode: 420
            items:
            - key: netd-metrics-collector-config-data
              path: netd-metrics-collector-config-data.textproto
            name: netd-metrics-collector-config-map
          name: netd-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:27Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: node-local-dns
      kubernetes.io/cluster-service: "true"
    name: node-local-dns
    namespace: kube-system
    resourceVersion: "1749193211701887015"
    uid: e0cff2da-f848-43f5-9a62-a37f28a46497
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: node-local-dns
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
          components.gke.io/component-name: nodelocaldns
          components.gke.io/component-version: 32.3.1
          prometheus.io/port: "9253"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          k8s-app: node-local-dns
          networking.gke.io/dns-provider: cloud-dns
      spec:
        containers:
        - args:
          - -localip
          - 169.254.20.10,34.118.224.10
          - -conf
          - /etc/Corefile
          - -kubednscm
          - /etc/kube-dns
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-node-cache:1.25.0-gke.10@sha256:701483e0920ea0f8f2ae10e27e45e84813ef7c2508060c053c8bdcc99d7728c1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 169.254.20.10
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: node-cache
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9253
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 25m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /etc/coredns
            name: config-volume
          - mountPath: /etc/kube-dns
            name: kube-dns-config
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nodelocaldns-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nodelocaldns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250120_2300_RC0@sha256:6c6091b2cd2431c93a97e86fe2487cb84ab8a382605b12c4bf51703606bda1c2
          imagePullPolicy: IfNotPresent
          name: nodelocaldns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nodelocaldns-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          addon.gke.io/node-local-dns-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: node-local-dns
        serviceAccountName: node-local-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile.base
            name: node-local-dns
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: nodelocaldns-metrics-collector-config-data
              path: nodelocaldns-metrics-collector-config-data.textproto
            name: nodelocaldns-metrics-collector-config-map
          name: nodelocaldns-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:48Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-cos
    namespace: kube-system
    resourceVersion: "1749192408464143018"
    uid: ed71d4cf-0589-4232-ae6f-90743bb7246e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.3
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250429_2300_RC0@sha256:df8f5ad86eb46287f6ab4baddd086d6793fb0cee4d1aa98fbe706567e8dd3ee6
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:49Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-ubuntu
    namespace: kube-system
    resourceVersion: "1749192409371615011"
    uid: 7751e940-1c65-4ef4-881c-43d39bc944d1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.3
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250429_2300_RC0@sha256:df8f5ad86eb46287f6ab4baddd086d6793fb0cee4d1aa98fbe706567e8dd3ee6
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:47Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-cos
    namespace: kube-system
    resourceVersion: "1749192408237359019"
    uid: 6a203eeb-8c9c-4e1d-badf-6a3c7ed9836e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.3
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250429_2300_RC0@sha256:df8f5ad86eb46287f6ab4baddd086d6793fb0cee4d1aa98fbe706567e8dd3ee6
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:48Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-ubuntu
    namespace: kube-system
    resourceVersion: "1749192409037071009"
    uid: 35271ed8-732b-4034-b85f-fcc06d153786
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.3
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250429_2300_RC0@sha256:df8f5ad86eb46287f6ab4baddd086d6793fb0cee4d1aa98fbe706567e8dd3ee6
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:47Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-cos
    namespace: kube-system
    resourceVersion: "1749192407910399004"
    uid: 4df88bfd-285a-4076-9b75-fa53fe12b79e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.3
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250429_2300_RC0@sha256:df8f5ad86eb46287f6ab4baddd086d6793fb0cee4d1aa98fbe706567e8dd3ee6
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:46:48Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-ubuntu
    namespace: kube-system
    resourceVersion: "1749192408684927012"
    uid: 82c29e03-0d85-4f20-9f7c-c36d7db60be8
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.32.5-gke.3
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.32.4-gke.6@sha256:f5c29978cbfdb3fa85fcf3ac39d1283ada5e5724bbe2cc6e05962de77a11dd59
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250429_2300_RC0@sha256:df8f5ad86eb46287f6ab4baddd086d6793fb0cee4d1aa98fbe706567e8dd3ee6
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.32.4-gke.6@sha256:7ef573f6c76f891e4d9f835c7a1f0cbf1d9a2537b6e8c4a8449126c581784906
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:32Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: parallelstore-csi-driver
    name: parallelstore-csi-node
    namespace: kube-system
    resourceVersion: "1749193211645807008"
    uid: 9c487f37-b0f3-4e0a-b465-1e45825cb45e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: parallelstore-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: parallelstorecsi
          components.gke.io/component-version: 0.4.23
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: parallelstore-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --nodeid=$(KUBE_NODE_NAME)
          - --node=true
          - --cluster-network=default
          - --network-project-id=turnkey-lacing-462106-b1
          - --sidecar-image=$(SIDECAR_IMAGE)
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_IMAGE
            valueFrom:
              configMapKeyRef:
                key: sidecar-image
                name: parallelstorecsi-image-config
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/parallelstore-csi-driver:v0.2.6-gke.2@sha256:ae7664753284650d745f536c639e4e0547113b1bf3d05b5236cfae180583d608
          imagePullPolicy: Always
          name: parallelstore-csi-driver
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: socket-dir
          - mountPath: /sys
            name: host-sysfs
          - mountPath: /gke-parallelstore-tmp
            name: gke-parallelstore-tmp
        - args:
          - --v=3
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/csi.sock
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.36@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/arch: amd64
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: parallelstore-csi-node-sa
        serviceAccountName: parallelstore-csi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/parallelstore.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /sys
            type: Directory
          name: host-sysfs
        - emptyDir: {}
          name: gke-parallelstore-tmp
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:38Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node
    namespace: kube-system
    resourceVersion: "1749193213702703021"
    uid: d736fd65-7060-474a-b9e3-44c9f5158833
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.21.27
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.36@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          - --enable-data-cache
          - --enable-data-cache=true
          - --node-name=$(KUBE_NODE_NAME)
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.17.9-gke.1@sha256:54dc28c2ad13913ab89e74ee40bbbebc8f758b4b19d6fdba8ebb46e78ab9a44e
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 450Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /dev
            name: device-dir
          - mountPath: /etc/udev
            name: udev-rules-etc
          - mountPath: /lib/udev
            name: udev-rules-lib
          - mountPath: /run/udev
            name: udev-socket
          - mountPath: /sys
            name: sys
          - mountPath: /tmp
            name: tmp
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /etc/lvm
            name: lvm-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /etc/udev
            type: Directory
          name: udev-rules-etc
        - hostPath:
            path: /lib/udev
            type: Directory
          name: udev-rules-lib
        - hostPath:
            path: /run/udev
            type: Directory
          name: udev-socket
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - emptyDir:
            sizeLimit: 5Mi
          name: tmp
        - emptyDir:
            sizeLimit: 5Mi
          name: lvm-dir
        - hostPath:
            path: /lib/modules
            type: Directory
          name: modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:38Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node-windows
    namespace: kube-system
    resourceVersion: "1749192459068927000"
    uid: d25109e6-20dc-418f-8abc-eefd399f2caf
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.21.27
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=unix://C:\\csi\\csi.sock
          - --kubelet-registration-path=C:\\var\\lib\\kubelet\\plugins\\pd.csi.storage.gke.io\\csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.36@sha256:cace9f12159c1c0f5d8fbd40dbc1324dc07af1f9571e0e2214df7ed01298ce83
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          command:
          - /gce-pd-csi-driver
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.17.9-gke.1@sha256:54dc28c2ad13913ab89e74ee40bbbebc8f758b4b19d6fdba8ebb46e78ab9a44e
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\var\lib\kubelet
            mountPropagation: None
            name: kubelet-dir
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: \\.\pipe\csi-proxy-volume-v1
            name: csi-proxy-volume-v1
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1
            name: csi-proxy-filesystem-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1
            name: csi-proxy-disk-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1beta2
            name: csi-proxy-disk-pipe
          - mountPath: \\.\pipe\csi-proxy-volume-v1beta1
            name: csi-proxy-volume-pipe
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1beta1
            name: csi-proxy-filesystem-pipe
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1
            type: ""
          name: csi-proxy-disk-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1
            type: ""
          name: csi-proxy-volume-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1
            type: ""
          name: csi-proxy-filesystem-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1beta2
            type: ""
          name: csi-proxy-disk-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1beta1
            type: ""
          name: csi-proxy-volume-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1beta1
            type: ""
          name: csi-proxy-filesystem-pipe
        - hostPath:
            path: \var\lib\kubelet\plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: \var\lib\kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: \var\lib\kubelet\plugins\pd.csi.storage.gke.io
            type: DirectoryOrCreate
          name: plugin-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:45:24Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: runsc-metric-server
      kubernetes.io/cluster-service: "true"
    name: runsc-metric-server
    namespace: kube-system
    resourceVersion: "1749192324916239018"
    uid: 863d81f9-912e-43e7-8cb1-faae7ba2f6a2
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: runsc-metric-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: runsc-metric-server
      spec:
        containers:
        - command:
          - /runsc-metric-server
          - --metric-server=127.0.0.1:9115
          - --root=/run/containerd/runsc/k8s.io
          - --alsologtostderr=true
          - metric-server
          - --allow-unknown-root=true
          - --exporter-prefix=
          - --pid-file=/run/containerd/runsc/metric-server.pid
          image: gcr.io/distroless/static
          imagePullPolicy: IfNotPresent
          name: runsc-metric-server
          resources:
            limits:
              cpu: 25m
              memory: 64Mi
            requests:
              cpu: 3m
              memory: 12Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /runsc-metric-server
            name: runscbin
          - mountPath: /run/containerd/runsc
            name: containerdrunsc
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
          sandbox.gke.io/runtime: gvisor
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        volumes:
        - hostPath:
            path: /home/containerd/usr/local/sbin/runsc
            type: ""
          name: runscbin
        - hostPath:
            path: /run/containerd/runsc
            type: ""
          name: containerdrunsc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 100%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-06-06T06:47:50Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: tpu-device-plugin
    name: tpu-device-plugin
    namespace: kube-system
    resourceVersion: "1749192470595471024"
    uid: 2798aefd-23dd-4bdf-943a-d9c68dad7434
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: tpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: tpu-device-plugin
          components.gke.io/component-version: 1.32.7-gke.2
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: tpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
                - key: gke-no-default-tpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
        containers:
        - env:
          - name: CLUSTER_PROJECT
            value: "646535140553"
          - name: CLUSTER_LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: CONTAINER_NAME
            value: tpu-device-plugin
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/tpu-device-plugin:1.32.4-gke.3@sha256:4d0b46add0c421ab9a310d775ce8b846ab763d01ea724662e1345f467174290f
          imagePullPolicy: IfNotPresent
          name: tpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 80Mi
            requests:
              cpu: 80m
              memory: 80Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
        - args:
          - /bin/sh
          - -c
          - tail -n+1 -F /tmp/tpu_logs/tpu_driver.INFO
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: sidecar-log-collector
          resources:
            limits:
              memory: 20Mi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
            readOnly: true
        - args:
          - --logtostderr
          - --census_enabled=false
          - --gid=
          - --uid=
          - --chroot=
          command:
          - vbar_control_agent_files/bin/vbar_control_agent
          env:
          - name: TPU_SKIP_MDS_QUERY
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/vbar_control_agent@sha256:0047fe3e5e06109d6bcf0d11ba8bda790606958c888e6254d8ac1cbcc5a331da
          imagePullPolicy: IfNotPresent
          name: vbar-control-agent
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 10m
              memory: 150Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /tpu_network_optimizer.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/tpu_network_optimizer:tpu_network_optimizer_20241212.00_p0@sha256:ad1446302c2a7714af62959dd84fc9cd47552085cac4f03580cb4c5eb523e81c
          imagePullPolicy: IfNotPresent
          name: tpu-network-optimization
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys
            name: sys
          - mountPath: /proc
            name: proc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: tpu-device-plugin-sa
        serviceAccountName: tpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: DirectoryOrCreate
          name: device-plugin
        - hostPath:
            path: /dev
            type: DirectoryOrCreate
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: DirectoryOrCreate
          name: pod-resources
        - hostPath:
            path: /etc/tpu
            type: DirectoryOrCreate
          name: tpu-env
        - hostPath:
            path: /tmp/tpu_logs
            type: DirectoryOrCreate
          name: tpu-logs
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - hostPath:
            path: /proc
            type: Directory
          name: proc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.2
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: nginx-app
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-06-06T07:54:10Z"
    generation: 5
    labels:
      app.kubernetes.io/managed-by: Helm
    name: nginx-app
    namespace: default
    resourceVersion: "1749203901395631023"
    uid: d5226ad9-2454-4b8d-a533-b2d5ecdac541
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx-app
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-app
      spec:
        containers:
        - image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606095759
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-06-06T07:54:14Z"
      lastUpdateTime: "2025-06-06T07:54:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:54:10Z"
      lastUpdateTime: "2025-06-06T09:58:21Z"
      message: ReplicaSet "nginx-app-574c46d4d9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 5
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:07Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    name: gmp-operator
    namespace: gke-gmp-system
    resourceVersion: "1749193219983711014"
    uid: e6c6fd4a-0901-4686-8bd2-b52153e1c055
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.0
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gke-gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVLekNDQXBPZ0F3SUJBZ0lSQUo1OE1uMUM0dDhmZkp3UmdXS0xaRkV3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05URXlOall6TWpVdE5EaG1NUzAwWkdJNExXSmtOVFV0TW1RMk1EWmtaakU0TTJVeApNQjRYRFRJMU1EWXdOakEyTXpnek0xb1hEVE13TURZd05UQTJOREF6TTFvd09ERTJNRFFHQTFVRUF4TXRaMjF3CkxXOXdaWEpoZEc5eUxtZHJaUzFuYlhBdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdG90TDV0UFdjNjJ4TlRTYXNxdjZhaU1wU3MrRQpsZVY2elRwcnB4ZkJ2dlQxMTZqSG1XQlFlSmNubGhxRTVxMTBYNnRMeDRxTitza1o3MURlUEZsaHZ3WTlKU3F1CngzQlJkc0lBL1dGVmVzcnM2eHNtTjRVWS9vS2lUU1RFQnpJQWY4U2dJZWJBbG95Zmordm9lVGozUWRGVk9KeEoKSExjd1Ywd0NtVjFJN3JkeVU5ZW1iRXFxalp6QXlpQ3ZHdFM1NmdpZTM4bTdVZ3JMeFlsQi9zdlJOVGhWUDJ0dQo0SUhLMzJKWUhTVjNQT2dYczhNNWpGRUNDQWtiWEFiNEFUaXNpbnJ5aFUxM2o0emRuQW8rbUlRUnJXZFArWUgvCkZKcHBWNEpBN1ExSURSOC9FU1ZXUGNaVEpRZ2ZBVmdOSWFEejBacHhaY0RpZzNEbG9zNHNoWlpUdndJREFRQUIKbzRHNE1JRzFNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSVWlKTHgvcG1DSzh5ZFZiZEF4a2pFCnZDNWloekJWQmdOVkhSRUVUakJNZ2d4bmJYQXRiM0JsY21GMGIzS0NHMmR0Y0MxdmNHVnlZWFJ2Y2k1bmEyVXQKWjIxd0xYTjVjM1JsYllJZloyMXdMVzl3WlhKaGRHOXlMbWRyWlMxbmJYQXRjM2x6ZEdWdExuTjJZekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVlFQWtyZk1VQUt0UkdBU3o5bkFHUEYzRVlUWHJpVC9BalVwTVowYkU1Y1FaVWJ6CldoK29iMDcyRlVhWm1tWnByNTVzR0ZLcVJtVE9lOFk4Y3cwZFhNa1BqVUoyRzJBY09iNVQ4TThxczM0NXJqL2kKZXNPeVAvSm14VXpIWUZFL3A2VHVTVDdVZi9Ib0xseFU3VzQ2bUlCZERJMk5xZFhWelY3ZmFxSG4xdWJuUGd2MwpvL2JpQ3RXdFVtN1dxb2l5enptSXBJeWd2WEd6R0o2Mk9CazZjajRoVHJRMFV1Rnk1TFhERlhGVkN4dm54S3hkClViWW9jZ3NLWW5GdmNINWFSbUlMcFk1R0xZL1pzcWMvUnJYVVA3blVtYml3WkMzdWNnRHMxSUUwb0o5QWZmSzIKc3J3Q3o5RW1rY2dDY3ltUWp1UTJSQi80cEd0WnI0Z1JtWWJGeG1XT253WjhDVzRxZmEwTVQ2bU5WOEZaOWtCVAo5a05CYzlVRzI4U3hQdlVRZWl6K0tKNml2RGo3WHlkVFR3azkvcjZvY3R1bml2UVhGajFoZG1KL2YyMGQrSmtMClNXSjk3R1VRTkQ4TFJhYXJzangwM0x3ZnRHR3QrTExzNjczL3YzWkxlK2QvWStKR2owcitpdDZUc0xRODh6TFIKaHZRVW5HQ2c3NklublRjajVFT2oKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdG90TDV0UFdjNjJ4TlRTYXNxdjZhaU1wU3MrRWxlVjZ6VHBycHhmQnZ2VDExNmpICm1XQlFlSmNubGhxRTVxMTBYNnRMeDRxTitza1o3MURlUEZsaHZ3WTlKU3F1eDNCUmRzSUEvV0ZWZXNyczZ4c20KTjRVWS9vS2lUU1RFQnpJQWY4U2dJZWJBbG95Zmordm9lVGozUWRGVk9KeEpITGN3VjB3Q21WMUk3cmR5VTllbQpiRXFxalp6QXlpQ3ZHdFM1NmdpZTM4bTdVZ3JMeFlsQi9zdlJOVGhWUDJ0dTRJSEszMkpZSFNWM1BPZ1hzOE01CmpGRUNDQWtiWEFiNEFUaXNpbnJ5aFUxM2o0emRuQW8rbUlRUnJXZFArWUgvRkpwcFY0SkE3UTFJRFI4L0VTVlcKUGNaVEpRZ2ZBVmdOSWFEejBacHhaY0RpZzNEbG9zNHNoWlpUdndJREFRQUJBb0lCQUZabGMxVWFxZ015RUE4bwppSmRNQWtjOXdRdGhVRlZKdVdkczRRckNtYlp4WmZIZU5pb0hoYzZ0YTlVRlZDV0JydlNndEVzSzdzdmxabHI0CklWYmF6d0tFUjJoUjNVc1RnOXI3VTFDWlFzWE5TWGkwN3MrVU5SSXdiZlNwRkFaN3lmU3U4VU5hWFloam9obVMKQkFOcnpNcmY4ci9LYUdnbzQ3NU5nV1ZvMjEzdnRCTVZEdlZmNVJOSkxrTUw4TGVxMGp2bmd4aWZJUENOUXRubQpTbW1Ua1ltSXMyYkVzcFVhQUhpajNzMWRjZUJtMGtNaEw5aWgyeHU1dVB2eCtlLzZxWEZGczZRN1JWOGxKTnlqCkhuQkhDVkp1eGtaWDg1K0REbERUUXk5SXMzaUx0ZmpvV09MRjRjanY2dVlnTHROUUk5MFZJL0Nac0FyZUtOeDYKVk5SMHZIRUNnWUVBNTdxT2NweVNMY2V0Q2l2b2hrWmhqUDlqOVJnQU1jUk01aDdKOTVaQ2dpTkVnQ0tkQ1NHbApsYmxoa0ZhdksraVpqVVoxcWQ1R3Z4MEFzQ1dheTNlRmtuaHBXMUgzTG1kWVp1SUh5ZW9zN3FReXc4SmFKdk5lCkphS21GcDNDRmJyWjhIK2ZIUVFaUWdwRFFuTHAyM2Y2MTV4eHM4TEprMVp4aWczbkF0NEtTT3NDZ1lFQXlhbnUKZzkxVTNkOFhHZ2o3WnAzN2E5bWNUWG1ISXBhblZtb2IrT3FvV1RacDJMY2dCeFVKT1hmR0RnQVoxTEt6dERCZAppQkppeFltdjJ2YnliRFE1U2M3Y2N0SVc1MmJnUTRxbkNKNGVhRHhidGorV3I1eFY2c1VzQmhzN3FGMnF3SG1hCmkzZlprRmpGSUlOeDFZYitZS0k1NGZQLzc5aU1ZQmxrSTdTajYzMENnWUJVTWhCM3pEUEF0b0JFNWRkQ2ttZjMKVndQMmxaWGNmenFCa2taSDB5eXZKQ2xMZFVnaGZUd3d2bjZZZHlhR2lhamhEK3pJbjU2TTZmaktCNS9LdGM2dQpmVm1xZUltYkxxbU1HQ3hFVFBXdWI3S1NOaGVUZDNHSnN5TXRySHhNY091bTJuZnhqdit1WXhRMUhKT2p6bUF4CjN3SGhFckV5KzRHZGE1ZTREdjBscVFLQmdHQmJNNzRKK1V6eUZZVzVHUFpWTWhhOEtYVFRSb0IrWDRKb3ZPalkKcG92SjloVTRtck1IbUJxL1lnQzZoNTBicmNYQS9rL1FDU1c5dmlydnA3R1AybmVyd2FXVFFLSmNnM2VDUG9GZAptOFhPWVR2WmNsU0NiSUw2cHloYnhzdVJ4YzZseS9RcjFlYWtvN3YvVWxybVg1RW9zbU9HUkpvRGJEOVdvb1IxCkFZVzVBb0dBQTI3SUJyWGt2VW4vS29SZVNvYkllZS9XcVRQOWgxUWlCcHJvbWJrcmx5L3VNd1g4UTkrYXJrR28KL3RPNURUQ3kvU0RDbGZ2cjkrRTMzQlREYi9jVXZSTHEwNDFybVp3T1dMSTgrUFN3UlVXOGYxLythZkZWQnVBNQp0T3hjYmJud045dVY1WUdRTDg3dHdEZ21ibEJXdUplc3pRS3NBL0cxU2J0V0lTVDNNaFE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
          - --project-id=turnkey-lacing-462106-b1
          - --location=us-central1
          - --cluster=autopilot-cluster-2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.3-gke.0@sha256:0e51d4ab84bac684012b2b52a2d38f3c340b4647f3879b77d70ae18ac4bb7271
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:19Z"
      lastUpdateTime: "2025-06-06T07:00:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:19Z"
      lastUpdateTime: "2025-06-06T07:00:19Z"
      message: ReplicaSet "gmp-operator-66b9979cfd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:07Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: rule-evaluator
    namespace: gke-gmp-system
    resourceVersion: "1749193219608879001"
    uid: bda4f321-a8a0-492d-a2dc-23f3e8cdd583
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: rule-evaluator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.0
        creationTimestamp: null
        labels:
          app: managed-prometheus-rule-evaluator
          app.kubernetes.io/name: rule-evaluator
          app.kubernetes.io/version: 0.15.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --config-dir=/etc/rules
          - --config-dir-output=/prometheus/rules_out
          - --watched-dir=/etc/secrets
          - --reload-url=http://127.0.0.1:19092/-/reload
          - --ready-url=http://127.0.0.1:19092/-/ready
          - --listen-address=:19093
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19093
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
          - mountPath: /etc/rules
            name: rules
            readOnly: true
          - mountPath: /prometheus/rules_out
            name: rules-out
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --web.listen-address=:19092
          - --export.user-agent-mode=gke
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.3-gke.0@sha256:8306dabf64f36188eaedd022dca0362a4a833efec313e8c922543490e82887f4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: evaluator
          ports:
          - containerPort: 19092
            name: r-eval-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/rules
            name: rules-out
            readOnly: true
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: rule-evaluator
          name: config
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: rules-generated
          name: rules
        - emptyDir: {}
          name: rules-out
        - name: rules-secret
          secret:
            defaultMode: 420
            secretName: rules
  status:
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:19Z"
      lastUpdateTime: "2025-06-06T07:00:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:19Z"
      lastUpdateTime: "2025-06-06T07:00:19Z"
      message: ReplicaSet "rule-evaluator-58fcf75478" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:23Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
      app: antrea
      component: antrea-controller
    name: antrea-controller
    namespace: kube-system
    resourceVersion: "1749192443780287020"
    uid: 36541856-405b-4f71-a53a-16ede8e82d3c
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: antrea
        component: antrea-controller
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
          prometheus.io/port: "10352"
          prometheus.io/scrape: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: antrea
          component: antrea-controller
      spec:
        containers:
        - args:
          - --config
          - /etc/antrea/antrea-controller.conf
          - --logtostderr=true
          - --v=0
          command:
          - /antrea-controller
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SERVICEACCOUNT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/antrea:v1.4.0-gke.38@sha256:19d567d11297a5cc221df5557d4d98544d4fbef5b13c8eef01c5f732e9d694aa
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: api
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: antrea-controller
          ports:
          - containerPort: 10349
            name: api
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/antrea/antrea-controller.conf
            name: antrea-config
            readOnly: true
            subPath: antrea-controller.conf
          - mountPath: /var/run/antrea/antrea-controller-tls
            name: antrea-controller-tls
          - mountPath: /var/log/antrea
            name: host-var-log-antrea
          - mountPath: /var/run/antrea
            name: var-run-antrea
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/networkpolicy-antrea-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: networkpolicy-antrea-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: networkpolicy-antrea-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: networkpolicy-antrea-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - chown 1000:1000 /var/run/antrea
          command:
          - /bin/bash
          - -c
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250307.00_p0@sha256:dbc4318b70cdc6429aa57c66ad3f3ef6480b5249b9ea0d9e87ee08157047b7f9
          imagePullPolicy: IfNotPresent
          name: antrea-self-sign-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/antrea
            name: var-run-antrea
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: antrea-controller
        serviceAccountName: antrea-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: var-run-antrea
        - configMap:
            defaultMode: 420
            name: antrea-config
          name: antrea-config
        - name: antrea-controller-tls
          secret:
            defaultMode: 256
            optional: true
            secretName: antrea-controller-tls
        - emptyDir: {}
          name: host-var-log-antrea
        - configMap:
            defaultMode: 420
            items:
            - key: networkpolicy-antrea-metrics-collector-config-data
              path: networkpolicy-antrea-metrics-collector-config-data.textproto
            name: networkpolicy-antrea-metrics-collector-config-map
          name: networkpolicy-antrea-metrics-collector-config-map-vol
  status:
    conditions:
    - lastTransitionTime: "2025-06-06T06:47:23Z"
      lastUpdateTime: "2025-06-06T06:47:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T06:47:23Z"
      lastUpdateTime: "2025-06-06T06:47:23Z"
      message: ReplicaSet "antrea-controller-5c98754db6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:25Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: antrea-controller-autoscaler
      kubernetes.io/cluster-service: "true"
    name: antrea-controller-horizontal-autoscaler
    namespace: kube-system
    resourceVersion: "1749193221740319017"
    uid: 0daac81f-a2ac-4d2a-bbdf-134c1958b054
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: antrea-controller-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
        creationTimestamp: null
        labels:
          k8s-app: antrea-controller-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=antrea-controller-horizontal-autoscaler
          - --target=deployment/antrea-controller
          - --nodelabels=kubernetes.io/os=windows
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.0-gke.11@sha256:af852676a9858afc2842969fb5a204b41368ba41e4f314da179a01b633f64b25
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: antrea-cpha
        serviceAccountName: antrea-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:21Z"
      lastUpdateTime: "2025-06-06T07:00:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:21Z"
      lastUpdateTime: "2025-06-06T07:00:21Z"
      message: ReplicaSet "antrea-controller-horizontal-autoscaler-789fd58764" has
        successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:18Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: egress-nat-controller
    namespace: kube-system
    resourceVersion: "1749193215685407000"
    uid: 3ba13078-54c4-48d2-96a6-eafe86dfd2bf
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        gke-app: egress-nat-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 12.3.0
        creationTimestamp: null
        labels:
          component: netd
          gke-app: egress-nat-controller
      spec:
        containers:
        - args:
          - --pod-cidrs=10.35.128.0/17
          - --service-cidrs=34.118.224.0/20
          - --node-cidrs=10.128.0.0/20
          - --cluster-short-hash=0211d95b
          env:
          - name: CLUSTER_PROJECT
            value: "646535140553"
          - name: CLUSTER_LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: egress-nat-controller
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/egress-nat-controller:v0.2.18-gke.0@sha256:9f422cab20ad1c06bf6d0a946a2b4c5a8b6fa093b0decb34199c0effe3006f9e
          imagePullPolicy: IfNotPresent
          name: egress-nat-controller
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: egress-nat-controller
        serviceAccountName: egress-nat-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:15Z"
      lastUpdateTime: "2025-06-06T07:00:15Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:15Z"
      lastUpdateTime: "2025-06-06T07:00:15Z"
      message: ReplicaSet "egress-nat-controller-5f6bcdc9dd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:45:59Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: event-exporter
      kubernetes.io/cluster-service: "true"
      version: v0.4.0
    name: event-exporter-gke
    namespace: kube-system
    resourceVersion: "1749193226786399018"
    uid: af7aed5e-263d-44e0-8ae0-ceeeb79a9a68
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: event-exporter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.32.1-gke.1
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.0-gke.2@sha256:48cba84b26b6829fcd123bb08a8e56c389887ddba3a9b45d2283a20e2106b046
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.21@sha256:115324fd69b07d97b24615e31d4d7a42a6043b6d2ac4bf7474466dd3659f2170
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:26Z"
      lastUpdateTime: "2025-06-06T07:00:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:26Z"
      lastUpdateTime: "2025-06-06T07:00:26Z"
      message: ReplicaSet "event-exporter-gke-6b8fd586f8" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:05Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: filestorecsi-lock-release-controller
    name: filestore-lock-release-controller
    namespace: kube-system
    resourceVersion: "1749193216809663009"
    uid: 691f09a8-bfd8-4f81-b7e0-bfefd4633ca8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: filestore-lock-release-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: filestorecsi
          components.gke.io/component-version: 0.15.12
        creationTimestamp: null
        labels:
          component: filestorecsi
          k8s-app: filestore-lock-release-controller
      spec:
        containers:
        - args:
          - --v=5
          - --http-endpoint=:22027
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver-lockrelease:v1.8.0-gke.16@sha256:857f3ffa4fd2aa676ac24f07eef423b76f47da35518dda6132a603c984837ef7
          imagePullPolicy: IfNotPresent
          name: filestore-lock-release-controller
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: filestorecsi-lockrelease-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/filestorecsi-lockrelease-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
          imagePullPolicy: IfNotPresent
          name: filestorecsi-lockrelease-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: filestorecsi-lockrelease-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: filestore-lockrelease-controller-sa
        serviceAccountName: filestore-lockrelease-controller-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: filestorecsi-lockrelease-metrics-collector-config-data
              path: filestorecsi-lockrelease-metrics-collector-config-data.textproto
            name: filestorecsi-lockrelease-metrics-collector-config-map
          name: filestorecsi-lockrelease-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T06:46:05Z"
      lastUpdateTime: "2025-06-06T06:48:00Z"
      message: ReplicaSet "filestore-lock-release-controller-6cbd4f7ff4" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-06T07:00:16Z"
      lastUpdateTime: "2025-06-06T07:00:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:52Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: konnectivity-agent
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "1749193219013327024"
    uid: c9a84a86-f0e5-4d31-9c28-160595bb6f7f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.13.10
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=10.128.0.4
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.0@sha256:95108ee2e0e198088c2a9852b7487d8bc26412d5f5e23106c49e6a3644d3d730
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240717_2300_RC0@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:18Z"
      lastUpdateTime: "2025-06-06T07:00:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:18Z"
      lastUpdateTime: "2025-06-06T07:00:18Z"
      message: ReplicaSet "konnectivity-agent-6594574554" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:54Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: konnectivity-agent-autoscaler
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent-autoscaler
    namespace: kube-system
    resourceVersion: "1749193213669087004"
    uid: 8e4682e8-e5ff-4597-81a4-6a0e0b8ae7a6
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.13.10
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.6@sha256:0c3e6735169688e40655864255ce1c680d6d2a6e6daebb1e249084eabaadcf60
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:13Z"
      lastUpdateTime: "2025-06-06T07:00:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:13Z"
      lastUpdateTime: "2025-06-06T07:00:13Z"
      message: ReplicaSet "konnectivity-agent-autoscaler-794fcd5659" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:45:21Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
    name: kube-dns
    namespace: kube-system
    resourceVersion: "1749193225127263022"
    uid: 4e639dda-9c0b-4a50-a362-a6881ff3d916
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 32.7.3
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.25.0-gke.11@sha256:263ab80ea1ed319e6c6e21b19c12a87a9a46558d97d7e4784e06704f579d0019
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.25.0-gke.11@sha256:07ce37a72dabd872cf8369d0b642075ea3364d0a5a1270562ae7695cfa38deb6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.25.0-gke.11@sha256:bcfd3f3fb37550889a6a30eaa788c35042f82317369286a12a8a487ea5cb64ea
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250415_2300_RC0@sha256:ba0c53c89a2f6d634dd79754c29d29fe2072993eff7cb84e9a94c115197ab7fe
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:25Z"
      lastUpdateTime: "2025-06-06T07:00:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:25Z"
      lastUpdateTime: "2025-06-06T07:00:25Z"
      message: ReplicaSet "kube-dns-7786f97d64" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:56Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns-autoscaler
      kubernetes.io/cluster-service: "true"
    name: kube-dns-autoscaler
    namespace: kube-system
    resourceVersion: "1749193213954383023"
    uid: 9dd26af3-5a4f-4717-892e-bd1a72e4b969
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 32.7.3
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.4@sha256:9d9d5a87d33b18cd35821eda1eba37d737f3003ea08c5436d285c56a8f0cb9ab
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:13Z"
      lastUpdateTime: "2025-06-06T07:00:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:13Z"
      lastUpdateTime: "2025-06-06T07:00:13Z"
      message: ReplicaSet "kube-dns-autoscaler-64f77fbb96" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:59Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBC
    name: l7-default-backend
    namespace: kube-system
    resourceVersion: "1749193217038783021"
    uid: 9826dd37-ebdf-4a47-9709-ab25fa52bbcb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: glbc
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.34.2-gke.0
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
      spec:
        automountServiceAccountToken: false
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.34.2@sha256:79870c8c149fd62f93caa1fb33dcc20d0a13e2badd3f74775c1cf82ec5e5b2b2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:00:16Z"
      lastUpdateTime: "2025-06-06T07:00:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:00:16Z"
      lastUpdateTime: "2025-06-06T07:00:16Z"
      message: ReplicaSet "l7-default-backend-7b587fc684" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-06-06T06:47:12Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      version: v1.32.2
    name: metrics-server-v1.32.2
    namespace: kube-system
    resourceVersion: "1749193282118223017"
    uid: 6b07e963-aeca-4b1a-93a0-0a9131c95fd8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
        version: v1.32.2
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.32.2-gke.2
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          version: v1.32.2
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.40@sha256:1a927071b863890cb36470a8e3c1093af63a7f29714c5d6e103167670da3e1f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 43m
              memory: 55Mi
            requests:
              cpu: 43m
              memory: 55Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-06T07:01:19Z"
      lastUpdateTime: "2025-06-06T07:01:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-06T07:01:19Z"
      lastUpdateTime: "2025-06-06T07:01:22Z"
      message: ReplicaSet "metrics-server-v1.32.2-6797fd8c9d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.2
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      meta.helm.sh/release-name: nginx-app
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-06-06T09:58:13Z"
    generation: 2
    labels:
      app: nginx-app
      pod-template-hash: 574c46d4d9
    name: nginx-app-574c46d4d9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-app
      uid: d5226ad9-2454-4b8d-a533-b2d5ecdac541
    resourceVersion: "1749203901070463011"
    uid: 4bd8a6b0-efd7-4e04-ae21-6f3352d00816
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: nginx-app
        pod-template-hash: 574c46d4d9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-app
          pod-template-hash: 574c46d4d9
      spec:
        containers:
        - image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606095759
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.2
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: nginx-app
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-06-06T07:54:10Z"
    generation: 3
    labels:
      app: nginx-app
      pod-template-hash: 679b89b5d7
    name: nginx-app-679b89b5d7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-app
      uid: d5226ad9-2454-4b8d-a533-b2d5ecdac541
    resourceVersion: "1749197332130895010"
    uid: c671ffc4-c976-42cb-a8bd-50f240aa579d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: nginx-app
        pod-template-hash: 679b89b5d7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-app
          pod-template-hash: 679b89b5d7
      spec:
        containers:
        - image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606075355
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.2
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: nginx-app
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-06-06T08:22:20Z"
    generation: 4
    labels:
      app: nginx-app
      pod-template-hash: 689cc59597
    name: nginx-app-689cc59597
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-app
      uid: d5226ad9-2454-4b8d-a533-b2d5ecdac541
    resourceVersion: "1749199975705583006"
    uid: 9171f658-99dd-430f-8e66-6a77de0eb545
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: nginx-app
        pod-template-hash: 689cc59597
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-app
          pod-template-hash: 689cc59597
      spec:
        containers:
        - image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606082210
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.2
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: nginx-app
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-06-06T08:52:50Z"
    generation: 4
    labels:
      app: nginx-app
      pod-template-hash: 7b484fdc8f
    name: nginx-app-7b484fdc8f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-app
      uid: d5226ad9-2454-4b8d-a533-b2d5ecdac541
    resourceVersion: "1749203901328367005"
    uid: a3a8831f-11c6-4724-83dd-a8692e49ad6e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: nginx-app
        pod-template-hash: 7b484fdc8f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-app
          pod-template-hash: 7b484fdc8f
      spec:
        containers:
        - image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606085242
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"nginx"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"nginx"}]},"computeClassAtAdmission":"Default","modified":true}'
      autopilot.gke.io/warden-version: 32.38.0-gke.2
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: nginx-app
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-06-06T08:08:46Z"
    generation: 4
    labels:
      app: nginx-app
      pod-template-hash: 874c94c
    name: nginx-app-874c94c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-app
      uid: d5226ad9-2454-4b8d-a533-b2d5ecdac541
    resourceVersion: "1749198145493935001"
    uid: 412ed0cd-5ae8-42a8-ab26-2ceb9bbb5b1f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: nginx-app
        pod-template-hash: 874c94c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-app
          pod-template-hash: 874c94c
      spec:
        containers:
        - image: gcr.io/turnkey-lacing-462106-b1/nginx-custom:20250606080830
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources:
            limits:
              ephemeral-storage: 1Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
              - NET_RAW
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:07Z"
    generation: 1
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.3
      pod-template-hash: 66b9979cfd
    name: gmp-operator-66b9979cfd
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: e6c6fd4a-0901-4686-8bd2-b52153e1c055
    resourceVersion: "1749193219923807020"
    uid: e476d455-8edb-481e-97e4-14249ca711b6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 66b9979cfd
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.0
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.3
          pod-template-hash: 66b9979cfd
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gke-gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVLekNDQXBPZ0F3SUJBZ0lSQUo1OE1uMUM0dDhmZkp3UmdXS0xaRkV3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa05URXlOall6TWpVdE5EaG1NUzAwWkdJNExXSmtOVFV0TW1RMk1EWmtaakU0TTJVeApNQjRYRFRJMU1EWXdOakEyTXpnek0xb1hEVE13TURZd05UQTJOREF6TTFvd09ERTJNRFFHQTFVRUF4TXRaMjF3CkxXOXdaWEpoZEc5eUxtZHJaUzFuYlhBdGMzbHpkR1Z0TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdG90TDV0UFdjNjJ4TlRTYXNxdjZhaU1wU3MrRQpsZVY2elRwcnB4ZkJ2dlQxMTZqSG1XQlFlSmNubGhxRTVxMTBYNnRMeDRxTitza1o3MURlUEZsaHZ3WTlKU3F1CngzQlJkc0lBL1dGVmVzcnM2eHNtTjRVWS9vS2lUU1RFQnpJQWY4U2dJZWJBbG95Zmordm9lVGozUWRGVk9KeEoKSExjd1Ywd0NtVjFJN3JkeVU5ZW1iRXFxalp6QXlpQ3ZHdFM1NmdpZTM4bTdVZ3JMeFlsQi9zdlJOVGhWUDJ0dQo0SUhLMzJKWUhTVjNQT2dYczhNNWpGRUNDQWtiWEFiNEFUaXNpbnJ5aFUxM2o0emRuQW8rbUlRUnJXZFArWUgvCkZKcHBWNEpBN1ExSURSOC9FU1ZXUGNaVEpRZ2ZBVmdOSWFEejBacHhaY0RpZzNEbG9zNHNoWlpUdndJREFRQUIKbzRHNE1JRzFNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSVWlKTHgvcG1DSzh5ZFZiZEF4a2pFCnZDNWloekJWQmdOVkhSRUVUakJNZ2d4bmJYQXRiM0JsY21GMGIzS0NHMmR0Y0MxdmNHVnlZWFJ2Y2k1bmEyVXQKWjIxd0xYTjVjM1JsYllJZloyMXdMVzl3WlhKaGRHOXlMbWRyWlMxbmJYQXRjM2x6ZEdWdExuTjJZekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVlFQWtyZk1VQUt0UkdBU3o5bkFHUEYzRVlUWHJpVC9BalVwTVowYkU1Y1FaVWJ6CldoK29iMDcyRlVhWm1tWnByNTVzR0ZLcVJtVE9lOFk4Y3cwZFhNa1BqVUoyRzJBY09iNVQ4TThxczM0NXJqL2kKZXNPeVAvSm14VXpIWUZFL3A2VHVTVDdVZi9Ib0xseFU3VzQ2bUlCZERJMk5xZFhWelY3ZmFxSG4xdWJuUGd2MwpvL2JpQ3RXdFVtN1dxb2l5enptSXBJeWd2WEd6R0o2Mk9CazZjajRoVHJRMFV1Rnk1TFhERlhGVkN4dm54S3hkClViWW9jZ3NLWW5GdmNINWFSbUlMcFk1R0xZL1pzcWMvUnJYVVA3blVtYml3WkMzdWNnRHMxSUUwb0o5QWZmSzIKc3J3Q3o5RW1rY2dDY3ltUWp1UTJSQi80cEd0WnI0Z1JtWWJGeG1XT253WjhDVzRxZmEwTVQ2bU5WOEZaOWtCVAo5a05CYzlVRzI4U3hQdlVRZWl6K0tKNml2RGo3WHlkVFR3azkvcjZvY3R1bml2UVhGajFoZG1KL2YyMGQrSmtMClNXSjk3R1VRTkQ4TFJhYXJzangwM0x3ZnRHR3QrTExzNjczL3YzWkxlK2QvWStKR2owcitpdDZUc0xRODh6TFIKaHZRVW5HQ2c3NklublRjajVFT2oKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdG90TDV0UFdjNjJ4TlRTYXNxdjZhaU1wU3MrRWxlVjZ6VHBycHhmQnZ2VDExNmpICm1XQlFlSmNubGhxRTVxMTBYNnRMeDRxTitza1o3MURlUEZsaHZ3WTlKU3F1eDNCUmRzSUEvV0ZWZXNyczZ4c20KTjRVWS9vS2lUU1RFQnpJQWY4U2dJZWJBbG95Zmordm9lVGozUWRGVk9KeEpITGN3VjB3Q21WMUk3cmR5VTllbQpiRXFxalp6QXlpQ3ZHdFM1NmdpZTM4bTdVZ3JMeFlsQi9zdlJOVGhWUDJ0dTRJSEszMkpZSFNWM1BPZ1hzOE01CmpGRUNDQWtiWEFiNEFUaXNpbnJ5aFUxM2o0emRuQW8rbUlRUnJXZFArWUgvRkpwcFY0SkE3UTFJRFI4L0VTVlcKUGNaVEpRZ2ZBVmdOSWFEejBacHhaY0RpZzNEbG9zNHNoWlpUdndJREFRQUJBb0lCQUZabGMxVWFxZ015RUE4bwppSmRNQWtjOXdRdGhVRlZKdVdkczRRckNtYlp4WmZIZU5pb0hoYzZ0YTlVRlZDV0JydlNndEVzSzdzdmxabHI0CklWYmF6d0tFUjJoUjNVc1RnOXI3VTFDWlFzWE5TWGkwN3MrVU5SSXdiZlNwRkFaN3lmU3U4VU5hWFloam9obVMKQkFOcnpNcmY4ci9LYUdnbzQ3NU5nV1ZvMjEzdnRCTVZEdlZmNVJOSkxrTUw4TGVxMGp2bmd4aWZJUENOUXRubQpTbW1Ua1ltSXMyYkVzcFVhQUhpajNzMWRjZUJtMGtNaEw5aWgyeHU1dVB2eCtlLzZxWEZGczZRN1JWOGxKTnlqCkhuQkhDVkp1eGtaWDg1K0REbERUUXk5SXMzaUx0ZmpvV09MRjRjanY2dVlnTHROUUk5MFZJL0Nac0FyZUtOeDYKVk5SMHZIRUNnWUVBNTdxT2NweVNMY2V0Q2l2b2hrWmhqUDlqOVJnQU1jUk01aDdKOTVaQ2dpTkVnQ0tkQ1NHbApsYmxoa0ZhdksraVpqVVoxcWQ1R3Z4MEFzQ1dheTNlRmtuaHBXMUgzTG1kWVp1SUh5ZW9zN3FReXc4SmFKdk5lCkphS21GcDNDRmJyWjhIK2ZIUVFaUWdwRFFuTHAyM2Y2MTV4eHM4TEprMVp4aWczbkF0NEtTT3NDZ1lFQXlhbnUKZzkxVTNkOFhHZ2o3WnAzN2E5bWNUWG1ISXBhblZtb2IrT3FvV1RacDJMY2dCeFVKT1hmR0RnQVoxTEt6dERCZAppQkppeFltdjJ2YnliRFE1U2M3Y2N0SVc1MmJnUTRxbkNKNGVhRHhidGorV3I1eFY2c1VzQmhzN3FGMnF3SG1hCmkzZlprRmpGSUlOeDFZYitZS0k1NGZQLzc5aU1ZQmxrSTdTajYzMENnWUJVTWhCM3pEUEF0b0JFNWRkQ2ttZjMKVndQMmxaWGNmenFCa2taSDB5eXZKQ2xMZFVnaGZUd3d2bjZZZHlhR2lhamhEK3pJbjU2TTZmaktCNS9LdGM2dQpmVm1xZUltYkxxbU1HQ3hFVFBXdWI3S1NOaGVUZDNHSnN5TXRySHhNY091bTJuZnhqdit1WXhRMUhKT2p6bUF4CjN3SGhFckV5KzRHZGE1ZTREdjBscVFLQmdHQmJNNzRKK1V6eUZZVzVHUFpWTWhhOEtYVFRSb0IrWDRKb3ZPalkKcG92SjloVTRtck1IbUJxL1lnQzZoNTBicmNYQS9rL1FDU1c5dmlydnA3R1AybmVyd2FXVFFLSmNnM2VDUG9GZAptOFhPWVR2WmNsU0NiSUw2cHloYnhzdVJ4YzZseS9RcjFlYWtvN3YvVWxybVg1RW9zbU9HUkpvRGJEOVdvb1IxCkFZVzVBb0dBQTI3SUJyWGt2VW4vS29SZVNvYkllZS9XcVRQOWgxUWlCcHJvbWJrcmx5L3VNd1g4UTkrYXJrR28KL3RPNURUQ3kvU0RDbGZ2cjkrRTMzQlREYi9jVXZSTHEwNDFybVp3T1dMSTgrUFN3UlVXOGYxLythZkZWQnVBNQp0T3hjYmJud045dVY1WUdRTDg3dHdEZ21ibEJXdUplc3pRS3NBL0cxU2J0V0lTVDNNaFE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
          - --project-id=turnkey-lacing-462106-b1
          - --location=us-central1
          - --cluster=autopilot-cluster-2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.3-gke.0@sha256:0e51d4ab84bac684012b2b52a2d38f3c340b4647f3879b77d70ae18ac4bb7271
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:07Z"
    generation: 2
    labels:
      app: managed-prometheus-rule-evaluator
      app.kubernetes.io/name: rule-evaluator
      app.kubernetes.io/version: 0.15.3
      pod-template-hash: 58fcf75478
    name: rule-evaluator-58fcf75478
    namespace: gke-gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: rule-evaluator
      uid: bda4f321-a8a0-492d-a2dc-23f3e8cdd583
    resourceVersion: "1749193219546191020"
    uid: 75c7cfb7-f7cf-4994-84df-4e77184b4c60
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/name: rule-evaluator
        pod-template-hash: 58fcf75478
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.0
        creationTimestamp: null
        labels:
          app: managed-prometheus-rule-evaluator
          app.kubernetes.io/name: rule-evaluator
          app.kubernetes.io/version: 0.15.3
          pod-template-hash: 58fcf75478
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --config-dir=/etc/rules
          - --config-dir-output=/prometheus/rules_out
          - --watched-dir=/etc/secrets
          - --reload-url=http://127.0.0.1:19092/-/reload
          - --ready-url=http://127.0.0.1:19092/-/ready
          - --listen-address=:19093
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19093
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
          - mountPath: /etc/rules
            name: rules
            readOnly: true
          - mountPath: /prometheus/rules_out
            name: rules-out
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --web.listen-address=:19092
          - --export.user-agent-mode=gke
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.3-gke.0@sha256:8306dabf64f36188eaedd022dca0362a4a833efec313e8c922543490e82887f4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: evaluator
          ports:
          - containerPort: 19092
            name: r-eval-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/rules
            name: rules-out
            readOnly: true
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: rule-evaluator
          name: config
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: rules-generated
          name: rules
        - emptyDir: {}
          name: rules-out
        - name: rules-secret
          secret:
            defaultMode: 420
            secretName: rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:23Z"
    generation: 1
    labels:
      app: antrea
      component: antrea-controller
      pod-template-hash: 5c98754db6
    name: antrea-controller-5c98754db6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: antrea-controller
      uid: 36541856-405b-4f71-a53a-16ede8e82d3c
    resourceVersion: "1749192443687471014"
    uid: da077729-569a-4b5b-89d8-42ec973c8236
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: antrea
        component: antrea-controller
        pod-template-hash: 5c98754db6
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
          prometheus.io/port: "10352"
          prometheus.io/scrape: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: antrea
          component: antrea-controller
          pod-template-hash: 5c98754db6
      spec:
        containers:
        - args:
          - --config
          - /etc/antrea/antrea-controller.conf
          - --logtostderr=true
          - --v=0
          command:
          - /antrea-controller
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SERVICEACCOUNT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/antrea:v1.4.0-gke.38@sha256:19d567d11297a5cc221df5557d4d98544d4fbef5b13c8eef01c5f732e9d694aa
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: api
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: antrea-controller
          ports:
          - containerPort: 10349
            name: api
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 200m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/antrea/antrea-controller.conf
            name: antrea-config
            readOnly: true
            subPath: antrea-controller.conf
          - mountPath: /var/run/antrea/antrea-controller-tls
            name: antrea-controller-tls
          - mountPath: /var/log/antrea
            name: host-var-log-antrea
          - mountPath: /var/run/antrea
            name: var-run-antrea
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/networkpolicy-antrea-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: networkpolicy-antrea-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241015_2300_RC0@sha256:1c838e782e8825f4c635ffa212833558976f16af700fbf4fcd9cf6103350d016
          imagePullPolicy: IfNotPresent
          name: networkpolicy-antrea-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: networkpolicy-antrea-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - chown 1000:1000 /var/run/antrea
          command:
          - /bin/bash
          - -c
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250307.00_p0@sha256:dbc4318b70cdc6429aa57c66ad3f3ef6480b5249b9ea0d9e87ee08157047b7f9
          imagePullPolicy: IfNotPresent
          name: antrea-self-sign-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/antrea
            name: var-run-antrea
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: antrea-controller
        serviceAccountName: antrea-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: var-run-antrea
        - configMap:
            defaultMode: 420
            name: antrea-config
          name: antrea-config
        - name: antrea-controller-tls
          secret:
            defaultMode: 256
            optional: true
            secretName: antrea-controller-tls
        - emptyDir: {}
          name: host-var-log-antrea
        - configMap:
            defaultMode: 420
            items:
            - key: networkpolicy-antrea-metrics-collector-config-data
              path: networkpolicy-antrea-metrics-collector-config-data.textproto
            name: networkpolicy-antrea-metrics-collector-config-map
          name: networkpolicy-antrea-metrics-collector-config-map-vol
  status:
    observedGeneration: 1
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:26Z"
    generation: 1
    labels:
      k8s-app: antrea-controller-autoscaler
      pod-template-hash: 789fd58764
    name: antrea-controller-horizontal-autoscaler-789fd58764
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: antrea-controller-horizontal-autoscaler
      uid: 0daac81f-a2ac-4d2a-bbdf-134c1958b054
    resourceVersion: "1749193221710959013"
    uid: 5e4f8668-281d-4cfa-b846-3d868ae0ccf5
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: antrea-controller-autoscaler
        pod-template-hash: 789fd58764
    template:
      metadata:
        annotations:
          components.gke.io/component-name: networkpolicy-antrea
          components.gke.io/component-version: 0.4.3
        creationTimestamp: null
        labels:
          k8s-app: antrea-controller-autoscaler
          pod-template-hash: 789fd58764
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=antrea-controller-horizontal-autoscaler
          - --target=deployment/antrea-controller
          - --nodelabels=kubernetes.io/os=windows
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.0-gke.11@sha256:af852676a9858afc2842969fb5a204b41368ba41e4f314da179a01b633f64b25
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: antrea-cpha
        serviceAccountName: antrea-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:18Z"
    generation: 1
    labels:
      component: netd
      gke-app: egress-nat-controller
      pod-template-hash: 5f6bcdc9dd
    name: egress-nat-controller-5f6bcdc9dd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: egress-nat-controller
      uid: 3ba13078-54c4-48d2-96a6-eafe86dfd2bf
    resourceVersion: "1749193215649119021"
    uid: 6171a05a-a9da-40aa-b76c-13ab4047aaca
  spec:
    replicas: 1
    selector:
      matchLabels:
        gke-app: egress-nat-controller
        pod-template-hash: 5f6bcdc9dd
    template:
      metadata:
        annotations:
          components.gke.io/component-name: netd-combined
          components.gke.io/component-version: 12.3.0
        creationTimestamp: null
        labels:
          component: netd
          gke-app: egress-nat-controller
          pod-template-hash: 5f6bcdc9dd
      spec:
        containers:
        - args:
          - --pod-cidrs=10.35.128.0/17
          - --service-cidrs=34.118.224.0/20
          - --node-cidrs=10.128.0.0/20
          - --cluster-short-hash=0211d95b
          env:
          - name: CLUSTER_PROJECT
            value: "646535140553"
          - name: CLUSTER_LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: egress-nat-controller
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/egress-nat-controller:v0.2.18-gke.0@sha256:9f422cab20ad1c06bf6d0a946a2b4c5a8b6fa093b0decb34199c0effe3006f9e
          imagePullPolicy: IfNotPresent
          name: egress-nat-controller
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: egress-nat-controller
        serviceAccountName: egress-nat-controller
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:45:59Z"
    generation: 1
    labels:
      k8s-app: event-exporter
      pod-template-hash: 6b8fd586f8
      version: v0.4.0
    name: event-exporter-gke-6b8fd586f8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-gke
      uid: af7aed5e-263d-44e0-8ae0-ceeeb79a9a68
    resourceVersion: "1749193226736127010"
    uid: 5ae42636-890b-47ab-b99c-eb6cb698d155
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: 6b8fd586f8
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.32.1-gke.1
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: 6b8fd586f8
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:v0.5.0-gke.2@sha256:48cba84b26b6829fcd123bb08a8e56c389887ddba3a9b45d2283a20e2106b046
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.21@sha256:115324fd69b07d97b24615e31d4d7a42a6043b6d2ac4bf7474466dd3659f2170
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:05Z"
    generation: 1
    labels:
      component: filestorecsi
      k8s-app: filestore-lock-release-controller
      pod-template-hash: 6cbd4f7ff4
    name: filestore-lock-release-controller-6cbd4f7ff4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: filestore-lock-release-controller
      uid: 691f09a8-bfd8-4f81-b7e0-bfefd4633ca8
    resourceVersion: "1749193216770335021"
    uid: c78aeb7f-ce5f-428f-80ec-4ed2696078c5
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: filestore-lock-release-controller
        pod-template-hash: 6cbd4f7ff4
    template:
      metadata:
        annotations:
          components.gke.io/component-name: filestorecsi
          components.gke.io/component-version: 0.15.12
        creationTimestamp: null
        labels:
          component: filestorecsi
          k8s-app: filestore-lock-release-controller
          pod-template-hash: 6cbd4f7ff4
      spec:
        containers:
        - args:
          - --v=5
          - --http-endpoint=:22027
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-filestore-csi-driver-lockrelease:v1.8.0-gke.16@sha256:857f3ffa4fd2aa676ac24f07eef423b76f47da35518dda6132a603c984837ef7
          imagePullPolicy: IfNotPresent
          name: filestore-lock-release-controller
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: filestorecsi-lockrelease-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/filestorecsi-lockrelease-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241103_2300_RC0@sha256:0414d76bb198009202c165d97b646d57711461b8c8381541e2cb6989cce14f7f
          imagePullPolicy: IfNotPresent
          name: filestorecsi-lockrelease-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: filestorecsi-lockrelease-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: filestore-lockrelease-controller-sa
        serviceAccountName: filestore-lockrelease-controller-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: filestorecsi-lockrelease-metrics-collector-config-data
              path: filestorecsi-lockrelease-metrics-collector-config-data.textproto
            name: filestorecsi-lockrelease-metrics-collector-config-map
          name: filestorecsi-lockrelease-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:52Z"
    generation: 1
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: "6594574554"
    name: konnectivity-agent-6594574554
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: c9a84a86-f0e5-4d31-9c28-160595bb6f7f
    resourceVersion: "1749193218878239005"
    uid: 10c661ea-7eee-471f-9823-4a982478037a
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
        pod-template-hash: "6594574554"
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.13.10
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
          pod-template-hash: "6594574554"
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=10.128.0.4
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.0@sha256:95108ee2e0e198088c2a9852b7487d8bc26412d5f5e23106c49e6a3644d3d730
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240717_2300_RC0@sha256:d460e6b5088332f62b990f8a1f7bf6d9eca7c3f41cb974e3db493d6b0fc4ad70
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:54Z"
    generation: 1
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: 794fcd5659
    name: konnectivity-agent-autoscaler-794fcd5659
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent-autoscaler
      uid: 8e4682e8-e5ff-4597-81a4-6a0e0b8ae7a6
    resourceVersion: "1749193213610079005"
    uid: db048e2f-6ec6-4aa6-82b6-f9206a204935
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
        pod-template-hash: 794fcd5659
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.13.10
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
          pod-template-hash: 794fcd5659
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.6@sha256:0c3e6735169688e40655864255ce1c680d6d2a6e6daebb1e249084eabaadcf60
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:45:21Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 7786f97d64
    name: kube-dns-7786f97d64
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns
      uid: 4e639dda-9c0b-4a50-a362-a6881ff3d916
    resourceVersion: "1749193225045647008"
    uid: a51ac8aa-aa14-4023-8a27-3add58e5c32d
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 7786f97d64
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 32.7.3
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 7786f97d64
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.25.0-gke.11@sha256:263ab80ea1ed319e6c6e21b19c12a87a9a46558d97d7e4784e06704f579d0019
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.25.0-gke.11@sha256:07ce37a72dabd872cf8369d0b642075ea3364d0a5a1270562ae7695cfa38deb6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.25.0-gke.11@sha256:bcfd3f3fb37550889a6a30eaa788c35042f82317369286a12a8a487ea5cb64ea
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250415_2300_RC0@sha256:ba0c53c89a2f6d634dd79754c29d29fe2072993eff7cb84e9a94c115197ab7fe
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:46:57Z"
    generation: 1
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 64f77fbb96
    name: kube-dns-autoscaler-64f77fbb96
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns-autoscaler
      uid: 9dd26af3-5a4f-4717-892e-bd1a72e4b969
    resourceVersion: "1749193213924495017"
    uid: 19f4e579-3fd3-4215-9eea-260f0972cedb
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
        pod-template-hash: 64f77fbb96
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 32.7.3
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
          pod-template-hash: 64f77fbb96
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.4@sha256:9d9d5a87d33b18cd35821eda1eba37d737f3003ea08c5436d285c56a8f0cb9ab
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:00Z"
    generation: 1
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: 7b587fc684
    name: l7-default-backend-7b587fc684
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: l7-default-backend
      uid: 9826dd37-ebdf-4a47-9709-ab25fa52bbcb
    resourceVersion: "1749193216984671006"
    uid: c10f44ed-36ae-4bd7-aad7-3ed500753aa9
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: glbc
        pod-template-hash: 7b587fc684
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.34.2-gke.0
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
          pod-template-hash: 7b587fc684
      spec:
        automountServiceAccountToken: false
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.34.2@sha256:79870c8c149fd62f93caa1fb33dcc20d0a13e2badd3f74775c1cf82ec5e5b2b2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-06-06T06:47:17Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 6797fd8c9d
      version: v1.32.2
    name: metrics-server-v1.32.2-6797fd8c9d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server-v1.32.2
      uid: 6b07e963-aeca-4b1a-93a0-0a9131c95fd8
    resourceVersion: "1749193281765775012"
    uid: af083495-af78-4972-a264-87c6e30205d1
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 6797fd8c9d
        version: v1.32.2
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.32.2-gke.2
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 6797fd8c9d
          version: v1.32.2
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.40@sha256:1a927071b863890cb36470a8e3c1093af63a7f29714c5d6e103167670da3e1f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 43m
              memory: 55Mi
            requests:
              cpu: 43m
              memory: 55Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-06T06:47:12Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      pod-template-hash: 784cfcf974
      version: v1.32.2
    name: metrics-server-v1.32.2-784cfcf974
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server-v1.32.2
      uid: 6b07e963-aeca-4b1a-93a0-0a9131c95fd8
    resourceVersion: "1749193282070687001"
    uid: b5203949-1a52-4d25-b93b-e8d304ebf8ac
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 784cfcf974
        version: v1.32.2
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.32.2-gke.2
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 784cfcf974
          version: v1.32.2
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.40@sha256:1a927071b863890cb36470a8e3c1093af63a7f29714c5d6e103167670da3e1f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      components.gke.io/layer: addon
    creationTimestamp: "2025-06-06T06:47:07Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gke-gmp-system
    resourceVersion: "1749193220867151004"
    uid: f0e3b895-51c5-40e0-98d2-eb2b34389225
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: managed-prometheus-alertmanager
        app.kubernetes.io/name: alertmanager
    serviceName: alertmanager
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.3-gke.0
        creationTimestamp: null
        labels:
          app: managed-prometheus-alertmanager
          app.kubernetes.io/name: alertmanager
          app.kubernetes.io/version: 0.15.3
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: false
        containers:
        - args:
          - --config.file=/alertmanager/config_out/config.yaml
          - --storage.path=/alertmanager-data
          - --cluster.listen-address=[$(POD_IP)]:9094
          - --web.listen-address=:9093
          - --log.format=json
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/alertmanager:v0.27.0-gmp.3-gke.0@sha256:fc715c21bcf6aace53af0ca77b4dd1f6b67eed1427caeb1f4dd0f9475852316a
          imagePullPolicy: IfNotPresent
          name: alertmanager
          ports:
          - containerPort: 9093
            name: alertmanager
            protocol: TCP
          resources:
            limits:
              memory: 128M
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
            readOnly: true
          - mountPath: /alertmanager-data
            name: alertmanager-data
        - args:
          - --config-file=/alertmanager/config.yaml
          - --config-file-output=/alertmanager/config_out/config.yaml
          - --reload-url=http://127.0.0.1:9093/-/reload
          - --ready-url=http://127.0.0.1:9093/-/ready
          - --listen-address=:19091
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.3-gke.0@sha256:084a78cf04fc50523ba37639d3cac8d33a6a07de5cf641c85b9c9ef71f653d51
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19091
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager
            name: config
            readOnly: true
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - 'touch /alertmanager/config_out/config.yaml && echo -e "receivers:\n  -
            name: noop\nroute:\n  receiver: noop" > alertmanager/config_out/config.yaml'
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250407.00_p0@sha256:b903ad51976ccd68a817f445c5b6df8bf3655bfd1b30ca989472f7a99f930fc5
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: alertmanager
        - emptyDir: {}
          name: alertmanager-data
        - emptyDir: {}
          name: alertmanager-config
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 0
    collisionCount: 0
    currentRevision: alertmanager-6b46bb6486
    observedGeneration: 2
    replicas: 0
    updateRevision: alertmanager-6b46bb6486
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      components.gke.io/layer: addon
    creationTimestamp: "2025-06-06T06:45:41Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app.kubernetes.io/name: gke-managed-kube-state-metrics
    name: kube-state-metrics
    namespace: gke-managed-cim
    resourceVersion: "1749193236767103013"
    uid: 9ecb598b-282d-43ca-9b1f-8f12e9081c1b
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: gke-managed-kube-state-metrics
    serviceName: kube-state-metrics
    template:
      metadata:
        annotations:
          components.gke.io/component-name: cluster-infra-metrics
          components.gke.io/component-version: 1.32.2-gke.2
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: gke-managed-kube-state-metrics
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --pod=$(POD_NAME)
          - --pod-namespace=$(POD_NAMESPACE)
          - --port=8080
          - --telemetry-port=8081
          - --resources=pods,persistentvolumes,persistentvolumeclaims,horizontalpodautoscalers,daemonsets,deployments,statefulsets
          - --metric-allowlist=kube_persistentvolume_capacity_bytes,kube_persistentvolume_status_phase,kube_persistentvolume_claim_ref,kube_persistentvolume_info,kube_persistentvolumeclaim_info,kube_persistentvolumeclaim_resource_requests_storage_bytes,kube_persistentvolumeclaim_status_phase,kube_pod_status_phase,kube_pod_container_status_waiting_reason,kube_pod_container_status_ready,kube_pod_status_unschedulable,kube_deployment_spec_replicas,kube_deployment_status_replicas_available,kube_deployment_status_replicas_updated,kube_statefulset_replicas,kube_statefulset_status_replicas_ready,kube_statefulset_status_replicas_updated,kube_daemonset_status_number_misscheduled,kube_daemonset_status_number_ready,kube_daemonset_status_desired_number_scheduled,kube_daemonset_status_updated_number_scheduled,kube_horizontalpodautoscaler_status_desired_replicas,kube_horizontalpodautoscaler_status_current_replicas,kube_horizontalpodautoscaler_spec_target_metric,kube_horizontalpodautoscaler_spec_min_replicas,kube_horizontalpodautoscaler_spec_max_replicas,kube_horizontalpodautoscaler_status_condition,kube_jobset_specified_replicas,kube_jobset_ready_replicas,kube_jobset_succeeded_replicas,kube_jobset_failed_replicas,kube_jobset_active_replicas,kube_jobset_suspended_replicas,kube_jobset_status_condition
          - --namespaces-denylist=kube-system,kube-node-lease,gmp-system,gke-gmp-system,gke-managed-system,gke-managed-cim
          - --custom-resource-state-config-file=/conf/custom-resource-state-config.yaml
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics:v2.14.0-gke.7@sha256:a04b8b5132e3c5148a420d93a4e9ea6d0f0faa14ac01852b23467d0573ca64b4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: k8s-objects
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kube-state-metrics-cr-metrics-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "646535140553"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: autopilot-cluster-2
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: ksm-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/ksm-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20241204_2300_RC0@sha256:2b0c03b2bb9415fe38c799f9088e0c9fa6407c06e357cf767903fd16cbfc65b9
          imagePullPolicy: IfNotPresent
          name: ksm-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: ksm-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-state-metrics
        serviceAccountName: kube-state-metrics
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: ksm-metrics-collector-config-data
              path: ksm-metrics-collector-config-data.textproto
            name: ksm-metrics-collector-config-map
          name: ksm-metrics-collector-config-map-vol
        - configMap:
            defaultMode: 420
            items:
            - key: custom-resource-state-config.yaml
              path: custom-resource-state-config.yaml
            name: kube-state-metrics-cr-metrics
          name: kube-state-metrics-cr-metrics-vol
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: kube-state-metrics-55674c75b4
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: kube-state-metrics-55674c75b4
    updatedReplicas: 1
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      components.gke.io/component-name: cluster-infra-metrics
      components.gke.io/component-version: 1.32.2-gke.2
      components.gke.io/layer: addon
    creationTimestamp: "2025-06-06T06:45:42Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: kube-state-metrics
    namespace: gke-managed-cim
    resourceVersion: "1749205621559935018"
    uid: e20d260c-86fb-46e3-be6b-0657948f8e9c
  spec:
    behavior:
      scaleDown:
        policies:
        - periodSeconds: 1800
          type: Pods
          value: 1
        selectPolicy: Max
        stabilizationWindowSeconds: 3600
      scaleUp:
        policies:
        - periodSeconds: 300
          type: Pods
          value: 1
        selectPolicy: Max
        stabilizationWindowSeconds: 900
    maxReplicas: 10
    metrics:
    - resource:
        name: memory
        target:
          averageValue: 400Mi
          type: AverageValue
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: StatefulSet
      name: kube-state-metrics
  status:
    conditions:
    - lastTransitionTime: "2025-06-06T06:48:15Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-06-06T07:01:24Z"
      message: the HPA was able to successfully calculate a replica count from memory
        resource
      reason: ValidMetricFound
      status: "True"
      type: ScalingActive
    - lastTransitionTime: "2025-06-06T06:48:15Z"
      message: the desired count is within the acceptable range
      reason: DesiredWithinRange
      status: "False"
      type: ScalingLimited
    currentMetrics:
    - resource:
        current:
          averageValue: "35930112"
        name: memory
      type: Resource
    currentReplicas: 1
    desiredReplicas: 1
kind: List
metadata:
  resourceVersion: ""
